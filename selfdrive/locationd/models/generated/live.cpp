#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7867863003839610759) {
   out_7867863003839610759[0] = 0;
   out_7867863003839610759[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7867863003839610759[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7867863003839610759[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7867863003839610759[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7867863003839610759[5] = -sin(in_vec[1]);
   out_7867863003839610759[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7867863003839610759[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7867863003839610759[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7867863003839610759[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7867863003839610759[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7867863003839610759[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7867863003839610759[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7867863003839610759[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7867863003839610759[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7867863003839610759[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7867863003839610759[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7867863003839610759[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6614048919106816820) {
   out_6614048919106816820[0] = delta_x[0] + nom_x[0];
   out_6614048919106816820[1] = delta_x[1] + nom_x[1];
   out_6614048919106816820[2] = delta_x[2] + nom_x[2];
   out_6614048919106816820[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6614048919106816820[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6614048919106816820[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6614048919106816820[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6614048919106816820[7] = delta_x[6] + nom_x[7];
   out_6614048919106816820[8] = delta_x[7] + nom_x[8];
   out_6614048919106816820[9] = delta_x[8] + nom_x[9];
   out_6614048919106816820[10] = delta_x[9] + nom_x[10];
   out_6614048919106816820[11] = delta_x[10] + nom_x[11];
   out_6614048919106816820[12] = delta_x[11] + nom_x[12];
   out_6614048919106816820[13] = delta_x[12] + nom_x[13];
   out_6614048919106816820[14] = delta_x[13] + nom_x[14];
   out_6614048919106816820[15] = delta_x[14] + nom_x[15];
   out_6614048919106816820[16] = delta_x[15] + nom_x[16];
   out_6614048919106816820[17] = delta_x[16] + nom_x[17];
   out_6614048919106816820[18] = delta_x[17] + nom_x[18];
   out_6614048919106816820[19] = delta_x[18] + nom_x[19];
   out_6614048919106816820[20] = delta_x[19] + nom_x[20];
   out_6614048919106816820[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2996437008730679516) {
   out_2996437008730679516[0] = -nom_x[0] + true_x[0];
   out_2996437008730679516[1] = -nom_x[1] + true_x[1];
   out_2996437008730679516[2] = -nom_x[2] + true_x[2];
   out_2996437008730679516[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2996437008730679516[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2996437008730679516[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2996437008730679516[6] = -nom_x[7] + true_x[7];
   out_2996437008730679516[7] = -nom_x[8] + true_x[8];
   out_2996437008730679516[8] = -nom_x[9] + true_x[9];
   out_2996437008730679516[9] = -nom_x[10] + true_x[10];
   out_2996437008730679516[10] = -nom_x[11] + true_x[11];
   out_2996437008730679516[11] = -nom_x[12] + true_x[12];
   out_2996437008730679516[12] = -nom_x[13] + true_x[13];
   out_2996437008730679516[13] = -nom_x[14] + true_x[14];
   out_2996437008730679516[14] = -nom_x[15] + true_x[15];
   out_2996437008730679516[15] = -nom_x[16] + true_x[16];
   out_2996437008730679516[16] = -nom_x[17] + true_x[17];
   out_2996437008730679516[17] = -nom_x[18] + true_x[18];
   out_2996437008730679516[18] = -nom_x[19] + true_x[19];
   out_2996437008730679516[19] = -nom_x[20] + true_x[20];
   out_2996437008730679516[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5938837053370187441) {
   out_5938837053370187441[0] = 1.0;
   out_5938837053370187441[1] = 0;
   out_5938837053370187441[2] = 0;
   out_5938837053370187441[3] = 0;
   out_5938837053370187441[4] = 0;
   out_5938837053370187441[5] = 0;
   out_5938837053370187441[6] = 0;
   out_5938837053370187441[7] = 0;
   out_5938837053370187441[8] = 0;
   out_5938837053370187441[9] = 0;
   out_5938837053370187441[10] = 0;
   out_5938837053370187441[11] = 0;
   out_5938837053370187441[12] = 0;
   out_5938837053370187441[13] = 0;
   out_5938837053370187441[14] = 0;
   out_5938837053370187441[15] = 0;
   out_5938837053370187441[16] = 0;
   out_5938837053370187441[17] = 0;
   out_5938837053370187441[18] = 0;
   out_5938837053370187441[19] = 0;
   out_5938837053370187441[20] = 0;
   out_5938837053370187441[21] = 0;
   out_5938837053370187441[22] = 1.0;
   out_5938837053370187441[23] = 0;
   out_5938837053370187441[24] = 0;
   out_5938837053370187441[25] = 0;
   out_5938837053370187441[26] = 0;
   out_5938837053370187441[27] = 0;
   out_5938837053370187441[28] = 0;
   out_5938837053370187441[29] = 0;
   out_5938837053370187441[30] = 0;
   out_5938837053370187441[31] = 0;
   out_5938837053370187441[32] = 0;
   out_5938837053370187441[33] = 0;
   out_5938837053370187441[34] = 0;
   out_5938837053370187441[35] = 0;
   out_5938837053370187441[36] = 0;
   out_5938837053370187441[37] = 0;
   out_5938837053370187441[38] = 0;
   out_5938837053370187441[39] = 0;
   out_5938837053370187441[40] = 0;
   out_5938837053370187441[41] = 0;
   out_5938837053370187441[42] = 0;
   out_5938837053370187441[43] = 0;
   out_5938837053370187441[44] = 1.0;
   out_5938837053370187441[45] = 0;
   out_5938837053370187441[46] = 0;
   out_5938837053370187441[47] = 0;
   out_5938837053370187441[48] = 0;
   out_5938837053370187441[49] = 0;
   out_5938837053370187441[50] = 0;
   out_5938837053370187441[51] = 0;
   out_5938837053370187441[52] = 0;
   out_5938837053370187441[53] = 0;
   out_5938837053370187441[54] = 0;
   out_5938837053370187441[55] = 0;
   out_5938837053370187441[56] = 0;
   out_5938837053370187441[57] = 0;
   out_5938837053370187441[58] = 0;
   out_5938837053370187441[59] = 0;
   out_5938837053370187441[60] = 0;
   out_5938837053370187441[61] = 0;
   out_5938837053370187441[62] = 0;
   out_5938837053370187441[63] = 0;
   out_5938837053370187441[64] = 0;
   out_5938837053370187441[65] = 0;
   out_5938837053370187441[66] = -0.5*state[4];
   out_5938837053370187441[67] = -0.5*state[5];
   out_5938837053370187441[68] = -0.5*state[6];
   out_5938837053370187441[69] = 0;
   out_5938837053370187441[70] = 0;
   out_5938837053370187441[71] = 0;
   out_5938837053370187441[72] = 0;
   out_5938837053370187441[73] = 0;
   out_5938837053370187441[74] = 0;
   out_5938837053370187441[75] = 0;
   out_5938837053370187441[76] = 0;
   out_5938837053370187441[77] = 0;
   out_5938837053370187441[78] = 0;
   out_5938837053370187441[79] = 0;
   out_5938837053370187441[80] = 0;
   out_5938837053370187441[81] = 0;
   out_5938837053370187441[82] = 0;
   out_5938837053370187441[83] = 0;
   out_5938837053370187441[84] = 0;
   out_5938837053370187441[85] = 0;
   out_5938837053370187441[86] = 0;
   out_5938837053370187441[87] = 0.5*state[3];
   out_5938837053370187441[88] = 0.5*state[6];
   out_5938837053370187441[89] = -0.5*state[5];
   out_5938837053370187441[90] = 0;
   out_5938837053370187441[91] = 0;
   out_5938837053370187441[92] = 0;
   out_5938837053370187441[93] = 0;
   out_5938837053370187441[94] = 0;
   out_5938837053370187441[95] = 0;
   out_5938837053370187441[96] = 0;
   out_5938837053370187441[97] = 0;
   out_5938837053370187441[98] = 0;
   out_5938837053370187441[99] = 0;
   out_5938837053370187441[100] = 0;
   out_5938837053370187441[101] = 0;
   out_5938837053370187441[102] = 0;
   out_5938837053370187441[103] = 0;
   out_5938837053370187441[104] = 0;
   out_5938837053370187441[105] = 0;
   out_5938837053370187441[106] = 0;
   out_5938837053370187441[107] = 0;
   out_5938837053370187441[108] = -0.5*state[6];
   out_5938837053370187441[109] = 0.5*state[3];
   out_5938837053370187441[110] = 0.5*state[4];
   out_5938837053370187441[111] = 0;
   out_5938837053370187441[112] = 0;
   out_5938837053370187441[113] = 0;
   out_5938837053370187441[114] = 0;
   out_5938837053370187441[115] = 0;
   out_5938837053370187441[116] = 0;
   out_5938837053370187441[117] = 0;
   out_5938837053370187441[118] = 0;
   out_5938837053370187441[119] = 0;
   out_5938837053370187441[120] = 0;
   out_5938837053370187441[121] = 0;
   out_5938837053370187441[122] = 0;
   out_5938837053370187441[123] = 0;
   out_5938837053370187441[124] = 0;
   out_5938837053370187441[125] = 0;
   out_5938837053370187441[126] = 0;
   out_5938837053370187441[127] = 0;
   out_5938837053370187441[128] = 0;
   out_5938837053370187441[129] = 0.5*state[5];
   out_5938837053370187441[130] = -0.5*state[4];
   out_5938837053370187441[131] = 0.5*state[3];
   out_5938837053370187441[132] = 0;
   out_5938837053370187441[133] = 0;
   out_5938837053370187441[134] = 0;
   out_5938837053370187441[135] = 0;
   out_5938837053370187441[136] = 0;
   out_5938837053370187441[137] = 0;
   out_5938837053370187441[138] = 0;
   out_5938837053370187441[139] = 0;
   out_5938837053370187441[140] = 0;
   out_5938837053370187441[141] = 0;
   out_5938837053370187441[142] = 0;
   out_5938837053370187441[143] = 0;
   out_5938837053370187441[144] = 0;
   out_5938837053370187441[145] = 0;
   out_5938837053370187441[146] = 0;
   out_5938837053370187441[147] = 0;
   out_5938837053370187441[148] = 0;
   out_5938837053370187441[149] = 0;
   out_5938837053370187441[150] = 0;
   out_5938837053370187441[151] = 0;
   out_5938837053370187441[152] = 0;
   out_5938837053370187441[153] = 1.0;
   out_5938837053370187441[154] = 0;
   out_5938837053370187441[155] = 0;
   out_5938837053370187441[156] = 0;
   out_5938837053370187441[157] = 0;
   out_5938837053370187441[158] = 0;
   out_5938837053370187441[159] = 0;
   out_5938837053370187441[160] = 0;
   out_5938837053370187441[161] = 0;
   out_5938837053370187441[162] = 0;
   out_5938837053370187441[163] = 0;
   out_5938837053370187441[164] = 0;
   out_5938837053370187441[165] = 0;
   out_5938837053370187441[166] = 0;
   out_5938837053370187441[167] = 0;
   out_5938837053370187441[168] = 0;
   out_5938837053370187441[169] = 0;
   out_5938837053370187441[170] = 0;
   out_5938837053370187441[171] = 0;
   out_5938837053370187441[172] = 0;
   out_5938837053370187441[173] = 0;
   out_5938837053370187441[174] = 0;
   out_5938837053370187441[175] = 1.0;
   out_5938837053370187441[176] = 0;
   out_5938837053370187441[177] = 0;
   out_5938837053370187441[178] = 0;
   out_5938837053370187441[179] = 0;
   out_5938837053370187441[180] = 0;
   out_5938837053370187441[181] = 0;
   out_5938837053370187441[182] = 0;
   out_5938837053370187441[183] = 0;
   out_5938837053370187441[184] = 0;
   out_5938837053370187441[185] = 0;
   out_5938837053370187441[186] = 0;
   out_5938837053370187441[187] = 0;
   out_5938837053370187441[188] = 0;
   out_5938837053370187441[189] = 0;
   out_5938837053370187441[190] = 0;
   out_5938837053370187441[191] = 0;
   out_5938837053370187441[192] = 0;
   out_5938837053370187441[193] = 0;
   out_5938837053370187441[194] = 0;
   out_5938837053370187441[195] = 0;
   out_5938837053370187441[196] = 0;
   out_5938837053370187441[197] = 1.0;
   out_5938837053370187441[198] = 0;
   out_5938837053370187441[199] = 0;
   out_5938837053370187441[200] = 0;
   out_5938837053370187441[201] = 0;
   out_5938837053370187441[202] = 0;
   out_5938837053370187441[203] = 0;
   out_5938837053370187441[204] = 0;
   out_5938837053370187441[205] = 0;
   out_5938837053370187441[206] = 0;
   out_5938837053370187441[207] = 0;
   out_5938837053370187441[208] = 0;
   out_5938837053370187441[209] = 0;
   out_5938837053370187441[210] = 0;
   out_5938837053370187441[211] = 0;
   out_5938837053370187441[212] = 0;
   out_5938837053370187441[213] = 0;
   out_5938837053370187441[214] = 0;
   out_5938837053370187441[215] = 0;
   out_5938837053370187441[216] = 0;
   out_5938837053370187441[217] = 0;
   out_5938837053370187441[218] = 0;
   out_5938837053370187441[219] = 1.0;
   out_5938837053370187441[220] = 0;
   out_5938837053370187441[221] = 0;
   out_5938837053370187441[222] = 0;
   out_5938837053370187441[223] = 0;
   out_5938837053370187441[224] = 0;
   out_5938837053370187441[225] = 0;
   out_5938837053370187441[226] = 0;
   out_5938837053370187441[227] = 0;
   out_5938837053370187441[228] = 0;
   out_5938837053370187441[229] = 0;
   out_5938837053370187441[230] = 0;
   out_5938837053370187441[231] = 0;
   out_5938837053370187441[232] = 0;
   out_5938837053370187441[233] = 0;
   out_5938837053370187441[234] = 0;
   out_5938837053370187441[235] = 0;
   out_5938837053370187441[236] = 0;
   out_5938837053370187441[237] = 0;
   out_5938837053370187441[238] = 0;
   out_5938837053370187441[239] = 0;
   out_5938837053370187441[240] = 0;
   out_5938837053370187441[241] = 1.0;
   out_5938837053370187441[242] = 0;
   out_5938837053370187441[243] = 0;
   out_5938837053370187441[244] = 0;
   out_5938837053370187441[245] = 0;
   out_5938837053370187441[246] = 0;
   out_5938837053370187441[247] = 0;
   out_5938837053370187441[248] = 0;
   out_5938837053370187441[249] = 0;
   out_5938837053370187441[250] = 0;
   out_5938837053370187441[251] = 0;
   out_5938837053370187441[252] = 0;
   out_5938837053370187441[253] = 0;
   out_5938837053370187441[254] = 0;
   out_5938837053370187441[255] = 0;
   out_5938837053370187441[256] = 0;
   out_5938837053370187441[257] = 0;
   out_5938837053370187441[258] = 0;
   out_5938837053370187441[259] = 0;
   out_5938837053370187441[260] = 0;
   out_5938837053370187441[261] = 0;
   out_5938837053370187441[262] = 0;
   out_5938837053370187441[263] = 1.0;
   out_5938837053370187441[264] = 0;
   out_5938837053370187441[265] = 0;
   out_5938837053370187441[266] = 0;
   out_5938837053370187441[267] = 0;
   out_5938837053370187441[268] = 0;
   out_5938837053370187441[269] = 0;
   out_5938837053370187441[270] = 0;
   out_5938837053370187441[271] = 0;
   out_5938837053370187441[272] = 0;
   out_5938837053370187441[273] = 0;
   out_5938837053370187441[274] = 0;
   out_5938837053370187441[275] = 0;
   out_5938837053370187441[276] = 0;
   out_5938837053370187441[277] = 0;
   out_5938837053370187441[278] = 0;
   out_5938837053370187441[279] = 0;
   out_5938837053370187441[280] = 0;
   out_5938837053370187441[281] = 0;
   out_5938837053370187441[282] = 0;
   out_5938837053370187441[283] = 0;
   out_5938837053370187441[284] = 0;
   out_5938837053370187441[285] = 1.0;
   out_5938837053370187441[286] = 0;
   out_5938837053370187441[287] = 0;
   out_5938837053370187441[288] = 0;
   out_5938837053370187441[289] = 0;
   out_5938837053370187441[290] = 0;
   out_5938837053370187441[291] = 0;
   out_5938837053370187441[292] = 0;
   out_5938837053370187441[293] = 0;
   out_5938837053370187441[294] = 0;
   out_5938837053370187441[295] = 0;
   out_5938837053370187441[296] = 0;
   out_5938837053370187441[297] = 0;
   out_5938837053370187441[298] = 0;
   out_5938837053370187441[299] = 0;
   out_5938837053370187441[300] = 0;
   out_5938837053370187441[301] = 0;
   out_5938837053370187441[302] = 0;
   out_5938837053370187441[303] = 0;
   out_5938837053370187441[304] = 0;
   out_5938837053370187441[305] = 0;
   out_5938837053370187441[306] = 0;
   out_5938837053370187441[307] = 1.0;
   out_5938837053370187441[308] = 0;
   out_5938837053370187441[309] = 0;
   out_5938837053370187441[310] = 0;
   out_5938837053370187441[311] = 0;
   out_5938837053370187441[312] = 0;
   out_5938837053370187441[313] = 0;
   out_5938837053370187441[314] = 0;
   out_5938837053370187441[315] = 0;
   out_5938837053370187441[316] = 0;
   out_5938837053370187441[317] = 0;
   out_5938837053370187441[318] = 0;
   out_5938837053370187441[319] = 0;
   out_5938837053370187441[320] = 0;
   out_5938837053370187441[321] = 0;
   out_5938837053370187441[322] = 0;
   out_5938837053370187441[323] = 0;
   out_5938837053370187441[324] = 0;
   out_5938837053370187441[325] = 0;
   out_5938837053370187441[326] = 0;
   out_5938837053370187441[327] = 0;
   out_5938837053370187441[328] = 0;
   out_5938837053370187441[329] = 1.0;
   out_5938837053370187441[330] = 0;
   out_5938837053370187441[331] = 0;
   out_5938837053370187441[332] = 0;
   out_5938837053370187441[333] = 0;
   out_5938837053370187441[334] = 0;
   out_5938837053370187441[335] = 0;
   out_5938837053370187441[336] = 0;
   out_5938837053370187441[337] = 0;
   out_5938837053370187441[338] = 0;
   out_5938837053370187441[339] = 0;
   out_5938837053370187441[340] = 0;
   out_5938837053370187441[341] = 0;
   out_5938837053370187441[342] = 0;
   out_5938837053370187441[343] = 0;
   out_5938837053370187441[344] = 0;
   out_5938837053370187441[345] = 0;
   out_5938837053370187441[346] = 0;
   out_5938837053370187441[347] = 0;
   out_5938837053370187441[348] = 0;
   out_5938837053370187441[349] = 0;
   out_5938837053370187441[350] = 0;
   out_5938837053370187441[351] = 1.0;
   out_5938837053370187441[352] = 0;
   out_5938837053370187441[353] = 0;
   out_5938837053370187441[354] = 0;
   out_5938837053370187441[355] = 0;
   out_5938837053370187441[356] = 0;
   out_5938837053370187441[357] = 0;
   out_5938837053370187441[358] = 0;
   out_5938837053370187441[359] = 0;
   out_5938837053370187441[360] = 0;
   out_5938837053370187441[361] = 0;
   out_5938837053370187441[362] = 0;
   out_5938837053370187441[363] = 0;
   out_5938837053370187441[364] = 0;
   out_5938837053370187441[365] = 0;
   out_5938837053370187441[366] = 0;
   out_5938837053370187441[367] = 0;
   out_5938837053370187441[368] = 0;
   out_5938837053370187441[369] = 0;
   out_5938837053370187441[370] = 0;
   out_5938837053370187441[371] = 0;
   out_5938837053370187441[372] = 0;
   out_5938837053370187441[373] = 1.0;
   out_5938837053370187441[374] = 0;
   out_5938837053370187441[375] = 0;
   out_5938837053370187441[376] = 0;
   out_5938837053370187441[377] = 0;
   out_5938837053370187441[378] = 0;
   out_5938837053370187441[379] = 0;
   out_5938837053370187441[380] = 0;
   out_5938837053370187441[381] = 0;
   out_5938837053370187441[382] = 0;
   out_5938837053370187441[383] = 0;
   out_5938837053370187441[384] = 0;
   out_5938837053370187441[385] = 0;
   out_5938837053370187441[386] = 0;
   out_5938837053370187441[387] = 0;
   out_5938837053370187441[388] = 0;
   out_5938837053370187441[389] = 0;
   out_5938837053370187441[390] = 0;
   out_5938837053370187441[391] = 0;
   out_5938837053370187441[392] = 0;
   out_5938837053370187441[393] = 0;
   out_5938837053370187441[394] = 0;
   out_5938837053370187441[395] = 1.0;
   out_5938837053370187441[396] = 0;
   out_5938837053370187441[397] = 0;
   out_5938837053370187441[398] = 0;
   out_5938837053370187441[399] = 0;
   out_5938837053370187441[400] = 0;
   out_5938837053370187441[401] = 0;
   out_5938837053370187441[402] = 0;
   out_5938837053370187441[403] = 0;
   out_5938837053370187441[404] = 0;
   out_5938837053370187441[405] = 0;
   out_5938837053370187441[406] = 0;
   out_5938837053370187441[407] = 0;
   out_5938837053370187441[408] = 0;
   out_5938837053370187441[409] = 0;
   out_5938837053370187441[410] = 0;
   out_5938837053370187441[411] = 0;
   out_5938837053370187441[412] = 0;
   out_5938837053370187441[413] = 0;
   out_5938837053370187441[414] = 0;
   out_5938837053370187441[415] = 0;
   out_5938837053370187441[416] = 0;
   out_5938837053370187441[417] = 1.0;
   out_5938837053370187441[418] = 0;
   out_5938837053370187441[419] = 0;
   out_5938837053370187441[420] = 0;
   out_5938837053370187441[421] = 0;
   out_5938837053370187441[422] = 0;
   out_5938837053370187441[423] = 0;
   out_5938837053370187441[424] = 0;
   out_5938837053370187441[425] = 0;
   out_5938837053370187441[426] = 0;
   out_5938837053370187441[427] = 0;
   out_5938837053370187441[428] = 0;
   out_5938837053370187441[429] = 0;
   out_5938837053370187441[430] = 0;
   out_5938837053370187441[431] = 0;
   out_5938837053370187441[432] = 0;
   out_5938837053370187441[433] = 0;
   out_5938837053370187441[434] = 0;
   out_5938837053370187441[435] = 0;
   out_5938837053370187441[436] = 0;
   out_5938837053370187441[437] = 0;
   out_5938837053370187441[438] = 0;
   out_5938837053370187441[439] = 1.0;
   out_5938837053370187441[440] = 0;
   out_5938837053370187441[441] = 0;
   out_5938837053370187441[442] = 0;
   out_5938837053370187441[443] = 0;
   out_5938837053370187441[444] = 0;
   out_5938837053370187441[445] = 0;
   out_5938837053370187441[446] = 0;
   out_5938837053370187441[447] = 0;
   out_5938837053370187441[448] = 0;
   out_5938837053370187441[449] = 0;
   out_5938837053370187441[450] = 0;
   out_5938837053370187441[451] = 0;
   out_5938837053370187441[452] = 0;
   out_5938837053370187441[453] = 0;
   out_5938837053370187441[454] = 0;
   out_5938837053370187441[455] = 0;
   out_5938837053370187441[456] = 0;
   out_5938837053370187441[457] = 0;
   out_5938837053370187441[458] = 0;
   out_5938837053370187441[459] = 0;
   out_5938837053370187441[460] = 0;
   out_5938837053370187441[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5943072507876609054) {
   out_5943072507876609054[0] = dt*state[7] + state[0];
   out_5943072507876609054[1] = dt*state[8] + state[1];
   out_5943072507876609054[2] = dt*state[9] + state[2];
   out_5943072507876609054[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5943072507876609054[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5943072507876609054[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5943072507876609054[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5943072507876609054[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5943072507876609054[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5943072507876609054[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5943072507876609054[10] = state[10];
   out_5943072507876609054[11] = state[11];
   out_5943072507876609054[12] = state[12];
   out_5943072507876609054[13] = state[13];
   out_5943072507876609054[14] = state[14];
   out_5943072507876609054[15] = state[15];
   out_5943072507876609054[16] = state[16];
   out_5943072507876609054[17] = state[17];
   out_5943072507876609054[18] = state[18];
   out_5943072507876609054[19] = state[19];
   out_5943072507876609054[20] = state[20];
   out_5943072507876609054[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3595316619751676824) {
   out_3595316619751676824[0] = 1;
   out_3595316619751676824[1] = 0;
   out_3595316619751676824[2] = 0;
   out_3595316619751676824[3] = 0;
   out_3595316619751676824[4] = 0;
   out_3595316619751676824[5] = 0;
   out_3595316619751676824[6] = dt;
   out_3595316619751676824[7] = 0;
   out_3595316619751676824[8] = 0;
   out_3595316619751676824[9] = 0;
   out_3595316619751676824[10] = 0;
   out_3595316619751676824[11] = 0;
   out_3595316619751676824[12] = 0;
   out_3595316619751676824[13] = 0;
   out_3595316619751676824[14] = 0;
   out_3595316619751676824[15] = 0;
   out_3595316619751676824[16] = 0;
   out_3595316619751676824[17] = 0;
   out_3595316619751676824[18] = 0;
   out_3595316619751676824[19] = 0;
   out_3595316619751676824[20] = 0;
   out_3595316619751676824[21] = 0;
   out_3595316619751676824[22] = 1;
   out_3595316619751676824[23] = 0;
   out_3595316619751676824[24] = 0;
   out_3595316619751676824[25] = 0;
   out_3595316619751676824[26] = 0;
   out_3595316619751676824[27] = 0;
   out_3595316619751676824[28] = dt;
   out_3595316619751676824[29] = 0;
   out_3595316619751676824[30] = 0;
   out_3595316619751676824[31] = 0;
   out_3595316619751676824[32] = 0;
   out_3595316619751676824[33] = 0;
   out_3595316619751676824[34] = 0;
   out_3595316619751676824[35] = 0;
   out_3595316619751676824[36] = 0;
   out_3595316619751676824[37] = 0;
   out_3595316619751676824[38] = 0;
   out_3595316619751676824[39] = 0;
   out_3595316619751676824[40] = 0;
   out_3595316619751676824[41] = 0;
   out_3595316619751676824[42] = 0;
   out_3595316619751676824[43] = 0;
   out_3595316619751676824[44] = 1;
   out_3595316619751676824[45] = 0;
   out_3595316619751676824[46] = 0;
   out_3595316619751676824[47] = 0;
   out_3595316619751676824[48] = 0;
   out_3595316619751676824[49] = 0;
   out_3595316619751676824[50] = dt;
   out_3595316619751676824[51] = 0;
   out_3595316619751676824[52] = 0;
   out_3595316619751676824[53] = 0;
   out_3595316619751676824[54] = 0;
   out_3595316619751676824[55] = 0;
   out_3595316619751676824[56] = 0;
   out_3595316619751676824[57] = 0;
   out_3595316619751676824[58] = 0;
   out_3595316619751676824[59] = 0;
   out_3595316619751676824[60] = 0;
   out_3595316619751676824[61] = 0;
   out_3595316619751676824[62] = 0;
   out_3595316619751676824[63] = 0;
   out_3595316619751676824[64] = 0;
   out_3595316619751676824[65] = 0;
   out_3595316619751676824[66] = 1;
   out_3595316619751676824[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3595316619751676824[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3595316619751676824[69] = 0;
   out_3595316619751676824[70] = 0;
   out_3595316619751676824[71] = 0;
   out_3595316619751676824[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3595316619751676824[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3595316619751676824[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3595316619751676824[75] = 0;
   out_3595316619751676824[76] = 0;
   out_3595316619751676824[77] = 0;
   out_3595316619751676824[78] = 0;
   out_3595316619751676824[79] = 0;
   out_3595316619751676824[80] = 0;
   out_3595316619751676824[81] = 0;
   out_3595316619751676824[82] = 0;
   out_3595316619751676824[83] = 0;
   out_3595316619751676824[84] = 0;
   out_3595316619751676824[85] = 0;
   out_3595316619751676824[86] = 0;
   out_3595316619751676824[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3595316619751676824[88] = 1;
   out_3595316619751676824[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3595316619751676824[90] = 0;
   out_3595316619751676824[91] = 0;
   out_3595316619751676824[92] = 0;
   out_3595316619751676824[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3595316619751676824[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3595316619751676824[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3595316619751676824[96] = 0;
   out_3595316619751676824[97] = 0;
   out_3595316619751676824[98] = 0;
   out_3595316619751676824[99] = 0;
   out_3595316619751676824[100] = 0;
   out_3595316619751676824[101] = 0;
   out_3595316619751676824[102] = 0;
   out_3595316619751676824[103] = 0;
   out_3595316619751676824[104] = 0;
   out_3595316619751676824[105] = 0;
   out_3595316619751676824[106] = 0;
   out_3595316619751676824[107] = 0;
   out_3595316619751676824[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3595316619751676824[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3595316619751676824[110] = 1;
   out_3595316619751676824[111] = 0;
   out_3595316619751676824[112] = 0;
   out_3595316619751676824[113] = 0;
   out_3595316619751676824[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3595316619751676824[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3595316619751676824[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3595316619751676824[117] = 0;
   out_3595316619751676824[118] = 0;
   out_3595316619751676824[119] = 0;
   out_3595316619751676824[120] = 0;
   out_3595316619751676824[121] = 0;
   out_3595316619751676824[122] = 0;
   out_3595316619751676824[123] = 0;
   out_3595316619751676824[124] = 0;
   out_3595316619751676824[125] = 0;
   out_3595316619751676824[126] = 0;
   out_3595316619751676824[127] = 0;
   out_3595316619751676824[128] = 0;
   out_3595316619751676824[129] = 0;
   out_3595316619751676824[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3595316619751676824[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3595316619751676824[132] = 1;
   out_3595316619751676824[133] = 0;
   out_3595316619751676824[134] = 0;
   out_3595316619751676824[135] = 0;
   out_3595316619751676824[136] = 0;
   out_3595316619751676824[137] = 0;
   out_3595316619751676824[138] = 0;
   out_3595316619751676824[139] = 0;
   out_3595316619751676824[140] = 0;
   out_3595316619751676824[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3595316619751676824[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3595316619751676824[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3595316619751676824[144] = 0;
   out_3595316619751676824[145] = 0;
   out_3595316619751676824[146] = 0;
   out_3595316619751676824[147] = 0;
   out_3595316619751676824[148] = 0;
   out_3595316619751676824[149] = 0;
   out_3595316619751676824[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3595316619751676824[151] = 0;
   out_3595316619751676824[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3595316619751676824[153] = 0;
   out_3595316619751676824[154] = 1;
   out_3595316619751676824[155] = 0;
   out_3595316619751676824[156] = 0;
   out_3595316619751676824[157] = 0;
   out_3595316619751676824[158] = 0;
   out_3595316619751676824[159] = 0;
   out_3595316619751676824[160] = 0;
   out_3595316619751676824[161] = 0;
   out_3595316619751676824[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3595316619751676824[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3595316619751676824[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3595316619751676824[165] = 0;
   out_3595316619751676824[166] = 0;
   out_3595316619751676824[167] = 0;
   out_3595316619751676824[168] = 0;
   out_3595316619751676824[169] = 0;
   out_3595316619751676824[170] = 0;
   out_3595316619751676824[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3595316619751676824[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3595316619751676824[173] = 0;
   out_3595316619751676824[174] = 0;
   out_3595316619751676824[175] = 0;
   out_3595316619751676824[176] = 1;
   out_3595316619751676824[177] = 0;
   out_3595316619751676824[178] = 0;
   out_3595316619751676824[179] = 0;
   out_3595316619751676824[180] = 0;
   out_3595316619751676824[181] = 0;
   out_3595316619751676824[182] = 0;
   out_3595316619751676824[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3595316619751676824[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3595316619751676824[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3595316619751676824[186] = 0;
   out_3595316619751676824[187] = 0;
   out_3595316619751676824[188] = 0;
   out_3595316619751676824[189] = 0;
   out_3595316619751676824[190] = 0;
   out_3595316619751676824[191] = 0;
   out_3595316619751676824[192] = 0;
   out_3595316619751676824[193] = 0;
   out_3595316619751676824[194] = 0;
   out_3595316619751676824[195] = 0;
   out_3595316619751676824[196] = 0;
   out_3595316619751676824[197] = 0;
   out_3595316619751676824[198] = 1;
   out_3595316619751676824[199] = 0;
   out_3595316619751676824[200] = 0;
   out_3595316619751676824[201] = 0;
   out_3595316619751676824[202] = 0;
   out_3595316619751676824[203] = 0;
   out_3595316619751676824[204] = 0;
   out_3595316619751676824[205] = 0;
   out_3595316619751676824[206] = 0;
   out_3595316619751676824[207] = 0;
   out_3595316619751676824[208] = 0;
   out_3595316619751676824[209] = 0;
   out_3595316619751676824[210] = 0;
   out_3595316619751676824[211] = 0;
   out_3595316619751676824[212] = 0;
   out_3595316619751676824[213] = 0;
   out_3595316619751676824[214] = 0;
   out_3595316619751676824[215] = 0;
   out_3595316619751676824[216] = 0;
   out_3595316619751676824[217] = 0;
   out_3595316619751676824[218] = 0;
   out_3595316619751676824[219] = 0;
   out_3595316619751676824[220] = 1;
   out_3595316619751676824[221] = 0;
   out_3595316619751676824[222] = 0;
   out_3595316619751676824[223] = 0;
   out_3595316619751676824[224] = 0;
   out_3595316619751676824[225] = 0;
   out_3595316619751676824[226] = 0;
   out_3595316619751676824[227] = 0;
   out_3595316619751676824[228] = 0;
   out_3595316619751676824[229] = 0;
   out_3595316619751676824[230] = 0;
   out_3595316619751676824[231] = 0;
   out_3595316619751676824[232] = 0;
   out_3595316619751676824[233] = 0;
   out_3595316619751676824[234] = 0;
   out_3595316619751676824[235] = 0;
   out_3595316619751676824[236] = 0;
   out_3595316619751676824[237] = 0;
   out_3595316619751676824[238] = 0;
   out_3595316619751676824[239] = 0;
   out_3595316619751676824[240] = 0;
   out_3595316619751676824[241] = 0;
   out_3595316619751676824[242] = 1;
   out_3595316619751676824[243] = 0;
   out_3595316619751676824[244] = 0;
   out_3595316619751676824[245] = 0;
   out_3595316619751676824[246] = 0;
   out_3595316619751676824[247] = 0;
   out_3595316619751676824[248] = 0;
   out_3595316619751676824[249] = 0;
   out_3595316619751676824[250] = 0;
   out_3595316619751676824[251] = 0;
   out_3595316619751676824[252] = 0;
   out_3595316619751676824[253] = 0;
   out_3595316619751676824[254] = 0;
   out_3595316619751676824[255] = 0;
   out_3595316619751676824[256] = 0;
   out_3595316619751676824[257] = 0;
   out_3595316619751676824[258] = 0;
   out_3595316619751676824[259] = 0;
   out_3595316619751676824[260] = 0;
   out_3595316619751676824[261] = 0;
   out_3595316619751676824[262] = 0;
   out_3595316619751676824[263] = 0;
   out_3595316619751676824[264] = 1;
   out_3595316619751676824[265] = 0;
   out_3595316619751676824[266] = 0;
   out_3595316619751676824[267] = 0;
   out_3595316619751676824[268] = 0;
   out_3595316619751676824[269] = 0;
   out_3595316619751676824[270] = 0;
   out_3595316619751676824[271] = 0;
   out_3595316619751676824[272] = 0;
   out_3595316619751676824[273] = 0;
   out_3595316619751676824[274] = 0;
   out_3595316619751676824[275] = 0;
   out_3595316619751676824[276] = 0;
   out_3595316619751676824[277] = 0;
   out_3595316619751676824[278] = 0;
   out_3595316619751676824[279] = 0;
   out_3595316619751676824[280] = 0;
   out_3595316619751676824[281] = 0;
   out_3595316619751676824[282] = 0;
   out_3595316619751676824[283] = 0;
   out_3595316619751676824[284] = 0;
   out_3595316619751676824[285] = 0;
   out_3595316619751676824[286] = 1;
   out_3595316619751676824[287] = 0;
   out_3595316619751676824[288] = 0;
   out_3595316619751676824[289] = 0;
   out_3595316619751676824[290] = 0;
   out_3595316619751676824[291] = 0;
   out_3595316619751676824[292] = 0;
   out_3595316619751676824[293] = 0;
   out_3595316619751676824[294] = 0;
   out_3595316619751676824[295] = 0;
   out_3595316619751676824[296] = 0;
   out_3595316619751676824[297] = 0;
   out_3595316619751676824[298] = 0;
   out_3595316619751676824[299] = 0;
   out_3595316619751676824[300] = 0;
   out_3595316619751676824[301] = 0;
   out_3595316619751676824[302] = 0;
   out_3595316619751676824[303] = 0;
   out_3595316619751676824[304] = 0;
   out_3595316619751676824[305] = 0;
   out_3595316619751676824[306] = 0;
   out_3595316619751676824[307] = 0;
   out_3595316619751676824[308] = 1;
   out_3595316619751676824[309] = 0;
   out_3595316619751676824[310] = 0;
   out_3595316619751676824[311] = 0;
   out_3595316619751676824[312] = 0;
   out_3595316619751676824[313] = 0;
   out_3595316619751676824[314] = 0;
   out_3595316619751676824[315] = 0;
   out_3595316619751676824[316] = 0;
   out_3595316619751676824[317] = 0;
   out_3595316619751676824[318] = 0;
   out_3595316619751676824[319] = 0;
   out_3595316619751676824[320] = 0;
   out_3595316619751676824[321] = 0;
   out_3595316619751676824[322] = 0;
   out_3595316619751676824[323] = 0;
   out_3595316619751676824[324] = 0;
   out_3595316619751676824[325] = 0;
   out_3595316619751676824[326] = 0;
   out_3595316619751676824[327] = 0;
   out_3595316619751676824[328] = 0;
   out_3595316619751676824[329] = 0;
   out_3595316619751676824[330] = 1;
   out_3595316619751676824[331] = 0;
   out_3595316619751676824[332] = 0;
   out_3595316619751676824[333] = 0;
   out_3595316619751676824[334] = 0;
   out_3595316619751676824[335] = 0;
   out_3595316619751676824[336] = 0;
   out_3595316619751676824[337] = 0;
   out_3595316619751676824[338] = 0;
   out_3595316619751676824[339] = 0;
   out_3595316619751676824[340] = 0;
   out_3595316619751676824[341] = 0;
   out_3595316619751676824[342] = 0;
   out_3595316619751676824[343] = 0;
   out_3595316619751676824[344] = 0;
   out_3595316619751676824[345] = 0;
   out_3595316619751676824[346] = 0;
   out_3595316619751676824[347] = 0;
   out_3595316619751676824[348] = 0;
   out_3595316619751676824[349] = 0;
   out_3595316619751676824[350] = 0;
   out_3595316619751676824[351] = 0;
   out_3595316619751676824[352] = 1;
   out_3595316619751676824[353] = 0;
   out_3595316619751676824[354] = 0;
   out_3595316619751676824[355] = 0;
   out_3595316619751676824[356] = 0;
   out_3595316619751676824[357] = 0;
   out_3595316619751676824[358] = 0;
   out_3595316619751676824[359] = 0;
   out_3595316619751676824[360] = 0;
   out_3595316619751676824[361] = 0;
   out_3595316619751676824[362] = 0;
   out_3595316619751676824[363] = 0;
   out_3595316619751676824[364] = 0;
   out_3595316619751676824[365] = 0;
   out_3595316619751676824[366] = 0;
   out_3595316619751676824[367] = 0;
   out_3595316619751676824[368] = 0;
   out_3595316619751676824[369] = 0;
   out_3595316619751676824[370] = 0;
   out_3595316619751676824[371] = 0;
   out_3595316619751676824[372] = 0;
   out_3595316619751676824[373] = 0;
   out_3595316619751676824[374] = 1;
   out_3595316619751676824[375] = 0;
   out_3595316619751676824[376] = 0;
   out_3595316619751676824[377] = 0;
   out_3595316619751676824[378] = 0;
   out_3595316619751676824[379] = 0;
   out_3595316619751676824[380] = 0;
   out_3595316619751676824[381] = 0;
   out_3595316619751676824[382] = 0;
   out_3595316619751676824[383] = 0;
   out_3595316619751676824[384] = 0;
   out_3595316619751676824[385] = 0;
   out_3595316619751676824[386] = 0;
   out_3595316619751676824[387] = 0;
   out_3595316619751676824[388] = 0;
   out_3595316619751676824[389] = 0;
   out_3595316619751676824[390] = 0;
   out_3595316619751676824[391] = 0;
   out_3595316619751676824[392] = 0;
   out_3595316619751676824[393] = 0;
   out_3595316619751676824[394] = 0;
   out_3595316619751676824[395] = 0;
   out_3595316619751676824[396] = 1;
   out_3595316619751676824[397] = 0;
   out_3595316619751676824[398] = 0;
   out_3595316619751676824[399] = 0;
   out_3595316619751676824[400] = 0;
   out_3595316619751676824[401] = 0;
   out_3595316619751676824[402] = 0;
   out_3595316619751676824[403] = 0;
   out_3595316619751676824[404] = 0;
   out_3595316619751676824[405] = 0;
   out_3595316619751676824[406] = 0;
   out_3595316619751676824[407] = 0;
   out_3595316619751676824[408] = 0;
   out_3595316619751676824[409] = 0;
   out_3595316619751676824[410] = 0;
   out_3595316619751676824[411] = 0;
   out_3595316619751676824[412] = 0;
   out_3595316619751676824[413] = 0;
   out_3595316619751676824[414] = 0;
   out_3595316619751676824[415] = 0;
   out_3595316619751676824[416] = 0;
   out_3595316619751676824[417] = 0;
   out_3595316619751676824[418] = 1;
   out_3595316619751676824[419] = 0;
   out_3595316619751676824[420] = 0;
   out_3595316619751676824[421] = 0;
   out_3595316619751676824[422] = 0;
   out_3595316619751676824[423] = 0;
   out_3595316619751676824[424] = 0;
   out_3595316619751676824[425] = 0;
   out_3595316619751676824[426] = 0;
   out_3595316619751676824[427] = 0;
   out_3595316619751676824[428] = 0;
   out_3595316619751676824[429] = 0;
   out_3595316619751676824[430] = 0;
   out_3595316619751676824[431] = 0;
   out_3595316619751676824[432] = 0;
   out_3595316619751676824[433] = 0;
   out_3595316619751676824[434] = 0;
   out_3595316619751676824[435] = 0;
   out_3595316619751676824[436] = 0;
   out_3595316619751676824[437] = 0;
   out_3595316619751676824[438] = 0;
   out_3595316619751676824[439] = 0;
   out_3595316619751676824[440] = 1;
}
void h_4(double *state, double *unused, double *out_8504012056138441135) {
   out_8504012056138441135[0] = state[10] + state[13];
   out_8504012056138441135[1] = state[11] + state[14];
   out_8504012056138441135[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6815516860047217919) {
   out_6815516860047217919[0] = 0;
   out_6815516860047217919[1] = 0;
   out_6815516860047217919[2] = 0;
   out_6815516860047217919[3] = 0;
   out_6815516860047217919[4] = 0;
   out_6815516860047217919[5] = 0;
   out_6815516860047217919[6] = 0;
   out_6815516860047217919[7] = 0;
   out_6815516860047217919[8] = 0;
   out_6815516860047217919[9] = 0;
   out_6815516860047217919[10] = 1;
   out_6815516860047217919[11] = 0;
   out_6815516860047217919[12] = 0;
   out_6815516860047217919[13] = 1;
   out_6815516860047217919[14] = 0;
   out_6815516860047217919[15] = 0;
   out_6815516860047217919[16] = 0;
   out_6815516860047217919[17] = 0;
   out_6815516860047217919[18] = 0;
   out_6815516860047217919[19] = 0;
   out_6815516860047217919[20] = 0;
   out_6815516860047217919[21] = 0;
   out_6815516860047217919[22] = 0;
   out_6815516860047217919[23] = 0;
   out_6815516860047217919[24] = 0;
   out_6815516860047217919[25] = 0;
   out_6815516860047217919[26] = 0;
   out_6815516860047217919[27] = 0;
   out_6815516860047217919[28] = 0;
   out_6815516860047217919[29] = 0;
   out_6815516860047217919[30] = 0;
   out_6815516860047217919[31] = 0;
   out_6815516860047217919[32] = 0;
   out_6815516860047217919[33] = 1;
   out_6815516860047217919[34] = 0;
   out_6815516860047217919[35] = 0;
   out_6815516860047217919[36] = 1;
   out_6815516860047217919[37] = 0;
   out_6815516860047217919[38] = 0;
   out_6815516860047217919[39] = 0;
   out_6815516860047217919[40] = 0;
   out_6815516860047217919[41] = 0;
   out_6815516860047217919[42] = 0;
   out_6815516860047217919[43] = 0;
   out_6815516860047217919[44] = 0;
   out_6815516860047217919[45] = 0;
   out_6815516860047217919[46] = 0;
   out_6815516860047217919[47] = 0;
   out_6815516860047217919[48] = 0;
   out_6815516860047217919[49] = 0;
   out_6815516860047217919[50] = 0;
   out_6815516860047217919[51] = 0;
   out_6815516860047217919[52] = 0;
   out_6815516860047217919[53] = 0;
   out_6815516860047217919[54] = 0;
   out_6815516860047217919[55] = 0;
   out_6815516860047217919[56] = 1;
   out_6815516860047217919[57] = 0;
   out_6815516860047217919[58] = 0;
   out_6815516860047217919[59] = 1;
   out_6815516860047217919[60] = 0;
   out_6815516860047217919[61] = 0;
   out_6815516860047217919[62] = 0;
   out_6815516860047217919[63] = 0;
   out_6815516860047217919[64] = 0;
   out_6815516860047217919[65] = 0;
}
void h_9(double *state, double *unused, double *out_5642394112647587368) {
   out_5642394112647587368[0] = state[10];
   out_5642394112647587368[1] = state[11];
   out_5642394112647587368[2] = state[12];
}
void H_9(double *state, double *unused, double *out_471702075217229551) {
   out_471702075217229551[0] = 0;
   out_471702075217229551[1] = 0;
   out_471702075217229551[2] = 0;
   out_471702075217229551[3] = 0;
   out_471702075217229551[4] = 0;
   out_471702075217229551[5] = 0;
   out_471702075217229551[6] = 0;
   out_471702075217229551[7] = 0;
   out_471702075217229551[8] = 0;
   out_471702075217229551[9] = 0;
   out_471702075217229551[10] = 1;
   out_471702075217229551[11] = 0;
   out_471702075217229551[12] = 0;
   out_471702075217229551[13] = 0;
   out_471702075217229551[14] = 0;
   out_471702075217229551[15] = 0;
   out_471702075217229551[16] = 0;
   out_471702075217229551[17] = 0;
   out_471702075217229551[18] = 0;
   out_471702075217229551[19] = 0;
   out_471702075217229551[20] = 0;
   out_471702075217229551[21] = 0;
   out_471702075217229551[22] = 0;
   out_471702075217229551[23] = 0;
   out_471702075217229551[24] = 0;
   out_471702075217229551[25] = 0;
   out_471702075217229551[26] = 0;
   out_471702075217229551[27] = 0;
   out_471702075217229551[28] = 0;
   out_471702075217229551[29] = 0;
   out_471702075217229551[30] = 0;
   out_471702075217229551[31] = 0;
   out_471702075217229551[32] = 0;
   out_471702075217229551[33] = 1;
   out_471702075217229551[34] = 0;
   out_471702075217229551[35] = 0;
   out_471702075217229551[36] = 0;
   out_471702075217229551[37] = 0;
   out_471702075217229551[38] = 0;
   out_471702075217229551[39] = 0;
   out_471702075217229551[40] = 0;
   out_471702075217229551[41] = 0;
   out_471702075217229551[42] = 0;
   out_471702075217229551[43] = 0;
   out_471702075217229551[44] = 0;
   out_471702075217229551[45] = 0;
   out_471702075217229551[46] = 0;
   out_471702075217229551[47] = 0;
   out_471702075217229551[48] = 0;
   out_471702075217229551[49] = 0;
   out_471702075217229551[50] = 0;
   out_471702075217229551[51] = 0;
   out_471702075217229551[52] = 0;
   out_471702075217229551[53] = 0;
   out_471702075217229551[54] = 0;
   out_471702075217229551[55] = 0;
   out_471702075217229551[56] = 1;
   out_471702075217229551[57] = 0;
   out_471702075217229551[58] = 0;
   out_471702075217229551[59] = 0;
   out_471702075217229551[60] = 0;
   out_471702075217229551[61] = 0;
   out_471702075217229551[62] = 0;
   out_471702075217229551[63] = 0;
   out_471702075217229551[64] = 0;
   out_471702075217229551[65] = 0;
}
void h_10(double *state, double *unused, double *out_5651455266028130303) {
   out_5651455266028130303[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5651455266028130303[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5651455266028130303[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6972082645737282945) {
   out_6972082645737282945[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6972082645737282945[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6972082645737282945[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6972082645737282945[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6972082645737282945[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6972082645737282945[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6972082645737282945[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6972082645737282945[7] = 0;
   out_6972082645737282945[8] = 0;
   out_6972082645737282945[9] = 0;
   out_6972082645737282945[10] = 0;
   out_6972082645737282945[11] = 0;
   out_6972082645737282945[12] = 0;
   out_6972082645737282945[13] = 0;
   out_6972082645737282945[14] = 0;
   out_6972082645737282945[15] = 0;
   out_6972082645737282945[16] = 1;
   out_6972082645737282945[17] = 0;
   out_6972082645737282945[18] = 0;
   out_6972082645737282945[19] = 1;
   out_6972082645737282945[20] = 0;
   out_6972082645737282945[21] = 0;
   out_6972082645737282945[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6972082645737282945[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6972082645737282945[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6972082645737282945[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6972082645737282945[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6972082645737282945[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6972082645737282945[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6972082645737282945[29] = 0;
   out_6972082645737282945[30] = 0;
   out_6972082645737282945[31] = 0;
   out_6972082645737282945[32] = 0;
   out_6972082645737282945[33] = 0;
   out_6972082645737282945[34] = 0;
   out_6972082645737282945[35] = 0;
   out_6972082645737282945[36] = 0;
   out_6972082645737282945[37] = 0;
   out_6972082645737282945[38] = 0;
   out_6972082645737282945[39] = 1;
   out_6972082645737282945[40] = 0;
   out_6972082645737282945[41] = 0;
   out_6972082645737282945[42] = 1;
   out_6972082645737282945[43] = 0;
   out_6972082645737282945[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6972082645737282945[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6972082645737282945[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6972082645737282945[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6972082645737282945[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6972082645737282945[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6972082645737282945[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6972082645737282945[51] = 0;
   out_6972082645737282945[52] = 0;
   out_6972082645737282945[53] = 0;
   out_6972082645737282945[54] = 0;
   out_6972082645737282945[55] = 0;
   out_6972082645737282945[56] = 0;
   out_6972082645737282945[57] = 0;
   out_6972082645737282945[58] = 0;
   out_6972082645737282945[59] = 0;
   out_6972082645737282945[60] = 0;
   out_6972082645737282945[61] = 0;
   out_6972082645737282945[62] = 1;
   out_6972082645737282945[63] = 0;
   out_6972082645737282945[64] = 0;
   out_6972082645737282945[65] = 1;
}
void h_12(double *state, double *unused, double *out_3489187020732200148) {
   out_3489187020732200148[0] = state[0];
   out_3489187020732200148[1] = state[1];
   out_3489187020732200148[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5249968836619600701) {
   out_5249968836619600701[0] = 1;
   out_5249968836619600701[1] = 0;
   out_5249968836619600701[2] = 0;
   out_5249968836619600701[3] = 0;
   out_5249968836619600701[4] = 0;
   out_5249968836619600701[5] = 0;
   out_5249968836619600701[6] = 0;
   out_5249968836619600701[7] = 0;
   out_5249968836619600701[8] = 0;
   out_5249968836619600701[9] = 0;
   out_5249968836619600701[10] = 0;
   out_5249968836619600701[11] = 0;
   out_5249968836619600701[12] = 0;
   out_5249968836619600701[13] = 0;
   out_5249968836619600701[14] = 0;
   out_5249968836619600701[15] = 0;
   out_5249968836619600701[16] = 0;
   out_5249968836619600701[17] = 0;
   out_5249968836619600701[18] = 0;
   out_5249968836619600701[19] = 0;
   out_5249968836619600701[20] = 0;
   out_5249968836619600701[21] = 0;
   out_5249968836619600701[22] = 0;
   out_5249968836619600701[23] = 1;
   out_5249968836619600701[24] = 0;
   out_5249968836619600701[25] = 0;
   out_5249968836619600701[26] = 0;
   out_5249968836619600701[27] = 0;
   out_5249968836619600701[28] = 0;
   out_5249968836619600701[29] = 0;
   out_5249968836619600701[30] = 0;
   out_5249968836619600701[31] = 0;
   out_5249968836619600701[32] = 0;
   out_5249968836619600701[33] = 0;
   out_5249968836619600701[34] = 0;
   out_5249968836619600701[35] = 0;
   out_5249968836619600701[36] = 0;
   out_5249968836619600701[37] = 0;
   out_5249968836619600701[38] = 0;
   out_5249968836619600701[39] = 0;
   out_5249968836619600701[40] = 0;
   out_5249968836619600701[41] = 0;
   out_5249968836619600701[42] = 0;
   out_5249968836619600701[43] = 0;
   out_5249968836619600701[44] = 0;
   out_5249968836619600701[45] = 0;
   out_5249968836619600701[46] = 1;
   out_5249968836619600701[47] = 0;
   out_5249968836619600701[48] = 0;
   out_5249968836619600701[49] = 0;
   out_5249968836619600701[50] = 0;
   out_5249968836619600701[51] = 0;
   out_5249968836619600701[52] = 0;
   out_5249968836619600701[53] = 0;
   out_5249968836619600701[54] = 0;
   out_5249968836619600701[55] = 0;
   out_5249968836619600701[56] = 0;
   out_5249968836619600701[57] = 0;
   out_5249968836619600701[58] = 0;
   out_5249968836619600701[59] = 0;
   out_5249968836619600701[60] = 0;
   out_5249968836619600701[61] = 0;
   out_5249968836619600701[62] = 0;
   out_5249968836619600701[63] = 0;
   out_5249968836619600701[64] = 0;
   out_5249968836619600701[65] = 0;
}
void h_35(double *state, double *unused, double *out_6804786205546796194) {
   out_6804786205546796194[0] = state[7];
   out_6804786205546796194[1] = state[8];
   out_6804786205546796194[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3448854802674610543) {
   out_3448854802674610543[0] = 0;
   out_3448854802674610543[1] = 0;
   out_3448854802674610543[2] = 0;
   out_3448854802674610543[3] = 0;
   out_3448854802674610543[4] = 0;
   out_3448854802674610543[5] = 0;
   out_3448854802674610543[6] = 0;
   out_3448854802674610543[7] = 1;
   out_3448854802674610543[8] = 0;
   out_3448854802674610543[9] = 0;
   out_3448854802674610543[10] = 0;
   out_3448854802674610543[11] = 0;
   out_3448854802674610543[12] = 0;
   out_3448854802674610543[13] = 0;
   out_3448854802674610543[14] = 0;
   out_3448854802674610543[15] = 0;
   out_3448854802674610543[16] = 0;
   out_3448854802674610543[17] = 0;
   out_3448854802674610543[18] = 0;
   out_3448854802674610543[19] = 0;
   out_3448854802674610543[20] = 0;
   out_3448854802674610543[21] = 0;
   out_3448854802674610543[22] = 0;
   out_3448854802674610543[23] = 0;
   out_3448854802674610543[24] = 0;
   out_3448854802674610543[25] = 0;
   out_3448854802674610543[26] = 0;
   out_3448854802674610543[27] = 0;
   out_3448854802674610543[28] = 0;
   out_3448854802674610543[29] = 0;
   out_3448854802674610543[30] = 1;
   out_3448854802674610543[31] = 0;
   out_3448854802674610543[32] = 0;
   out_3448854802674610543[33] = 0;
   out_3448854802674610543[34] = 0;
   out_3448854802674610543[35] = 0;
   out_3448854802674610543[36] = 0;
   out_3448854802674610543[37] = 0;
   out_3448854802674610543[38] = 0;
   out_3448854802674610543[39] = 0;
   out_3448854802674610543[40] = 0;
   out_3448854802674610543[41] = 0;
   out_3448854802674610543[42] = 0;
   out_3448854802674610543[43] = 0;
   out_3448854802674610543[44] = 0;
   out_3448854802674610543[45] = 0;
   out_3448854802674610543[46] = 0;
   out_3448854802674610543[47] = 0;
   out_3448854802674610543[48] = 0;
   out_3448854802674610543[49] = 0;
   out_3448854802674610543[50] = 0;
   out_3448854802674610543[51] = 0;
   out_3448854802674610543[52] = 0;
   out_3448854802674610543[53] = 1;
   out_3448854802674610543[54] = 0;
   out_3448854802674610543[55] = 0;
   out_3448854802674610543[56] = 0;
   out_3448854802674610543[57] = 0;
   out_3448854802674610543[58] = 0;
   out_3448854802674610543[59] = 0;
   out_3448854802674610543[60] = 0;
   out_3448854802674610543[61] = 0;
   out_3448854802674610543[62] = 0;
   out_3448854802674610543[63] = 0;
   out_3448854802674610543[64] = 0;
   out_3448854802674610543[65] = 0;
}
void h_32(double *state, double *unused, double *out_1638716263979791125) {
   out_1638716263979791125[0] = state[3];
   out_1638716263979791125[1] = state[4];
   out_1638716263979791125[2] = state[5];
   out_1638716263979791125[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3317690017733870074) {
   out_3317690017733870074[0] = 0;
   out_3317690017733870074[1] = 0;
   out_3317690017733870074[2] = 0;
   out_3317690017733870074[3] = 1;
   out_3317690017733870074[4] = 0;
   out_3317690017733870074[5] = 0;
   out_3317690017733870074[6] = 0;
   out_3317690017733870074[7] = 0;
   out_3317690017733870074[8] = 0;
   out_3317690017733870074[9] = 0;
   out_3317690017733870074[10] = 0;
   out_3317690017733870074[11] = 0;
   out_3317690017733870074[12] = 0;
   out_3317690017733870074[13] = 0;
   out_3317690017733870074[14] = 0;
   out_3317690017733870074[15] = 0;
   out_3317690017733870074[16] = 0;
   out_3317690017733870074[17] = 0;
   out_3317690017733870074[18] = 0;
   out_3317690017733870074[19] = 0;
   out_3317690017733870074[20] = 0;
   out_3317690017733870074[21] = 0;
   out_3317690017733870074[22] = 0;
   out_3317690017733870074[23] = 0;
   out_3317690017733870074[24] = 0;
   out_3317690017733870074[25] = 0;
   out_3317690017733870074[26] = 1;
   out_3317690017733870074[27] = 0;
   out_3317690017733870074[28] = 0;
   out_3317690017733870074[29] = 0;
   out_3317690017733870074[30] = 0;
   out_3317690017733870074[31] = 0;
   out_3317690017733870074[32] = 0;
   out_3317690017733870074[33] = 0;
   out_3317690017733870074[34] = 0;
   out_3317690017733870074[35] = 0;
   out_3317690017733870074[36] = 0;
   out_3317690017733870074[37] = 0;
   out_3317690017733870074[38] = 0;
   out_3317690017733870074[39] = 0;
   out_3317690017733870074[40] = 0;
   out_3317690017733870074[41] = 0;
   out_3317690017733870074[42] = 0;
   out_3317690017733870074[43] = 0;
   out_3317690017733870074[44] = 0;
   out_3317690017733870074[45] = 0;
   out_3317690017733870074[46] = 0;
   out_3317690017733870074[47] = 0;
   out_3317690017733870074[48] = 0;
   out_3317690017733870074[49] = 1;
   out_3317690017733870074[50] = 0;
   out_3317690017733870074[51] = 0;
   out_3317690017733870074[52] = 0;
   out_3317690017733870074[53] = 0;
   out_3317690017733870074[54] = 0;
   out_3317690017733870074[55] = 0;
   out_3317690017733870074[56] = 0;
   out_3317690017733870074[57] = 0;
   out_3317690017733870074[58] = 0;
   out_3317690017733870074[59] = 0;
   out_3317690017733870074[60] = 0;
   out_3317690017733870074[61] = 0;
   out_3317690017733870074[62] = 0;
   out_3317690017733870074[63] = 0;
   out_3317690017733870074[64] = 0;
   out_3317690017733870074[65] = 0;
   out_3317690017733870074[66] = 0;
   out_3317690017733870074[67] = 0;
   out_3317690017733870074[68] = 0;
   out_3317690017733870074[69] = 0;
   out_3317690017733870074[70] = 0;
   out_3317690017733870074[71] = 0;
   out_3317690017733870074[72] = 1;
   out_3317690017733870074[73] = 0;
   out_3317690017733870074[74] = 0;
   out_3317690017733870074[75] = 0;
   out_3317690017733870074[76] = 0;
   out_3317690017733870074[77] = 0;
   out_3317690017733870074[78] = 0;
   out_3317690017733870074[79] = 0;
   out_3317690017733870074[80] = 0;
   out_3317690017733870074[81] = 0;
   out_3317690017733870074[82] = 0;
   out_3317690017733870074[83] = 0;
   out_3317690017733870074[84] = 0;
   out_3317690017733870074[85] = 0;
   out_3317690017733870074[86] = 0;
   out_3317690017733870074[87] = 0;
}
void h_13(double *state, double *unused, double *out_5873540218692768727) {
   out_5873540218692768727[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5873540218692768727[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5873540218692768727[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8265398910829609374) {
   out_8265398910829609374[0] = 0;
   out_8265398910829609374[1] = 0;
   out_8265398910829609374[2] = 0;
   out_8265398910829609374[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8265398910829609374[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8265398910829609374[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8265398910829609374[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8265398910829609374[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8265398910829609374[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8265398910829609374[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8265398910829609374[10] = 0;
   out_8265398910829609374[11] = 0;
   out_8265398910829609374[12] = 0;
   out_8265398910829609374[13] = 0;
   out_8265398910829609374[14] = 0;
   out_8265398910829609374[15] = 0;
   out_8265398910829609374[16] = 0;
   out_8265398910829609374[17] = 0;
   out_8265398910829609374[18] = 0;
   out_8265398910829609374[19] = 0;
   out_8265398910829609374[20] = 0;
   out_8265398910829609374[21] = 0;
   out_8265398910829609374[22] = 0;
   out_8265398910829609374[23] = 0;
   out_8265398910829609374[24] = 0;
   out_8265398910829609374[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8265398910829609374[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8265398910829609374[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8265398910829609374[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8265398910829609374[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8265398910829609374[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8265398910829609374[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8265398910829609374[32] = 0;
   out_8265398910829609374[33] = 0;
   out_8265398910829609374[34] = 0;
   out_8265398910829609374[35] = 0;
   out_8265398910829609374[36] = 0;
   out_8265398910829609374[37] = 0;
   out_8265398910829609374[38] = 0;
   out_8265398910829609374[39] = 0;
   out_8265398910829609374[40] = 0;
   out_8265398910829609374[41] = 0;
   out_8265398910829609374[42] = 0;
   out_8265398910829609374[43] = 0;
   out_8265398910829609374[44] = 0;
   out_8265398910829609374[45] = 0;
   out_8265398910829609374[46] = 0;
   out_8265398910829609374[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8265398910829609374[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8265398910829609374[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8265398910829609374[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8265398910829609374[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8265398910829609374[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8265398910829609374[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8265398910829609374[54] = 0;
   out_8265398910829609374[55] = 0;
   out_8265398910829609374[56] = 0;
   out_8265398910829609374[57] = 0;
   out_8265398910829609374[58] = 0;
   out_8265398910829609374[59] = 0;
   out_8265398910829609374[60] = 0;
   out_8265398910829609374[61] = 0;
   out_8265398910829609374[62] = 0;
   out_8265398910829609374[63] = 0;
   out_8265398910829609374[64] = 0;
   out_8265398910829609374[65] = 0;
}
void h_14(double *state, double *unused, double *out_5642394112647587368) {
   out_5642394112647587368[0] = state[10];
   out_5642394112647587368[1] = state[11];
   out_5642394112647587368[2] = state[12];
}
void H_14(double *state, double *unused, double *out_471702075217229551) {
   out_471702075217229551[0] = 0;
   out_471702075217229551[1] = 0;
   out_471702075217229551[2] = 0;
   out_471702075217229551[3] = 0;
   out_471702075217229551[4] = 0;
   out_471702075217229551[5] = 0;
   out_471702075217229551[6] = 0;
   out_471702075217229551[7] = 0;
   out_471702075217229551[8] = 0;
   out_471702075217229551[9] = 0;
   out_471702075217229551[10] = 1;
   out_471702075217229551[11] = 0;
   out_471702075217229551[12] = 0;
   out_471702075217229551[13] = 0;
   out_471702075217229551[14] = 0;
   out_471702075217229551[15] = 0;
   out_471702075217229551[16] = 0;
   out_471702075217229551[17] = 0;
   out_471702075217229551[18] = 0;
   out_471702075217229551[19] = 0;
   out_471702075217229551[20] = 0;
   out_471702075217229551[21] = 0;
   out_471702075217229551[22] = 0;
   out_471702075217229551[23] = 0;
   out_471702075217229551[24] = 0;
   out_471702075217229551[25] = 0;
   out_471702075217229551[26] = 0;
   out_471702075217229551[27] = 0;
   out_471702075217229551[28] = 0;
   out_471702075217229551[29] = 0;
   out_471702075217229551[30] = 0;
   out_471702075217229551[31] = 0;
   out_471702075217229551[32] = 0;
   out_471702075217229551[33] = 1;
   out_471702075217229551[34] = 0;
   out_471702075217229551[35] = 0;
   out_471702075217229551[36] = 0;
   out_471702075217229551[37] = 0;
   out_471702075217229551[38] = 0;
   out_471702075217229551[39] = 0;
   out_471702075217229551[40] = 0;
   out_471702075217229551[41] = 0;
   out_471702075217229551[42] = 0;
   out_471702075217229551[43] = 0;
   out_471702075217229551[44] = 0;
   out_471702075217229551[45] = 0;
   out_471702075217229551[46] = 0;
   out_471702075217229551[47] = 0;
   out_471702075217229551[48] = 0;
   out_471702075217229551[49] = 0;
   out_471702075217229551[50] = 0;
   out_471702075217229551[51] = 0;
   out_471702075217229551[52] = 0;
   out_471702075217229551[53] = 0;
   out_471702075217229551[54] = 0;
   out_471702075217229551[55] = 0;
   out_471702075217229551[56] = 1;
   out_471702075217229551[57] = 0;
   out_471702075217229551[58] = 0;
   out_471702075217229551[59] = 0;
   out_471702075217229551[60] = 0;
   out_471702075217229551[61] = 0;
   out_471702075217229551[62] = 0;
   out_471702075217229551[63] = 0;
   out_471702075217229551[64] = 0;
   out_471702075217229551[65] = 0;
}
void h_33(double *state, double *unused, double *out_4706085852221705334) {
   out_4706085852221705334[0] = state[16];
   out_4706085852221705334[1] = state[17];
   out_4706085852221705334[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6747731490599103886) {
   out_6747731490599103886[0] = 0;
   out_6747731490599103886[1] = 0;
   out_6747731490599103886[2] = 0;
   out_6747731490599103886[3] = 0;
   out_6747731490599103886[4] = 0;
   out_6747731490599103886[5] = 0;
   out_6747731490599103886[6] = 0;
   out_6747731490599103886[7] = 0;
   out_6747731490599103886[8] = 0;
   out_6747731490599103886[9] = 0;
   out_6747731490599103886[10] = 0;
   out_6747731490599103886[11] = 0;
   out_6747731490599103886[12] = 0;
   out_6747731490599103886[13] = 0;
   out_6747731490599103886[14] = 0;
   out_6747731490599103886[15] = 0;
   out_6747731490599103886[16] = 1;
   out_6747731490599103886[17] = 0;
   out_6747731490599103886[18] = 0;
   out_6747731490599103886[19] = 0;
   out_6747731490599103886[20] = 0;
   out_6747731490599103886[21] = 0;
   out_6747731490599103886[22] = 0;
   out_6747731490599103886[23] = 0;
   out_6747731490599103886[24] = 0;
   out_6747731490599103886[25] = 0;
   out_6747731490599103886[26] = 0;
   out_6747731490599103886[27] = 0;
   out_6747731490599103886[28] = 0;
   out_6747731490599103886[29] = 0;
   out_6747731490599103886[30] = 0;
   out_6747731490599103886[31] = 0;
   out_6747731490599103886[32] = 0;
   out_6747731490599103886[33] = 0;
   out_6747731490599103886[34] = 0;
   out_6747731490599103886[35] = 0;
   out_6747731490599103886[36] = 0;
   out_6747731490599103886[37] = 0;
   out_6747731490599103886[38] = 0;
   out_6747731490599103886[39] = 1;
   out_6747731490599103886[40] = 0;
   out_6747731490599103886[41] = 0;
   out_6747731490599103886[42] = 0;
   out_6747731490599103886[43] = 0;
   out_6747731490599103886[44] = 0;
   out_6747731490599103886[45] = 0;
   out_6747731490599103886[46] = 0;
   out_6747731490599103886[47] = 0;
   out_6747731490599103886[48] = 0;
   out_6747731490599103886[49] = 0;
   out_6747731490599103886[50] = 0;
   out_6747731490599103886[51] = 0;
   out_6747731490599103886[52] = 0;
   out_6747731490599103886[53] = 0;
   out_6747731490599103886[54] = 0;
   out_6747731490599103886[55] = 0;
   out_6747731490599103886[56] = 0;
   out_6747731490599103886[57] = 0;
   out_6747731490599103886[58] = 0;
   out_6747731490599103886[59] = 0;
   out_6747731490599103886[60] = 0;
   out_6747731490599103886[61] = 0;
   out_6747731490599103886[62] = 1;
   out_6747731490599103886[63] = 0;
   out_6747731490599103886[64] = 0;
   out_6747731490599103886[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7867863003839610759) {
  H(in_vec, out_7867863003839610759);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6614048919106816820) {
  err_fun(nom_x, delta_x, out_6614048919106816820);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2996437008730679516) {
  inv_err_fun(nom_x, true_x, out_2996437008730679516);
}
void live_H_mod_fun(double *state, double *out_5938837053370187441) {
  H_mod_fun(state, out_5938837053370187441);
}
void live_f_fun(double *state, double dt, double *out_5943072507876609054) {
  f_fun(state,  dt, out_5943072507876609054);
}
void live_F_fun(double *state, double dt, double *out_3595316619751676824) {
  F_fun(state,  dt, out_3595316619751676824);
}
void live_h_4(double *state, double *unused, double *out_8504012056138441135) {
  h_4(state, unused, out_8504012056138441135);
}
void live_H_4(double *state, double *unused, double *out_6815516860047217919) {
  H_4(state, unused, out_6815516860047217919);
}
void live_h_9(double *state, double *unused, double *out_5642394112647587368) {
  h_9(state, unused, out_5642394112647587368);
}
void live_H_9(double *state, double *unused, double *out_471702075217229551) {
  H_9(state, unused, out_471702075217229551);
}
void live_h_10(double *state, double *unused, double *out_5651455266028130303) {
  h_10(state, unused, out_5651455266028130303);
}
void live_H_10(double *state, double *unused, double *out_6972082645737282945) {
  H_10(state, unused, out_6972082645737282945);
}
void live_h_12(double *state, double *unused, double *out_3489187020732200148) {
  h_12(state, unused, out_3489187020732200148);
}
void live_H_12(double *state, double *unused, double *out_5249968836619600701) {
  H_12(state, unused, out_5249968836619600701);
}
void live_h_35(double *state, double *unused, double *out_6804786205546796194) {
  h_35(state, unused, out_6804786205546796194);
}
void live_H_35(double *state, double *unused, double *out_3448854802674610543) {
  H_35(state, unused, out_3448854802674610543);
}
void live_h_32(double *state, double *unused, double *out_1638716263979791125) {
  h_32(state, unused, out_1638716263979791125);
}
void live_H_32(double *state, double *unused, double *out_3317690017733870074) {
  H_32(state, unused, out_3317690017733870074);
}
void live_h_13(double *state, double *unused, double *out_5873540218692768727) {
  h_13(state, unused, out_5873540218692768727);
}
void live_H_13(double *state, double *unused, double *out_8265398910829609374) {
  H_13(state, unused, out_8265398910829609374);
}
void live_h_14(double *state, double *unused, double *out_5642394112647587368) {
  h_14(state, unused, out_5642394112647587368);
}
void live_H_14(double *state, double *unused, double *out_471702075217229551) {
  H_14(state, unused, out_471702075217229551);
}
void live_h_33(double *state, double *unused, double *out_4706085852221705334) {
  h_33(state, unused, out_4706085852221705334);
}
void live_H_33(double *state, double *unused, double *out_6747731490599103886) {
  H_33(state, unused, out_6747731490599103886);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
