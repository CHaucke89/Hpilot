#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3655759921532451903) {
   out_3655759921532451903[0] = 0;
   out_3655759921532451903[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3655759921532451903[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3655759921532451903[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3655759921532451903[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3655759921532451903[5] = -sin(in_vec[1]);
   out_3655759921532451903[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3655759921532451903[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3655759921532451903[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3655759921532451903[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3655759921532451903[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3655759921532451903[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3655759921532451903[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3655759921532451903[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3655759921532451903[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3655759921532451903[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3655759921532451903[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3655759921532451903[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6606438496319011893) {
   out_6606438496319011893[0] = delta_x[0] + nom_x[0];
   out_6606438496319011893[1] = delta_x[1] + nom_x[1];
   out_6606438496319011893[2] = delta_x[2] + nom_x[2];
   out_6606438496319011893[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6606438496319011893[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6606438496319011893[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6606438496319011893[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6606438496319011893[7] = delta_x[6] + nom_x[7];
   out_6606438496319011893[8] = delta_x[7] + nom_x[8];
   out_6606438496319011893[9] = delta_x[8] + nom_x[9];
   out_6606438496319011893[10] = delta_x[9] + nom_x[10];
   out_6606438496319011893[11] = delta_x[10] + nom_x[11];
   out_6606438496319011893[12] = delta_x[11] + nom_x[12];
   out_6606438496319011893[13] = delta_x[12] + nom_x[13];
   out_6606438496319011893[14] = delta_x[13] + nom_x[14];
   out_6606438496319011893[15] = delta_x[14] + nom_x[15];
   out_6606438496319011893[16] = delta_x[15] + nom_x[16];
   out_6606438496319011893[17] = delta_x[16] + nom_x[17];
   out_6606438496319011893[18] = delta_x[17] + nom_x[18];
   out_6606438496319011893[19] = delta_x[18] + nom_x[19];
   out_6606438496319011893[20] = delta_x[19] + nom_x[20];
   out_6606438496319011893[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1892773414432101423) {
   out_1892773414432101423[0] = -nom_x[0] + true_x[0];
   out_1892773414432101423[1] = -nom_x[1] + true_x[1];
   out_1892773414432101423[2] = -nom_x[2] + true_x[2];
   out_1892773414432101423[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1892773414432101423[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1892773414432101423[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1892773414432101423[6] = -nom_x[7] + true_x[7];
   out_1892773414432101423[7] = -nom_x[8] + true_x[8];
   out_1892773414432101423[8] = -nom_x[9] + true_x[9];
   out_1892773414432101423[9] = -nom_x[10] + true_x[10];
   out_1892773414432101423[10] = -nom_x[11] + true_x[11];
   out_1892773414432101423[11] = -nom_x[12] + true_x[12];
   out_1892773414432101423[12] = -nom_x[13] + true_x[13];
   out_1892773414432101423[13] = -nom_x[14] + true_x[14];
   out_1892773414432101423[14] = -nom_x[15] + true_x[15];
   out_1892773414432101423[15] = -nom_x[16] + true_x[16];
   out_1892773414432101423[16] = -nom_x[17] + true_x[17];
   out_1892773414432101423[17] = -nom_x[18] + true_x[18];
   out_1892773414432101423[18] = -nom_x[19] + true_x[19];
   out_1892773414432101423[19] = -nom_x[20] + true_x[20];
   out_1892773414432101423[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_31505903139368806) {
   out_31505903139368806[0] = 1.0;
   out_31505903139368806[1] = 0;
   out_31505903139368806[2] = 0;
   out_31505903139368806[3] = 0;
   out_31505903139368806[4] = 0;
   out_31505903139368806[5] = 0;
   out_31505903139368806[6] = 0;
   out_31505903139368806[7] = 0;
   out_31505903139368806[8] = 0;
   out_31505903139368806[9] = 0;
   out_31505903139368806[10] = 0;
   out_31505903139368806[11] = 0;
   out_31505903139368806[12] = 0;
   out_31505903139368806[13] = 0;
   out_31505903139368806[14] = 0;
   out_31505903139368806[15] = 0;
   out_31505903139368806[16] = 0;
   out_31505903139368806[17] = 0;
   out_31505903139368806[18] = 0;
   out_31505903139368806[19] = 0;
   out_31505903139368806[20] = 0;
   out_31505903139368806[21] = 0;
   out_31505903139368806[22] = 1.0;
   out_31505903139368806[23] = 0;
   out_31505903139368806[24] = 0;
   out_31505903139368806[25] = 0;
   out_31505903139368806[26] = 0;
   out_31505903139368806[27] = 0;
   out_31505903139368806[28] = 0;
   out_31505903139368806[29] = 0;
   out_31505903139368806[30] = 0;
   out_31505903139368806[31] = 0;
   out_31505903139368806[32] = 0;
   out_31505903139368806[33] = 0;
   out_31505903139368806[34] = 0;
   out_31505903139368806[35] = 0;
   out_31505903139368806[36] = 0;
   out_31505903139368806[37] = 0;
   out_31505903139368806[38] = 0;
   out_31505903139368806[39] = 0;
   out_31505903139368806[40] = 0;
   out_31505903139368806[41] = 0;
   out_31505903139368806[42] = 0;
   out_31505903139368806[43] = 0;
   out_31505903139368806[44] = 1.0;
   out_31505903139368806[45] = 0;
   out_31505903139368806[46] = 0;
   out_31505903139368806[47] = 0;
   out_31505903139368806[48] = 0;
   out_31505903139368806[49] = 0;
   out_31505903139368806[50] = 0;
   out_31505903139368806[51] = 0;
   out_31505903139368806[52] = 0;
   out_31505903139368806[53] = 0;
   out_31505903139368806[54] = 0;
   out_31505903139368806[55] = 0;
   out_31505903139368806[56] = 0;
   out_31505903139368806[57] = 0;
   out_31505903139368806[58] = 0;
   out_31505903139368806[59] = 0;
   out_31505903139368806[60] = 0;
   out_31505903139368806[61] = 0;
   out_31505903139368806[62] = 0;
   out_31505903139368806[63] = 0;
   out_31505903139368806[64] = 0;
   out_31505903139368806[65] = 0;
   out_31505903139368806[66] = -0.5*state[4];
   out_31505903139368806[67] = -0.5*state[5];
   out_31505903139368806[68] = -0.5*state[6];
   out_31505903139368806[69] = 0;
   out_31505903139368806[70] = 0;
   out_31505903139368806[71] = 0;
   out_31505903139368806[72] = 0;
   out_31505903139368806[73] = 0;
   out_31505903139368806[74] = 0;
   out_31505903139368806[75] = 0;
   out_31505903139368806[76] = 0;
   out_31505903139368806[77] = 0;
   out_31505903139368806[78] = 0;
   out_31505903139368806[79] = 0;
   out_31505903139368806[80] = 0;
   out_31505903139368806[81] = 0;
   out_31505903139368806[82] = 0;
   out_31505903139368806[83] = 0;
   out_31505903139368806[84] = 0;
   out_31505903139368806[85] = 0;
   out_31505903139368806[86] = 0;
   out_31505903139368806[87] = 0.5*state[3];
   out_31505903139368806[88] = 0.5*state[6];
   out_31505903139368806[89] = -0.5*state[5];
   out_31505903139368806[90] = 0;
   out_31505903139368806[91] = 0;
   out_31505903139368806[92] = 0;
   out_31505903139368806[93] = 0;
   out_31505903139368806[94] = 0;
   out_31505903139368806[95] = 0;
   out_31505903139368806[96] = 0;
   out_31505903139368806[97] = 0;
   out_31505903139368806[98] = 0;
   out_31505903139368806[99] = 0;
   out_31505903139368806[100] = 0;
   out_31505903139368806[101] = 0;
   out_31505903139368806[102] = 0;
   out_31505903139368806[103] = 0;
   out_31505903139368806[104] = 0;
   out_31505903139368806[105] = 0;
   out_31505903139368806[106] = 0;
   out_31505903139368806[107] = 0;
   out_31505903139368806[108] = -0.5*state[6];
   out_31505903139368806[109] = 0.5*state[3];
   out_31505903139368806[110] = 0.5*state[4];
   out_31505903139368806[111] = 0;
   out_31505903139368806[112] = 0;
   out_31505903139368806[113] = 0;
   out_31505903139368806[114] = 0;
   out_31505903139368806[115] = 0;
   out_31505903139368806[116] = 0;
   out_31505903139368806[117] = 0;
   out_31505903139368806[118] = 0;
   out_31505903139368806[119] = 0;
   out_31505903139368806[120] = 0;
   out_31505903139368806[121] = 0;
   out_31505903139368806[122] = 0;
   out_31505903139368806[123] = 0;
   out_31505903139368806[124] = 0;
   out_31505903139368806[125] = 0;
   out_31505903139368806[126] = 0;
   out_31505903139368806[127] = 0;
   out_31505903139368806[128] = 0;
   out_31505903139368806[129] = 0.5*state[5];
   out_31505903139368806[130] = -0.5*state[4];
   out_31505903139368806[131] = 0.5*state[3];
   out_31505903139368806[132] = 0;
   out_31505903139368806[133] = 0;
   out_31505903139368806[134] = 0;
   out_31505903139368806[135] = 0;
   out_31505903139368806[136] = 0;
   out_31505903139368806[137] = 0;
   out_31505903139368806[138] = 0;
   out_31505903139368806[139] = 0;
   out_31505903139368806[140] = 0;
   out_31505903139368806[141] = 0;
   out_31505903139368806[142] = 0;
   out_31505903139368806[143] = 0;
   out_31505903139368806[144] = 0;
   out_31505903139368806[145] = 0;
   out_31505903139368806[146] = 0;
   out_31505903139368806[147] = 0;
   out_31505903139368806[148] = 0;
   out_31505903139368806[149] = 0;
   out_31505903139368806[150] = 0;
   out_31505903139368806[151] = 0;
   out_31505903139368806[152] = 0;
   out_31505903139368806[153] = 1.0;
   out_31505903139368806[154] = 0;
   out_31505903139368806[155] = 0;
   out_31505903139368806[156] = 0;
   out_31505903139368806[157] = 0;
   out_31505903139368806[158] = 0;
   out_31505903139368806[159] = 0;
   out_31505903139368806[160] = 0;
   out_31505903139368806[161] = 0;
   out_31505903139368806[162] = 0;
   out_31505903139368806[163] = 0;
   out_31505903139368806[164] = 0;
   out_31505903139368806[165] = 0;
   out_31505903139368806[166] = 0;
   out_31505903139368806[167] = 0;
   out_31505903139368806[168] = 0;
   out_31505903139368806[169] = 0;
   out_31505903139368806[170] = 0;
   out_31505903139368806[171] = 0;
   out_31505903139368806[172] = 0;
   out_31505903139368806[173] = 0;
   out_31505903139368806[174] = 0;
   out_31505903139368806[175] = 1.0;
   out_31505903139368806[176] = 0;
   out_31505903139368806[177] = 0;
   out_31505903139368806[178] = 0;
   out_31505903139368806[179] = 0;
   out_31505903139368806[180] = 0;
   out_31505903139368806[181] = 0;
   out_31505903139368806[182] = 0;
   out_31505903139368806[183] = 0;
   out_31505903139368806[184] = 0;
   out_31505903139368806[185] = 0;
   out_31505903139368806[186] = 0;
   out_31505903139368806[187] = 0;
   out_31505903139368806[188] = 0;
   out_31505903139368806[189] = 0;
   out_31505903139368806[190] = 0;
   out_31505903139368806[191] = 0;
   out_31505903139368806[192] = 0;
   out_31505903139368806[193] = 0;
   out_31505903139368806[194] = 0;
   out_31505903139368806[195] = 0;
   out_31505903139368806[196] = 0;
   out_31505903139368806[197] = 1.0;
   out_31505903139368806[198] = 0;
   out_31505903139368806[199] = 0;
   out_31505903139368806[200] = 0;
   out_31505903139368806[201] = 0;
   out_31505903139368806[202] = 0;
   out_31505903139368806[203] = 0;
   out_31505903139368806[204] = 0;
   out_31505903139368806[205] = 0;
   out_31505903139368806[206] = 0;
   out_31505903139368806[207] = 0;
   out_31505903139368806[208] = 0;
   out_31505903139368806[209] = 0;
   out_31505903139368806[210] = 0;
   out_31505903139368806[211] = 0;
   out_31505903139368806[212] = 0;
   out_31505903139368806[213] = 0;
   out_31505903139368806[214] = 0;
   out_31505903139368806[215] = 0;
   out_31505903139368806[216] = 0;
   out_31505903139368806[217] = 0;
   out_31505903139368806[218] = 0;
   out_31505903139368806[219] = 1.0;
   out_31505903139368806[220] = 0;
   out_31505903139368806[221] = 0;
   out_31505903139368806[222] = 0;
   out_31505903139368806[223] = 0;
   out_31505903139368806[224] = 0;
   out_31505903139368806[225] = 0;
   out_31505903139368806[226] = 0;
   out_31505903139368806[227] = 0;
   out_31505903139368806[228] = 0;
   out_31505903139368806[229] = 0;
   out_31505903139368806[230] = 0;
   out_31505903139368806[231] = 0;
   out_31505903139368806[232] = 0;
   out_31505903139368806[233] = 0;
   out_31505903139368806[234] = 0;
   out_31505903139368806[235] = 0;
   out_31505903139368806[236] = 0;
   out_31505903139368806[237] = 0;
   out_31505903139368806[238] = 0;
   out_31505903139368806[239] = 0;
   out_31505903139368806[240] = 0;
   out_31505903139368806[241] = 1.0;
   out_31505903139368806[242] = 0;
   out_31505903139368806[243] = 0;
   out_31505903139368806[244] = 0;
   out_31505903139368806[245] = 0;
   out_31505903139368806[246] = 0;
   out_31505903139368806[247] = 0;
   out_31505903139368806[248] = 0;
   out_31505903139368806[249] = 0;
   out_31505903139368806[250] = 0;
   out_31505903139368806[251] = 0;
   out_31505903139368806[252] = 0;
   out_31505903139368806[253] = 0;
   out_31505903139368806[254] = 0;
   out_31505903139368806[255] = 0;
   out_31505903139368806[256] = 0;
   out_31505903139368806[257] = 0;
   out_31505903139368806[258] = 0;
   out_31505903139368806[259] = 0;
   out_31505903139368806[260] = 0;
   out_31505903139368806[261] = 0;
   out_31505903139368806[262] = 0;
   out_31505903139368806[263] = 1.0;
   out_31505903139368806[264] = 0;
   out_31505903139368806[265] = 0;
   out_31505903139368806[266] = 0;
   out_31505903139368806[267] = 0;
   out_31505903139368806[268] = 0;
   out_31505903139368806[269] = 0;
   out_31505903139368806[270] = 0;
   out_31505903139368806[271] = 0;
   out_31505903139368806[272] = 0;
   out_31505903139368806[273] = 0;
   out_31505903139368806[274] = 0;
   out_31505903139368806[275] = 0;
   out_31505903139368806[276] = 0;
   out_31505903139368806[277] = 0;
   out_31505903139368806[278] = 0;
   out_31505903139368806[279] = 0;
   out_31505903139368806[280] = 0;
   out_31505903139368806[281] = 0;
   out_31505903139368806[282] = 0;
   out_31505903139368806[283] = 0;
   out_31505903139368806[284] = 0;
   out_31505903139368806[285] = 1.0;
   out_31505903139368806[286] = 0;
   out_31505903139368806[287] = 0;
   out_31505903139368806[288] = 0;
   out_31505903139368806[289] = 0;
   out_31505903139368806[290] = 0;
   out_31505903139368806[291] = 0;
   out_31505903139368806[292] = 0;
   out_31505903139368806[293] = 0;
   out_31505903139368806[294] = 0;
   out_31505903139368806[295] = 0;
   out_31505903139368806[296] = 0;
   out_31505903139368806[297] = 0;
   out_31505903139368806[298] = 0;
   out_31505903139368806[299] = 0;
   out_31505903139368806[300] = 0;
   out_31505903139368806[301] = 0;
   out_31505903139368806[302] = 0;
   out_31505903139368806[303] = 0;
   out_31505903139368806[304] = 0;
   out_31505903139368806[305] = 0;
   out_31505903139368806[306] = 0;
   out_31505903139368806[307] = 1.0;
   out_31505903139368806[308] = 0;
   out_31505903139368806[309] = 0;
   out_31505903139368806[310] = 0;
   out_31505903139368806[311] = 0;
   out_31505903139368806[312] = 0;
   out_31505903139368806[313] = 0;
   out_31505903139368806[314] = 0;
   out_31505903139368806[315] = 0;
   out_31505903139368806[316] = 0;
   out_31505903139368806[317] = 0;
   out_31505903139368806[318] = 0;
   out_31505903139368806[319] = 0;
   out_31505903139368806[320] = 0;
   out_31505903139368806[321] = 0;
   out_31505903139368806[322] = 0;
   out_31505903139368806[323] = 0;
   out_31505903139368806[324] = 0;
   out_31505903139368806[325] = 0;
   out_31505903139368806[326] = 0;
   out_31505903139368806[327] = 0;
   out_31505903139368806[328] = 0;
   out_31505903139368806[329] = 1.0;
   out_31505903139368806[330] = 0;
   out_31505903139368806[331] = 0;
   out_31505903139368806[332] = 0;
   out_31505903139368806[333] = 0;
   out_31505903139368806[334] = 0;
   out_31505903139368806[335] = 0;
   out_31505903139368806[336] = 0;
   out_31505903139368806[337] = 0;
   out_31505903139368806[338] = 0;
   out_31505903139368806[339] = 0;
   out_31505903139368806[340] = 0;
   out_31505903139368806[341] = 0;
   out_31505903139368806[342] = 0;
   out_31505903139368806[343] = 0;
   out_31505903139368806[344] = 0;
   out_31505903139368806[345] = 0;
   out_31505903139368806[346] = 0;
   out_31505903139368806[347] = 0;
   out_31505903139368806[348] = 0;
   out_31505903139368806[349] = 0;
   out_31505903139368806[350] = 0;
   out_31505903139368806[351] = 1.0;
   out_31505903139368806[352] = 0;
   out_31505903139368806[353] = 0;
   out_31505903139368806[354] = 0;
   out_31505903139368806[355] = 0;
   out_31505903139368806[356] = 0;
   out_31505903139368806[357] = 0;
   out_31505903139368806[358] = 0;
   out_31505903139368806[359] = 0;
   out_31505903139368806[360] = 0;
   out_31505903139368806[361] = 0;
   out_31505903139368806[362] = 0;
   out_31505903139368806[363] = 0;
   out_31505903139368806[364] = 0;
   out_31505903139368806[365] = 0;
   out_31505903139368806[366] = 0;
   out_31505903139368806[367] = 0;
   out_31505903139368806[368] = 0;
   out_31505903139368806[369] = 0;
   out_31505903139368806[370] = 0;
   out_31505903139368806[371] = 0;
   out_31505903139368806[372] = 0;
   out_31505903139368806[373] = 1.0;
   out_31505903139368806[374] = 0;
   out_31505903139368806[375] = 0;
   out_31505903139368806[376] = 0;
   out_31505903139368806[377] = 0;
   out_31505903139368806[378] = 0;
   out_31505903139368806[379] = 0;
   out_31505903139368806[380] = 0;
   out_31505903139368806[381] = 0;
   out_31505903139368806[382] = 0;
   out_31505903139368806[383] = 0;
   out_31505903139368806[384] = 0;
   out_31505903139368806[385] = 0;
   out_31505903139368806[386] = 0;
   out_31505903139368806[387] = 0;
   out_31505903139368806[388] = 0;
   out_31505903139368806[389] = 0;
   out_31505903139368806[390] = 0;
   out_31505903139368806[391] = 0;
   out_31505903139368806[392] = 0;
   out_31505903139368806[393] = 0;
   out_31505903139368806[394] = 0;
   out_31505903139368806[395] = 1.0;
   out_31505903139368806[396] = 0;
   out_31505903139368806[397] = 0;
   out_31505903139368806[398] = 0;
   out_31505903139368806[399] = 0;
   out_31505903139368806[400] = 0;
   out_31505903139368806[401] = 0;
   out_31505903139368806[402] = 0;
   out_31505903139368806[403] = 0;
   out_31505903139368806[404] = 0;
   out_31505903139368806[405] = 0;
   out_31505903139368806[406] = 0;
   out_31505903139368806[407] = 0;
   out_31505903139368806[408] = 0;
   out_31505903139368806[409] = 0;
   out_31505903139368806[410] = 0;
   out_31505903139368806[411] = 0;
   out_31505903139368806[412] = 0;
   out_31505903139368806[413] = 0;
   out_31505903139368806[414] = 0;
   out_31505903139368806[415] = 0;
   out_31505903139368806[416] = 0;
   out_31505903139368806[417] = 1.0;
   out_31505903139368806[418] = 0;
   out_31505903139368806[419] = 0;
   out_31505903139368806[420] = 0;
   out_31505903139368806[421] = 0;
   out_31505903139368806[422] = 0;
   out_31505903139368806[423] = 0;
   out_31505903139368806[424] = 0;
   out_31505903139368806[425] = 0;
   out_31505903139368806[426] = 0;
   out_31505903139368806[427] = 0;
   out_31505903139368806[428] = 0;
   out_31505903139368806[429] = 0;
   out_31505903139368806[430] = 0;
   out_31505903139368806[431] = 0;
   out_31505903139368806[432] = 0;
   out_31505903139368806[433] = 0;
   out_31505903139368806[434] = 0;
   out_31505903139368806[435] = 0;
   out_31505903139368806[436] = 0;
   out_31505903139368806[437] = 0;
   out_31505903139368806[438] = 0;
   out_31505903139368806[439] = 1.0;
   out_31505903139368806[440] = 0;
   out_31505903139368806[441] = 0;
   out_31505903139368806[442] = 0;
   out_31505903139368806[443] = 0;
   out_31505903139368806[444] = 0;
   out_31505903139368806[445] = 0;
   out_31505903139368806[446] = 0;
   out_31505903139368806[447] = 0;
   out_31505903139368806[448] = 0;
   out_31505903139368806[449] = 0;
   out_31505903139368806[450] = 0;
   out_31505903139368806[451] = 0;
   out_31505903139368806[452] = 0;
   out_31505903139368806[453] = 0;
   out_31505903139368806[454] = 0;
   out_31505903139368806[455] = 0;
   out_31505903139368806[456] = 0;
   out_31505903139368806[457] = 0;
   out_31505903139368806[458] = 0;
   out_31505903139368806[459] = 0;
   out_31505903139368806[460] = 0;
   out_31505903139368806[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4984514158829912596) {
   out_4984514158829912596[0] = dt*state[7] + state[0];
   out_4984514158829912596[1] = dt*state[8] + state[1];
   out_4984514158829912596[2] = dt*state[9] + state[2];
   out_4984514158829912596[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4984514158829912596[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4984514158829912596[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4984514158829912596[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4984514158829912596[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4984514158829912596[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4984514158829912596[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4984514158829912596[10] = state[10];
   out_4984514158829912596[11] = state[11];
   out_4984514158829912596[12] = state[12];
   out_4984514158829912596[13] = state[13];
   out_4984514158829912596[14] = state[14];
   out_4984514158829912596[15] = state[15];
   out_4984514158829912596[16] = state[16];
   out_4984514158829912596[17] = state[17];
   out_4984514158829912596[18] = state[18];
   out_4984514158829912596[19] = state[19];
   out_4984514158829912596[20] = state[20];
   out_4984514158829912596[21] = state[21];
}
void F_fun(double *state, double dt, double *out_495900107318952904) {
   out_495900107318952904[0] = 1;
   out_495900107318952904[1] = 0;
   out_495900107318952904[2] = 0;
   out_495900107318952904[3] = 0;
   out_495900107318952904[4] = 0;
   out_495900107318952904[5] = 0;
   out_495900107318952904[6] = dt;
   out_495900107318952904[7] = 0;
   out_495900107318952904[8] = 0;
   out_495900107318952904[9] = 0;
   out_495900107318952904[10] = 0;
   out_495900107318952904[11] = 0;
   out_495900107318952904[12] = 0;
   out_495900107318952904[13] = 0;
   out_495900107318952904[14] = 0;
   out_495900107318952904[15] = 0;
   out_495900107318952904[16] = 0;
   out_495900107318952904[17] = 0;
   out_495900107318952904[18] = 0;
   out_495900107318952904[19] = 0;
   out_495900107318952904[20] = 0;
   out_495900107318952904[21] = 0;
   out_495900107318952904[22] = 1;
   out_495900107318952904[23] = 0;
   out_495900107318952904[24] = 0;
   out_495900107318952904[25] = 0;
   out_495900107318952904[26] = 0;
   out_495900107318952904[27] = 0;
   out_495900107318952904[28] = dt;
   out_495900107318952904[29] = 0;
   out_495900107318952904[30] = 0;
   out_495900107318952904[31] = 0;
   out_495900107318952904[32] = 0;
   out_495900107318952904[33] = 0;
   out_495900107318952904[34] = 0;
   out_495900107318952904[35] = 0;
   out_495900107318952904[36] = 0;
   out_495900107318952904[37] = 0;
   out_495900107318952904[38] = 0;
   out_495900107318952904[39] = 0;
   out_495900107318952904[40] = 0;
   out_495900107318952904[41] = 0;
   out_495900107318952904[42] = 0;
   out_495900107318952904[43] = 0;
   out_495900107318952904[44] = 1;
   out_495900107318952904[45] = 0;
   out_495900107318952904[46] = 0;
   out_495900107318952904[47] = 0;
   out_495900107318952904[48] = 0;
   out_495900107318952904[49] = 0;
   out_495900107318952904[50] = dt;
   out_495900107318952904[51] = 0;
   out_495900107318952904[52] = 0;
   out_495900107318952904[53] = 0;
   out_495900107318952904[54] = 0;
   out_495900107318952904[55] = 0;
   out_495900107318952904[56] = 0;
   out_495900107318952904[57] = 0;
   out_495900107318952904[58] = 0;
   out_495900107318952904[59] = 0;
   out_495900107318952904[60] = 0;
   out_495900107318952904[61] = 0;
   out_495900107318952904[62] = 0;
   out_495900107318952904[63] = 0;
   out_495900107318952904[64] = 0;
   out_495900107318952904[65] = 0;
   out_495900107318952904[66] = 1;
   out_495900107318952904[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_495900107318952904[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_495900107318952904[69] = 0;
   out_495900107318952904[70] = 0;
   out_495900107318952904[71] = 0;
   out_495900107318952904[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_495900107318952904[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_495900107318952904[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_495900107318952904[75] = 0;
   out_495900107318952904[76] = 0;
   out_495900107318952904[77] = 0;
   out_495900107318952904[78] = 0;
   out_495900107318952904[79] = 0;
   out_495900107318952904[80] = 0;
   out_495900107318952904[81] = 0;
   out_495900107318952904[82] = 0;
   out_495900107318952904[83] = 0;
   out_495900107318952904[84] = 0;
   out_495900107318952904[85] = 0;
   out_495900107318952904[86] = 0;
   out_495900107318952904[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_495900107318952904[88] = 1;
   out_495900107318952904[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_495900107318952904[90] = 0;
   out_495900107318952904[91] = 0;
   out_495900107318952904[92] = 0;
   out_495900107318952904[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_495900107318952904[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_495900107318952904[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_495900107318952904[96] = 0;
   out_495900107318952904[97] = 0;
   out_495900107318952904[98] = 0;
   out_495900107318952904[99] = 0;
   out_495900107318952904[100] = 0;
   out_495900107318952904[101] = 0;
   out_495900107318952904[102] = 0;
   out_495900107318952904[103] = 0;
   out_495900107318952904[104] = 0;
   out_495900107318952904[105] = 0;
   out_495900107318952904[106] = 0;
   out_495900107318952904[107] = 0;
   out_495900107318952904[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_495900107318952904[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_495900107318952904[110] = 1;
   out_495900107318952904[111] = 0;
   out_495900107318952904[112] = 0;
   out_495900107318952904[113] = 0;
   out_495900107318952904[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_495900107318952904[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_495900107318952904[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_495900107318952904[117] = 0;
   out_495900107318952904[118] = 0;
   out_495900107318952904[119] = 0;
   out_495900107318952904[120] = 0;
   out_495900107318952904[121] = 0;
   out_495900107318952904[122] = 0;
   out_495900107318952904[123] = 0;
   out_495900107318952904[124] = 0;
   out_495900107318952904[125] = 0;
   out_495900107318952904[126] = 0;
   out_495900107318952904[127] = 0;
   out_495900107318952904[128] = 0;
   out_495900107318952904[129] = 0;
   out_495900107318952904[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_495900107318952904[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_495900107318952904[132] = 1;
   out_495900107318952904[133] = 0;
   out_495900107318952904[134] = 0;
   out_495900107318952904[135] = 0;
   out_495900107318952904[136] = 0;
   out_495900107318952904[137] = 0;
   out_495900107318952904[138] = 0;
   out_495900107318952904[139] = 0;
   out_495900107318952904[140] = 0;
   out_495900107318952904[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_495900107318952904[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_495900107318952904[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_495900107318952904[144] = 0;
   out_495900107318952904[145] = 0;
   out_495900107318952904[146] = 0;
   out_495900107318952904[147] = 0;
   out_495900107318952904[148] = 0;
   out_495900107318952904[149] = 0;
   out_495900107318952904[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_495900107318952904[151] = 0;
   out_495900107318952904[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_495900107318952904[153] = 0;
   out_495900107318952904[154] = 1;
   out_495900107318952904[155] = 0;
   out_495900107318952904[156] = 0;
   out_495900107318952904[157] = 0;
   out_495900107318952904[158] = 0;
   out_495900107318952904[159] = 0;
   out_495900107318952904[160] = 0;
   out_495900107318952904[161] = 0;
   out_495900107318952904[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_495900107318952904[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_495900107318952904[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_495900107318952904[165] = 0;
   out_495900107318952904[166] = 0;
   out_495900107318952904[167] = 0;
   out_495900107318952904[168] = 0;
   out_495900107318952904[169] = 0;
   out_495900107318952904[170] = 0;
   out_495900107318952904[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_495900107318952904[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_495900107318952904[173] = 0;
   out_495900107318952904[174] = 0;
   out_495900107318952904[175] = 0;
   out_495900107318952904[176] = 1;
   out_495900107318952904[177] = 0;
   out_495900107318952904[178] = 0;
   out_495900107318952904[179] = 0;
   out_495900107318952904[180] = 0;
   out_495900107318952904[181] = 0;
   out_495900107318952904[182] = 0;
   out_495900107318952904[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_495900107318952904[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_495900107318952904[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_495900107318952904[186] = 0;
   out_495900107318952904[187] = 0;
   out_495900107318952904[188] = 0;
   out_495900107318952904[189] = 0;
   out_495900107318952904[190] = 0;
   out_495900107318952904[191] = 0;
   out_495900107318952904[192] = 0;
   out_495900107318952904[193] = 0;
   out_495900107318952904[194] = 0;
   out_495900107318952904[195] = 0;
   out_495900107318952904[196] = 0;
   out_495900107318952904[197] = 0;
   out_495900107318952904[198] = 1;
   out_495900107318952904[199] = 0;
   out_495900107318952904[200] = 0;
   out_495900107318952904[201] = 0;
   out_495900107318952904[202] = 0;
   out_495900107318952904[203] = 0;
   out_495900107318952904[204] = 0;
   out_495900107318952904[205] = 0;
   out_495900107318952904[206] = 0;
   out_495900107318952904[207] = 0;
   out_495900107318952904[208] = 0;
   out_495900107318952904[209] = 0;
   out_495900107318952904[210] = 0;
   out_495900107318952904[211] = 0;
   out_495900107318952904[212] = 0;
   out_495900107318952904[213] = 0;
   out_495900107318952904[214] = 0;
   out_495900107318952904[215] = 0;
   out_495900107318952904[216] = 0;
   out_495900107318952904[217] = 0;
   out_495900107318952904[218] = 0;
   out_495900107318952904[219] = 0;
   out_495900107318952904[220] = 1;
   out_495900107318952904[221] = 0;
   out_495900107318952904[222] = 0;
   out_495900107318952904[223] = 0;
   out_495900107318952904[224] = 0;
   out_495900107318952904[225] = 0;
   out_495900107318952904[226] = 0;
   out_495900107318952904[227] = 0;
   out_495900107318952904[228] = 0;
   out_495900107318952904[229] = 0;
   out_495900107318952904[230] = 0;
   out_495900107318952904[231] = 0;
   out_495900107318952904[232] = 0;
   out_495900107318952904[233] = 0;
   out_495900107318952904[234] = 0;
   out_495900107318952904[235] = 0;
   out_495900107318952904[236] = 0;
   out_495900107318952904[237] = 0;
   out_495900107318952904[238] = 0;
   out_495900107318952904[239] = 0;
   out_495900107318952904[240] = 0;
   out_495900107318952904[241] = 0;
   out_495900107318952904[242] = 1;
   out_495900107318952904[243] = 0;
   out_495900107318952904[244] = 0;
   out_495900107318952904[245] = 0;
   out_495900107318952904[246] = 0;
   out_495900107318952904[247] = 0;
   out_495900107318952904[248] = 0;
   out_495900107318952904[249] = 0;
   out_495900107318952904[250] = 0;
   out_495900107318952904[251] = 0;
   out_495900107318952904[252] = 0;
   out_495900107318952904[253] = 0;
   out_495900107318952904[254] = 0;
   out_495900107318952904[255] = 0;
   out_495900107318952904[256] = 0;
   out_495900107318952904[257] = 0;
   out_495900107318952904[258] = 0;
   out_495900107318952904[259] = 0;
   out_495900107318952904[260] = 0;
   out_495900107318952904[261] = 0;
   out_495900107318952904[262] = 0;
   out_495900107318952904[263] = 0;
   out_495900107318952904[264] = 1;
   out_495900107318952904[265] = 0;
   out_495900107318952904[266] = 0;
   out_495900107318952904[267] = 0;
   out_495900107318952904[268] = 0;
   out_495900107318952904[269] = 0;
   out_495900107318952904[270] = 0;
   out_495900107318952904[271] = 0;
   out_495900107318952904[272] = 0;
   out_495900107318952904[273] = 0;
   out_495900107318952904[274] = 0;
   out_495900107318952904[275] = 0;
   out_495900107318952904[276] = 0;
   out_495900107318952904[277] = 0;
   out_495900107318952904[278] = 0;
   out_495900107318952904[279] = 0;
   out_495900107318952904[280] = 0;
   out_495900107318952904[281] = 0;
   out_495900107318952904[282] = 0;
   out_495900107318952904[283] = 0;
   out_495900107318952904[284] = 0;
   out_495900107318952904[285] = 0;
   out_495900107318952904[286] = 1;
   out_495900107318952904[287] = 0;
   out_495900107318952904[288] = 0;
   out_495900107318952904[289] = 0;
   out_495900107318952904[290] = 0;
   out_495900107318952904[291] = 0;
   out_495900107318952904[292] = 0;
   out_495900107318952904[293] = 0;
   out_495900107318952904[294] = 0;
   out_495900107318952904[295] = 0;
   out_495900107318952904[296] = 0;
   out_495900107318952904[297] = 0;
   out_495900107318952904[298] = 0;
   out_495900107318952904[299] = 0;
   out_495900107318952904[300] = 0;
   out_495900107318952904[301] = 0;
   out_495900107318952904[302] = 0;
   out_495900107318952904[303] = 0;
   out_495900107318952904[304] = 0;
   out_495900107318952904[305] = 0;
   out_495900107318952904[306] = 0;
   out_495900107318952904[307] = 0;
   out_495900107318952904[308] = 1;
   out_495900107318952904[309] = 0;
   out_495900107318952904[310] = 0;
   out_495900107318952904[311] = 0;
   out_495900107318952904[312] = 0;
   out_495900107318952904[313] = 0;
   out_495900107318952904[314] = 0;
   out_495900107318952904[315] = 0;
   out_495900107318952904[316] = 0;
   out_495900107318952904[317] = 0;
   out_495900107318952904[318] = 0;
   out_495900107318952904[319] = 0;
   out_495900107318952904[320] = 0;
   out_495900107318952904[321] = 0;
   out_495900107318952904[322] = 0;
   out_495900107318952904[323] = 0;
   out_495900107318952904[324] = 0;
   out_495900107318952904[325] = 0;
   out_495900107318952904[326] = 0;
   out_495900107318952904[327] = 0;
   out_495900107318952904[328] = 0;
   out_495900107318952904[329] = 0;
   out_495900107318952904[330] = 1;
   out_495900107318952904[331] = 0;
   out_495900107318952904[332] = 0;
   out_495900107318952904[333] = 0;
   out_495900107318952904[334] = 0;
   out_495900107318952904[335] = 0;
   out_495900107318952904[336] = 0;
   out_495900107318952904[337] = 0;
   out_495900107318952904[338] = 0;
   out_495900107318952904[339] = 0;
   out_495900107318952904[340] = 0;
   out_495900107318952904[341] = 0;
   out_495900107318952904[342] = 0;
   out_495900107318952904[343] = 0;
   out_495900107318952904[344] = 0;
   out_495900107318952904[345] = 0;
   out_495900107318952904[346] = 0;
   out_495900107318952904[347] = 0;
   out_495900107318952904[348] = 0;
   out_495900107318952904[349] = 0;
   out_495900107318952904[350] = 0;
   out_495900107318952904[351] = 0;
   out_495900107318952904[352] = 1;
   out_495900107318952904[353] = 0;
   out_495900107318952904[354] = 0;
   out_495900107318952904[355] = 0;
   out_495900107318952904[356] = 0;
   out_495900107318952904[357] = 0;
   out_495900107318952904[358] = 0;
   out_495900107318952904[359] = 0;
   out_495900107318952904[360] = 0;
   out_495900107318952904[361] = 0;
   out_495900107318952904[362] = 0;
   out_495900107318952904[363] = 0;
   out_495900107318952904[364] = 0;
   out_495900107318952904[365] = 0;
   out_495900107318952904[366] = 0;
   out_495900107318952904[367] = 0;
   out_495900107318952904[368] = 0;
   out_495900107318952904[369] = 0;
   out_495900107318952904[370] = 0;
   out_495900107318952904[371] = 0;
   out_495900107318952904[372] = 0;
   out_495900107318952904[373] = 0;
   out_495900107318952904[374] = 1;
   out_495900107318952904[375] = 0;
   out_495900107318952904[376] = 0;
   out_495900107318952904[377] = 0;
   out_495900107318952904[378] = 0;
   out_495900107318952904[379] = 0;
   out_495900107318952904[380] = 0;
   out_495900107318952904[381] = 0;
   out_495900107318952904[382] = 0;
   out_495900107318952904[383] = 0;
   out_495900107318952904[384] = 0;
   out_495900107318952904[385] = 0;
   out_495900107318952904[386] = 0;
   out_495900107318952904[387] = 0;
   out_495900107318952904[388] = 0;
   out_495900107318952904[389] = 0;
   out_495900107318952904[390] = 0;
   out_495900107318952904[391] = 0;
   out_495900107318952904[392] = 0;
   out_495900107318952904[393] = 0;
   out_495900107318952904[394] = 0;
   out_495900107318952904[395] = 0;
   out_495900107318952904[396] = 1;
   out_495900107318952904[397] = 0;
   out_495900107318952904[398] = 0;
   out_495900107318952904[399] = 0;
   out_495900107318952904[400] = 0;
   out_495900107318952904[401] = 0;
   out_495900107318952904[402] = 0;
   out_495900107318952904[403] = 0;
   out_495900107318952904[404] = 0;
   out_495900107318952904[405] = 0;
   out_495900107318952904[406] = 0;
   out_495900107318952904[407] = 0;
   out_495900107318952904[408] = 0;
   out_495900107318952904[409] = 0;
   out_495900107318952904[410] = 0;
   out_495900107318952904[411] = 0;
   out_495900107318952904[412] = 0;
   out_495900107318952904[413] = 0;
   out_495900107318952904[414] = 0;
   out_495900107318952904[415] = 0;
   out_495900107318952904[416] = 0;
   out_495900107318952904[417] = 0;
   out_495900107318952904[418] = 1;
   out_495900107318952904[419] = 0;
   out_495900107318952904[420] = 0;
   out_495900107318952904[421] = 0;
   out_495900107318952904[422] = 0;
   out_495900107318952904[423] = 0;
   out_495900107318952904[424] = 0;
   out_495900107318952904[425] = 0;
   out_495900107318952904[426] = 0;
   out_495900107318952904[427] = 0;
   out_495900107318952904[428] = 0;
   out_495900107318952904[429] = 0;
   out_495900107318952904[430] = 0;
   out_495900107318952904[431] = 0;
   out_495900107318952904[432] = 0;
   out_495900107318952904[433] = 0;
   out_495900107318952904[434] = 0;
   out_495900107318952904[435] = 0;
   out_495900107318952904[436] = 0;
   out_495900107318952904[437] = 0;
   out_495900107318952904[438] = 0;
   out_495900107318952904[439] = 0;
   out_495900107318952904[440] = 1;
}
void h_4(double *state, double *unused, double *out_4218409302925889705) {
   out_4218409302925889705[0] = state[10] + state[13];
   out_4218409302925889705[1] = state[11] + state[14];
   out_4218409302925889705[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2064362458237902773) {
   out_2064362458237902773[0] = 0;
   out_2064362458237902773[1] = 0;
   out_2064362458237902773[2] = 0;
   out_2064362458237902773[3] = 0;
   out_2064362458237902773[4] = 0;
   out_2064362458237902773[5] = 0;
   out_2064362458237902773[6] = 0;
   out_2064362458237902773[7] = 0;
   out_2064362458237902773[8] = 0;
   out_2064362458237902773[9] = 0;
   out_2064362458237902773[10] = 1;
   out_2064362458237902773[11] = 0;
   out_2064362458237902773[12] = 0;
   out_2064362458237902773[13] = 1;
   out_2064362458237902773[14] = 0;
   out_2064362458237902773[15] = 0;
   out_2064362458237902773[16] = 0;
   out_2064362458237902773[17] = 0;
   out_2064362458237902773[18] = 0;
   out_2064362458237902773[19] = 0;
   out_2064362458237902773[20] = 0;
   out_2064362458237902773[21] = 0;
   out_2064362458237902773[22] = 0;
   out_2064362458237902773[23] = 0;
   out_2064362458237902773[24] = 0;
   out_2064362458237902773[25] = 0;
   out_2064362458237902773[26] = 0;
   out_2064362458237902773[27] = 0;
   out_2064362458237902773[28] = 0;
   out_2064362458237902773[29] = 0;
   out_2064362458237902773[30] = 0;
   out_2064362458237902773[31] = 0;
   out_2064362458237902773[32] = 0;
   out_2064362458237902773[33] = 1;
   out_2064362458237902773[34] = 0;
   out_2064362458237902773[35] = 0;
   out_2064362458237902773[36] = 1;
   out_2064362458237902773[37] = 0;
   out_2064362458237902773[38] = 0;
   out_2064362458237902773[39] = 0;
   out_2064362458237902773[40] = 0;
   out_2064362458237902773[41] = 0;
   out_2064362458237902773[42] = 0;
   out_2064362458237902773[43] = 0;
   out_2064362458237902773[44] = 0;
   out_2064362458237902773[45] = 0;
   out_2064362458237902773[46] = 0;
   out_2064362458237902773[47] = 0;
   out_2064362458237902773[48] = 0;
   out_2064362458237902773[49] = 0;
   out_2064362458237902773[50] = 0;
   out_2064362458237902773[51] = 0;
   out_2064362458237902773[52] = 0;
   out_2064362458237902773[53] = 0;
   out_2064362458237902773[54] = 0;
   out_2064362458237902773[55] = 0;
   out_2064362458237902773[56] = 1;
   out_2064362458237902773[57] = 0;
   out_2064362458237902773[58] = 0;
   out_2064362458237902773[59] = 1;
   out_2064362458237902773[60] = 0;
   out_2064362458237902773[61] = 0;
   out_2064362458237902773[62] = 0;
   out_2064362458237902773[63] = 0;
   out_2064362458237902773[64] = 0;
   out_2064362458237902773[65] = 0;
}
void h_9(double *state, double *unused, double *out_4201404494137813277) {
   out_4201404494137813277[0] = state[10];
   out_4201404494137813277[1] = state[11];
   out_4201404494137813277[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1823172811608312128) {
   out_1823172811608312128[0] = 0;
   out_1823172811608312128[1] = 0;
   out_1823172811608312128[2] = 0;
   out_1823172811608312128[3] = 0;
   out_1823172811608312128[4] = 0;
   out_1823172811608312128[5] = 0;
   out_1823172811608312128[6] = 0;
   out_1823172811608312128[7] = 0;
   out_1823172811608312128[8] = 0;
   out_1823172811608312128[9] = 0;
   out_1823172811608312128[10] = 1;
   out_1823172811608312128[11] = 0;
   out_1823172811608312128[12] = 0;
   out_1823172811608312128[13] = 0;
   out_1823172811608312128[14] = 0;
   out_1823172811608312128[15] = 0;
   out_1823172811608312128[16] = 0;
   out_1823172811608312128[17] = 0;
   out_1823172811608312128[18] = 0;
   out_1823172811608312128[19] = 0;
   out_1823172811608312128[20] = 0;
   out_1823172811608312128[21] = 0;
   out_1823172811608312128[22] = 0;
   out_1823172811608312128[23] = 0;
   out_1823172811608312128[24] = 0;
   out_1823172811608312128[25] = 0;
   out_1823172811608312128[26] = 0;
   out_1823172811608312128[27] = 0;
   out_1823172811608312128[28] = 0;
   out_1823172811608312128[29] = 0;
   out_1823172811608312128[30] = 0;
   out_1823172811608312128[31] = 0;
   out_1823172811608312128[32] = 0;
   out_1823172811608312128[33] = 1;
   out_1823172811608312128[34] = 0;
   out_1823172811608312128[35] = 0;
   out_1823172811608312128[36] = 0;
   out_1823172811608312128[37] = 0;
   out_1823172811608312128[38] = 0;
   out_1823172811608312128[39] = 0;
   out_1823172811608312128[40] = 0;
   out_1823172811608312128[41] = 0;
   out_1823172811608312128[42] = 0;
   out_1823172811608312128[43] = 0;
   out_1823172811608312128[44] = 0;
   out_1823172811608312128[45] = 0;
   out_1823172811608312128[46] = 0;
   out_1823172811608312128[47] = 0;
   out_1823172811608312128[48] = 0;
   out_1823172811608312128[49] = 0;
   out_1823172811608312128[50] = 0;
   out_1823172811608312128[51] = 0;
   out_1823172811608312128[52] = 0;
   out_1823172811608312128[53] = 0;
   out_1823172811608312128[54] = 0;
   out_1823172811608312128[55] = 0;
   out_1823172811608312128[56] = 1;
   out_1823172811608312128[57] = 0;
   out_1823172811608312128[58] = 0;
   out_1823172811608312128[59] = 0;
   out_1823172811608312128[60] = 0;
   out_1823172811608312128[61] = 0;
   out_1823172811608312128[62] = 0;
   out_1823172811608312128[63] = 0;
   out_1823172811608312128[64] = 0;
   out_1823172811608312128[65] = 0;
}
void h_10(double *state, double *unused, double *out_4904878276509257913) {
   out_4904878276509257913[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4904878276509257913[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4904878276509257913[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7361770315712994123) {
   out_7361770315712994123[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7361770315712994123[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7361770315712994123[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7361770315712994123[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7361770315712994123[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7361770315712994123[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7361770315712994123[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7361770315712994123[7] = 0;
   out_7361770315712994123[8] = 0;
   out_7361770315712994123[9] = 0;
   out_7361770315712994123[10] = 0;
   out_7361770315712994123[11] = 0;
   out_7361770315712994123[12] = 0;
   out_7361770315712994123[13] = 0;
   out_7361770315712994123[14] = 0;
   out_7361770315712994123[15] = 0;
   out_7361770315712994123[16] = 1;
   out_7361770315712994123[17] = 0;
   out_7361770315712994123[18] = 0;
   out_7361770315712994123[19] = 1;
   out_7361770315712994123[20] = 0;
   out_7361770315712994123[21] = 0;
   out_7361770315712994123[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7361770315712994123[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7361770315712994123[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7361770315712994123[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7361770315712994123[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7361770315712994123[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7361770315712994123[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7361770315712994123[29] = 0;
   out_7361770315712994123[30] = 0;
   out_7361770315712994123[31] = 0;
   out_7361770315712994123[32] = 0;
   out_7361770315712994123[33] = 0;
   out_7361770315712994123[34] = 0;
   out_7361770315712994123[35] = 0;
   out_7361770315712994123[36] = 0;
   out_7361770315712994123[37] = 0;
   out_7361770315712994123[38] = 0;
   out_7361770315712994123[39] = 1;
   out_7361770315712994123[40] = 0;
   out_7361770315712994123[41] = 0;
   out_7361770315712994123[42] = 1;
   out_7361770315712994123[43] = 0;
   out_7361770315712994123[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7361770315712994123[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7361770315712994123[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7361770315712994123[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7361770315712994123[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7361770315712994123[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7361770315712994123[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7361770315712994123[51] = 0;
   out_7361770315712994123[52] = 0;
   out_7361770315712994123[53] = 0;
   out_7361770315712994123[54] = 0;
   out_7361770315712994123[55] = 0;
   out_7361770315712994123[56] = 0;
   out_7361770315712994123[57] = 0;
   out_7361770315712994123[58] = 0;
   out_7361770315712994123[59] = 0;
   out_7361770315712994123[60] = 0;
   out_7361770315712994123[61] = 0;
   out_7361770315712994123[62] = 1;
   out_7361770315712994123[63] = 0;
   out_7361770315712994123[64] = 0;
   out_7361770315712994123[65] = 1;
}
void h_12(double *state, double *unused, double *out_3237267128515768115) {
   out_3237267128515768115[0] = state[0];
   out_3237267128515768115[1] = state[1];
   out_3237267128515768115[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2955093949794059022) {
   out_2955093949794059022[0] = 1;
   out_2955093949794059022[1] = 0;
   out_2955093949794059022[2] = 0;
   out_2955093949794059022[3] = 0;
   out_2955093949794059022[4] = 0;
   out_2955093949794059022[5] = 0;
   out_2955093949794059022[6] = 0;
   out_2955093949794059022[7] = 0;
   out_2955093949794059022[8] = 0;
   out_2955093949794059022[9] = 0;
   out_2955093949794059022[10] = 0;
   out_2955093949794059022[11] = 0;
   out_2955093949794059022[12] = 0;
   out_2955093949794059022[13] = 0;
   out_2955093949794059022[14] = 0;
   out_2955093949794059022[15] = 0;
   out_2955093949794059022[16] = 0;
   out_2955093949794059022[17] = 0;
   out_2955093949794059022[18] = 0;
   out_2955093949794059022[19] = 0;
   out_2955093949794059022[20] = 0;
   out_2955093949794059022[21] = 0;
   out_2955093949794059022[22] = 0;
   out_2955093949794059022[23] = 1;
   out_2955093949794059022[24] = 0;
   out_2955093949794059022[25] = 0;
   out_2955093949794059022[26] = 0;
   out_2955093949794059022[27] = 0;
   out_2955093949794059022[28] = 0;
   out_2955093949794059022[29] = 0;
   out_2955093949794059022[30] = 0;
   out_2955093949794059022[31] = 0;
   out_2955093949794059022[32] = 0;
   out_2955093949794059022[33] = 0;
   out_2955093949794059022[34] = 0;
   out_2955093949794059022[35] = 0;
   out_2955093949794059022[36] = 0;
   out_2955093949794059022[37] = 0;
   out_2955093949794059022[38] = 0;
   out_2955093949794059022[39] = 0;
   out_2955093949794059022[40] = 0;
   out_2955093949794059022[41] = 0;
   out_2955093949794059022[42] = 0;
   out_2955093949794059022[43] = 0;
   out_2955093949794059022[44] = 0;
   out_2955093949794059022[45] = 0;
   out_2955093949794059022[46] = 1;
   out_2955093949794059022[47] = 0;
   out_2955093949794059022[48] = 0;
   out_2955093949794059022[49] = 0;
   out_2955093949794059022[50] = 0;
   out_2955093949794059022[51] = 0;
   out_2955093949794059022[52] = 0;
   out_2955093949794059022[53] = 0;
   out_2955093949794059022[54] = 0;
   out_2955093949794059022[55] = 0;
   out_2955093949794059022[56] = 0;
   out_2955093949794059022[57] = 0;
   out_2955093949794059022[58] = 0;
   out_2955093949794059022[59] = 0;
   out_2955093949794059022[60] = 0;
   out_2955093949794059022[61] = 0;
   out_2955093949794059022[62] = 0;
   out_2955093949794059022[63] = 0;
   out_2955093949794059022[64] = 0;
   out_2955093949794059022[65] = 0;
}
void h_35(double *state, double *unused, double *out_9093746190498438204) {
   out_9093746190498438204[0] = state[7];
   out_9093746190498438204[1] = state[8];
   out_9093746190498438204[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1302299599134704603) {
   out_1302299599134704603[0] = 0;
   out_1302299599134704603[1] = 0;
   out_1302299599134704603[2] = 0;
   out_1302299599134704603[3] = 0;
   out_1302299599134704603[4] = 0;
   out_1302299599134704603[5] = 0;
   out_1302299599134704603[6] = 0;
   out_1302299599134704603[7] = 1;
   out_1302299599134704603[8] = 0;
   out_1302299599134704603[9] = 0;
   out_1302299599134704603[10] = 0;
   out_1302299599134704603[11] = 0;
   out_1302299599134704603[12] = 0;
   out_1302299599134704603[13] = 0;
   out_1302299599134704603[14] = 0;
   out_1302299599134704603[15] = 0;
   out_1302299599134704603[16] = 0;
   out_1302299599134704603[17] = 0;
   out_1302299599134704603[18] = 0;
   out_1302299599134704603[19] = 0;
   out_1302299599134704603[20] = 0;
   out_1302299599134704603[21] = 0;
   out_1302299599134704603[22] = 0;
   out_1302299599134704603[23] = 0;
   out_1302299599134704603[24] = 0;
   out_1302299599134704603[25] = 0;
   out_1302299599134704603[26] = 0;
   out_1302299599134704603[27] = 0;
   out_1302299599134704603[28] = 0;
   out_1302299599134704603[29] = 0;
   out_1302299599134704603[30] = 1;
   out_1302299599134704603[31] = 0;
   out_1302299599134704603[32] = 0;
   out_1302299599134704603[33] = 0;
   out_1302299599134704603[34] = 0;
   out_1302299599134704603[35] = 0;
   out_1302299599134704603[36] = 0;
   out_1302299599134704603[37] = 0;
   out_1302299599134704603[38] = 0;
   out_1302299599134704603[39] = 0;
   out_1302299599134704603[40] = 0;
   out_1302299599134704603[41] = 0;
   out_1302299599134704603[42] = 0;
   out_1302299599134704603[43] = 0;
   out_1302299599134704603[44] = 0;
   out_1302299599134704603[45] = 0;
   out_1302299599134704603[46] = 0;
   out_1302299599134704603[47] = 0;
   out_1302299599134704603[48] = 0;
   out_1302299599134704603[49] = 0;
   out_1302299599134704603[50] = 0;
   out_1302299599134704603[51] = 0;
   out_1302299599134704603[52] = 0;
   out_1302299599134704603[53] = 1;
   out_1302299599134704603[54] = 0;
   out_1302299599134704603[55] = 0;
   out_1302299599134704603[56] = 0;
   out_1302299599134704603[57] = 0;
   out_1302299599134704603[58] = 0;
   out_1302299599134704603[59] = 0;
   out_1302299599134704603[60] = 0;
   out_1302299599134704603[61] = 0;
   out_1302299599134704603[62] = 0;
   out_1302299599134704603[63] = 0;
   out_1302299599134704603[64] = 0;
   out_1302299599134704603[65] = 0;
}
void h_32(double *state, double *unused, double *out_5484223878963608382) {
   out_5484223878963608382[0] = state[3];
   out_5484223878963608382[1] = state[4];
   out_5484223878963608382[2] = state[5];
   out_5484223878963608382[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5612564904559411753) {
   out_5612564904559411753[0] = 0;
   out_5612564904559411753[1] = 0;
   out_5612564904559411753[2] = 0;
   out_5612564904559411753[3] = 1;
   out_5612564904559411753[4] = 0;
   out_5612564904559411753[5] = 0;
   out_5612564904559411753[6] = 0;
   out_5612564904559411753[7] = 0;
   out_5612564904559411753[8] = 0;
   out_5612564904559411753[9] = 0;
   out_5612564904559411753[10] = 0;
   out_5612564904559411753[11] = 0;
   out_5612564904559411753[12] = 0;
   out_5612564904559411753[13] = 0;
   out_5612564904559411753[14] = 0;
   out_5612564904559411753[15] = 0;
   out_5612564904559411753[16] = 0;
   out_5612564904559411753[17] = 0;
   out_5612564904559411753[18] = 0;
   out_5612564904559411753[19] = 0;
   out_5612564904559411753[20] = 0;
   out_5612564904559411753[21] = 0;
   out_5612564904559411753[22] = 0;
   out_5612564904559411753[23] = 0;
   out_5612564904559411753[24] = 0;
   out_5612564904559411753[25] = 0;
   out_5612564904559411753[26] = 1;
   out_5612564904559411753[27] = 0;
   out_5612564904559411753[28] = 0;
   out_5612564904559411753[29] = 0;
   out_5612564904559411753[30] = 0;
   out_5612564904559411753[31] = 0;
   out_5612564904559411753[32] = 0;
   out_5612564904559411753[33] = 0;
   out_5612564904559411753[34] = 0;
   out_5612564904559411753[35] = 0;
   out_5612564904559411753[36] = 0;
   out_5612564904559411753[37] = 0;
   out_5612564904559411753[38] = 0;
   out_5612564904559411753[39] = 0;
   out_5612564904559411753[40] = 0;
   out_5612564904559411753[41] = 0;
   out_5612564904559411753[42] = 0;
   out_5612564904559411753[43] = 0;
   out_5612564904559411753[44] = 0;
   out_5612564904559411753[45] = 0;
   out_5612564904559411753[46] = 0;
   out_5612564904559411753[47] = 0;
   out_5612564904559411753[48] = 0;
   out_5612564904559411753[49] = 1;
   out_5612564904559411753[50] = 0;
   out_5612564904559411753[51] = 0;
   out_5612564904559411753[52] = 0;
   out_5612564904559411753[53] = 0;
   out_5612564904559411753[54] = 0;
   out_5612564904559411753[55] = 0;
   out_5612564904559411753[56] = 0;
   out_5612564904559411753[57] = 0;
   out_5612564904559411753[58] = 0;
   out_5612564904559411753[59] = 0;
   out_5612564904559411753[60] = 0;
   out_5612564904559411753[61] = 0;
   out_5612564904559411753[62] = 0;
   out_5612564904559411753[63] = 0;
   out_5612564904559411753[64] = 0;
   out_5612564904559411753[65] = 0;
   out_5612564904559411753[66] = 0;
   out_5612564904559411753[67] = 0;
   out_5612564904559411753[68] = 0;
   out_5612564904559411753[69] = 0;
   out_5612564904559411753[70] = 0;
   out_5612564904559411753[71] = 0;
   out_5612564904559411753[72] = 1;
   out_5612564904559411753[73] = 0;
   out_5612564904559411753[74] = 0;
   out_5612564904559411753[75] = 0;
   out_5612564904559411753[76] = 0;
   out_5612564904559411753[77] = 0;
   out_5612564904559411753[78] = 0;
   out_5612564904559411753[79] = 0;
   out_5612564904559411753[80] = 0;
   out_5612564904559411753[81] = 0;
   out_5612564904559411753[82] = 0;
   out_5612564904559411753[83] = 0;
   out_5612564904559411753[84] = 0;
   out_5612564904559411753[85] = 0;
   out_5612564904559411753[86] = 0;
   out_5612564904559411753[87] = 0;
}
void h_13(double *state, double *unused, double *out_7023021544313133462) {
   out_7023021544313133462[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7023021544313133462[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7023021544313133462[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6405415510614721399) {
   out_6405415510614721399[0] = 0;
   out_6405415510614721399[1] = 0;
   out_6405415510614721399[2] = 0;
   out_6405415510614721399[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6405415510614721399[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6405415510614721399[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6405415510614721399[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6405415510614721399[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6405415510614721399[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6405415510614721399[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6405415510614721399[10] = 0;
   out_6405415510614721399[11] = 0;
   out_6405415510614721399[12] = 0;
   out_6405415510614721399[13] = 0;
   out_6405415510614721399[14] = 0;
   out_6405415510614721399[15] = 0;
   out_6405415510614721399[16] = 0;
   out_6405415510614721399[17] = 0;
   out_6405415510614721399[18] = 0;
   out_6405415510614721399[19] = 0;
   out_6405415510614721399[20] = 0;
   out_6405415510614721399[21] = 0;
   out_6405415510614721399[22] = 0;
   out_6405415510614721399[23] = 0;
   out_6405415510614721399[24] = 0;
   out_6405415510614721399[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6405415510614721399[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6405415510614721399[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6405415510614721399[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6405415510614721399[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6405415510614721399[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6405415510614721399[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6405415510614721399[32] = 0;
   out_6405415510614721399[33] = 0;
   out_6405415510614721399[34] = 0;
   out_6405415510614721399[35] = 0;
   out_6405415510614721399[36] = 0;
   out_6405415510614721399[37] = 0;
   out_6405415510614721399[38] = 0;
   out_6405415510614721399[39] = 0;
   out_6405415510614721399[40] = 0;
   out_6405415510614721399[41] = 0;
   out_6405415510614721399[42] = 0;
   out_6405415510614721399[43] = 0;
   out_6405415510614721399[44] = 0;
   out_6405415510614721399[45] = 0;
   out_6405415510614721399[46] = 0;
   out_6405415510614721399[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6405415510614721399[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6405415510614721399[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6405415510614721399[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6405415510614721399[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6405415510614721399[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6405415510614721399[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6405415510614721399[54] = 0;
   out_6405415510614721399[55] = 0;
   out_6405415510614721399[56] = 0;
   out_6405415510614721399[57] = 0;
   out_6405415510614721399[58] = 0;
   out_6405415510614721399[59] = 0;
   out_6405415510614721399[60] = 0;
   out_6405415510614721399[61] = 0;
   out_6405415510614721399[62] = 0;
   out_6405415510614721399[63] = 0;
   out_6405415510614721399[64] = 0;
   out_6405415510614721399[65] = 0;
}
void h_14(double *state, double *unused, double *out_4201404494137813277) {
   out_4201404494137813277[0] = state[10];
   out_4201404494137813277[1] = state[11];
   out_4201404494137813277[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1823172811608312128) {
   out_1823172811608312128[0] = 0;
   out_1823172811608312128[1] = 0;
   out_1823172811608312128[2] = 0;
   out_1823172811608312128[3] = 0;
   out_1823172811608312128[4] = 0;
   out_1823172811608312128[5] = 0;
   out_1823172811608312128[6] = 0;
   out_1823172811608312128[7] = 0;
   out_1823172811608312128[8] = 0;
   out_1823172811608312128[9] = 0;
   out_1823172811608312128[10] = 1;
   out_1823172811608312128[11] = 0;
   out_1823172811608312128[12] = 0;
   out_1823172811608312128[13] = 0;
   out_1823172811608312128[14] = 0;
   out_1823172811608312128[15] = 0;
   out_1823172811608312128[16] = 0;
   out_1823172811608312128[17] = 0;
   out_1823172811608312128[18] = 0;
   out_1823172811608312128[19] = 0;
   out_1823172811608312128[20] = 0;
   out_1823172811608312128[21] = 0;
   out_1823172811608312128[22] = 0;
   out_1823172811608312128[23] = 0;
   out_1823172811608312128[24] = 0;
   out_1823172811608312128[25] = 0;
   out_1823172811608312128[26] = 0;
   out_1823172811608312128[27] = 0;
   out_1823172811608312128[28] = 0;
   out_1823172811608312128[29] = 0;
   out_1823172811608312128[30] = 0;
   out_1823172811608312128[31] = 0;
   out_1823172811608312128[32] = 0;
   out_1823172811608312128[33] = 1;
   out_1823172811608312128[34] = 0;
   out_1823172811608312128[35] = 0;
   out_1823172811608312128[36] = 0;
   out_1823172811608312128[37] = 0;
   out_1823172811608312128[38] = 0;
   out_1823172811608312128[39] = 0;
   out_1823172811608312128[40] = 0;
   out_1823172811608312128[41] = 0;
   out_1823172811608312128[42] = 0;
   out_1823172811608312128[43] = 0;
   out_1823172811608312128[44] = 0;
   out_1823172811608312128[45] = 0;
   out_1823172811608312128[46] = 0;
   out_1823172811608312128[47] = 0;
   out_1823172811608312128[48] = 0;
   out_1823172811608312128[49] = 0;
   out_1823172811608312128[50] = 0;
   out_1823172811608312128[51] = 0;
   out_1823172811608312128[52] = 0;
   out_1823172811608312128[53] = 0;
   out_1823172811608312128[54] = 0;
   out_1823172811608312128[55] = 0;
   out_1823172811608312128[56] = 1;
   out_1823172811608312128[57] = 0;
   out_1823172811608312128[58] = 0;
   out_1823172811608312128[59] = 0;
   out_1823172811608312128[60] = 0;
   out_1823172811608312128[61] = 0;
   out_1823172811608312128[62] = 0;
   out_1823172811608312128[63] = 0;
   out_1823172811608312128[64] = 0;
   out_1823172811608312128[65] = 0;
}
void h_33(double *state, double *unused, double *out_3622091043585692181) {
   out_3622091043585692181[0] = state[16];
   out_3622091043585692181[1] = state[17];
   out_3622091043585692181[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4452856603773562207) {
   out_4452856603773562207[0] = 0;
   out_4452856603773562207[1] = 0;
   out_4452856603773562207[2] = 0;
   out_4452856603773562207[3] = 0;
   out_4452856603773562207[4] = 0;
   out_4452856603773562207[5] = 0;
   out_4452856603773562207[6] = 0;
   out_4452856603773562207[7] = 0;
   out_4452856603773562207[8] = 0;
   out_4452856603773562207[9] = 0;
   out_4452856603773562207[10] = 0;
   out_4452856603773562207[11] = 0;
   out_4452856603773562207[12] = 0;
   out_4452856603773562207[13] = 0;
   out_4452856603773562207[14] = 0;
   out_4452856603773562207[15] = 0;
   out_4452856603773562207[16] = 1;
   out_4452856603773562207[17] = 0;
   out_4452856603773562207[18] = 0;
   out_4452856603773562207[19] = 0;
   out_4452856603773562207[20] = 0;
   out_4452856603773562207[21] = 0;
   out_4452856603773562207[22] = 0;
   out_4452856603773562207[23] = 0;
   out_4452856603773562207[24] = 0;
   out_4452856603773562207[25] = 0;
   out_4452856603773562207[26] = 0;
   out_4452856603773562207[27] = 0;
   out_4452856603773562207[28] = 0;
   out_4452856603773562207[29] = 0;
   out_4452856603773562207[30] = 0;
   out_4452856603773562207[31] = 0;
   out_4452856603773562207[32] = 0;
   out_4452856603773562207[33] = 0;
   out_4452856603773562207[34] = 0;
   out_4452856603773562207[35] = 0;
   out_4452856603773562207[36] = 0;
   out_4452856603773562207[37] = 0;
   out_4452856603773562207[38] = 0;
   out_4452856603773562207[39] = 1;
   out_4452856603773562207[40] = 0;
   out_4452856603773562207[41] = 0;
   out_4452856603773562207[42] = 0;
   out_4452856603773562207[43] = 0;
   out_4452856603773562207[44] = 0;
   out_4452856603773562207[45] = 0;
   out_4452856603773562207[46] = 0;
   out_4452856603773562207[47] = 0;
   out_4452856603773562207[48] = 0;
   out_4452856603773562207[49] = 0;
   out_4452856603773562207[50] = 0;
   out_4452856603773562207[51] = 0;
   out_4452856603773562207[52] = 0;
   out_4452856603773562207[53] = 0;
   out_4452856603773562207[54] = 0;
   out_4452856603773562207[55] = 0;
   out_4452856603773562207[56] = 0;
   out_4452856603773562207[57] = 0;
   out_4452856603773562207[58] = 0;
   out_4452856603773562207[59] = 0;
   out_4452856603773562207[60] = 0;
   out_4452856603773562207[61] = 0;
   out_4452856603773562207[62] = 1;
   out_4452856603773562207[63] = 0;
   out_4452856603773562207[64] = 0;
   out_4452856603773562207[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3655759921532451903) {
  H(in_vec, out_3655759921532451903);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6606438496319011893) {
  err_fun(nom_x, delta_x, out_6606438496319011893);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1892773414432101423) {
  inv_err_fun(nom_x, true_x, out_1892773414432101423);
}
void live_H_mod_fun(double *state, double *out_31505903139368806) {
  H_mod_fun(state, out_31505903139368806);
}
void live_f_fun(double *state, double dt, double *out_4984514158829912596) {
  f_fun(state,  dt, out_4984514158829912596);
}
void live_F_fun(double *state, double dt, double *out_495900107318952904) {
  F_fun(state,  dt, out_495900107318952904);
}
void live_h_4(double *state, double *unused, double *out_4218409302925889705) {
  h_4(state, unused, out_4218409302925889705);
}
void live_H_4(double *state, double *unused, double *out_2064362458237902773) {
  H_4(state, unused, out_2064362458237902773);
}
void live_h_9(double *state, double *unused, double *out_4201404494137813277) {
  h_9(state, unused, out_4201404494137813277);
}
void live_H_9(double *state, double *unused, double *out_1823172811608312128) {
  H_9(state, unused, out_1823172811608312128);
}
void live_h_10(double *state, double *unused, double *out_4904878276509257913) {
  h_10(state, unused, out_4904878276509257913);
}
void live_H_10(double *state, double *unused, double *out_7361770315712994123) {
  H_10(state, unused, out_7361770315712994123);
}
void live_h_12(double *state, double *unused, double *out_3237267128515768115) {
  h_12(state, unused, out_3237267128515768115);
}
void live_H_12(double *state, double *unused, double *out_2955093949794059022) {
  H_12(state, unused, out_2955093949794059022);
}
void live_h_35(double *state, double *unused, double *out_9093746190498438204) {
  h_35(state, unused, out_9093746190498438204);
}
void live_H_35(double *state, double *unused, double *out_1302299599134704603) {
  H_35(state, unused, out_1302299599134704603);
}
void live_h_32(double *state, double *unused, double *out_5484223878963608382) {
  h_32(state, unused, out_5484223878963608382);
}
void live_H_32(double *state, double *unused, double *out_5612564904559411753) {
  H_32(state, unused, out_5612564904559411753);
}
void live_h_13(double *state, double *unused, double *out_7023021544313133462) {
  h_13(state, unused, out_7023021544313133462);
}
void live_H_13(double *state, double *unused, double *out_6405415510614721399) {
  H_13(state, unused, out_6405415510614721399);
}
void live_h_14(double *state, double *unused, double *out_4201404494137813277) {
  h_14(state, unused, out_4201404494137813277);
}
void live_H_14(double *state, double *unused, double *out_1823172811608312128) {
  H_14(state, unused, out_1823172811608312128);
}
void live_h_33(double *state, double *unused, double *out_3622091043585692181) {
  h_33(state, unused, out_3622091043585692181);
}
void live_H_33(double *state, double *unused, double *out_4452856603773562207) {
  H_33(state, unused, out_4452856603773562207);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
