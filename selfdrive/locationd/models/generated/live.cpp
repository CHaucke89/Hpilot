#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4803752866237518805) {
   out_4803752866237518805[0] = 0;
   out_4803752866237518805[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4803752866237518805[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4803752866237518805[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4803752866237518805[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4803752866237518805[5] = -sin(in_vec[1]);
   out_4803752866237518805[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4803752866237518805[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4803752866237518805[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4803752866237518805[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4803752866237518805[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4803752866237518805[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4803752866237518805[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4803752866237518805[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4803752866237518805[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4803752866237518805[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4803752866237518805[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4803752866237518805[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3139786301780846039) {
   out_3139786301780846039[0] = delta_x[0] + nom_x[0];
   out_3139786301780846039[1] = delta_x[1] + nom_x[1];
   out_3139786301780846039[2] = delta_x[2] + nom_x[2];
   out_3139786301780846039[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3139786301780846039[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3139786301780846039[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3139786301780846039[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3139786301780846039[7] = delta_x[6] + nom_x[7];
   out_3139786301780846039[8] = delta_x[7] + nom_x[8];
   out_3139786301780846039[9] = delta_x[8] + nom_x[9];
   out_3139786301780846039[10] = delta_x[9] + nom_x[10];
   out_3139786301780846039[11] = delta_x[10] + nom_x[11];
   out_3139786301780846039[12] = delta_x[11] + nom_x[12];
   out_3139786301780846039[13] = delta_x[12] + nom_x[13];
   out_3139786301780846039[14] = delta_x[13] + nom_x[14];
   out_3139786301780846039[15] = delta_x[14] + nom_x[15];
   out_3139786301780846039[16] = delta_x[15] + nom_x[16];
   out_3139786301780846039[17] = delta_x[16] + nom_x[17];
   out_3139786301780846039[18] = delta_x[17] + nom_x[18];
   out_3139786301780846039[19] = delta_x[18] + nom_x[19];
   out_3139786301780846039[20] = delta_x[19] + nom_x[20];
   out_3139786301780846039[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5873938798188305086) {
   out_5873938798188305086[0] = -nom_x[0] + true_x[0];
   out_5873938798188305086[1] = -nom_x[1] + true_x[1];
   out_5873938798188305086[2] = -nom_x[2] + true_x[2];
   out_5873938798188305086[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5873938798188305086[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5873938798188305086[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5873938798188305086[6] = -nom_x[7] + true_x[7];
   out_5873938798188305086[7] = -nom_x[8] + true_x[8];
   out_5873938798188305086[8] = -nom_x[9] + true_x[9];
   out_5873938798188305086[9] = -nom_x[10] + true_x[10];
   out_5873938798188305086[10] = -nom_x[11] + true_x[11];
   out_5873938798188305086[11] = -nom_x[12] + true_x[12];
   out_5873938798188305086[12] = -nom_x[13] + true_x[13];
   out_5873938798188305086[13] = -nom_x[14] + true_x[14];
   out_5873938798188305086[14] = -nom_x[15] + true_x[15];
   out_5873938798188305086[15] = -nom_x[16] + true_x[16];
   out_5873938798188305086[16] = -nom_x[17] + true_x[17];
   out_5873938798188305086[17] = -nom_x[18] + true_x[18];
   out_5873938798188305086[18] = -nom_x[19] + true_x[19];
   out_5873938798188305086[19] = -nom_x[20] + true_x[20];
   out_5873938798188305086[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7676734681660604098) {
   out_7676734681660604098[0] = 1.0;
   out_7676734681660604098[1] = 0;
   out_7676734681660604098[2] = 0;
   out_7676734681660604098[3] = 0;
   out_7676734681660604098[4] = 0;
   out_7676734681660604098[5] = 0;
   out_7676734681660604098[6] = 0;
   out_7676734681660604098[7] = 0;
   out_7676734681660604098[8] = 0;
   out_7676734681660604098[9] = 0;
   out_7676734681660604098[10] = 0;
   out_7676734681660604098[11] = 0;
   out_7676734681660604098[12] = 0;
   out_7676734681660604098[13] = 0;
   out_7676734681660604098[14] = 0;
   out_7676734681660604098[15] = 0;
   out_7676734681660604098[16] = 0;
   out_7676734681660604098[17] = 0;
   out_7676734681660604098[18] = 0;
   out_7676734681660604098[19] = 0;
   out_7676734681660604098[20] = 0;
   out_7676734681660604098[21] = 0;
   out_7676734681660604098[22] = 1.0;
   out_7676734681660604098[23] = 0;
   out_7676734681660604098[24] = 0;
   out_7676734681660604098[25] = 0;
   out_7676734681660604098[26] = 0;
   out_7676734681660604098[27] = 0;
   out_7676734681660604098[28] = 0;
   out_7676734681660604098[29] = 0;
   out_7676734681660604098[30] = 0;
   out_7676734681660604098[31] = 0;
   out_7676734681660604098[32] = 0;
   out_7676734681660604098[33] = 0;
   out_7676734681660604098[34] = 0;
   out_7676734681660604098[35] = 0;
   out_7676734681660604098[36] = 0;
   out_7676734681660604098[37] = 0;
   out_7676734681660604098[38] = 0;
   out_7676734681660604098[39] = 0;
   out_7676734681660604098[40] = 0;
   out_7676734681660604098[41] = 0;
   out_7676734681660604098[42] = 0;
   out_7676734681660604098[43] = 0;
   out_7676734681660604098[44] = 1.0;
   out_7676734681660604098[45] = 0;
   out_7676734681660604098[46] = 0;
   out_7676734681660604098[47] = 0;
   out_7676734681660604098[48] = 0;
   out_7676734681660604098[49] = 0;
   out_7676734681660604098[50] = 0;
   out_7676734681660604098[51] = 0;
   out_7676734681660604098[52] = 0;
   out_7676734681660604098[53] = 0;
   out_7676734681660604098[54] = 0;
   out_7676734681660604098[55] = 0;
   out_7676734681660604098[56] = 0;
   out_7676734681660604098[57] = 0;
   out_7676734681660604098[58] = 0;
   out_7676734681660604098[59] = 0;
   out_7676734681660604098[60] = 0;
   out_7676734681660604098[61] = 0;
   out_7676734681660604098[62] = 0;
   out_7676734681660604098[63] = 0;
   out_7676734681660604098[64] = 0;
   out_7676734681660604098[65] = 0;
   out_7676734681660604098[66] = -0.5*state[4];
   out_7676734681660604098[67] = -0.5*state[5];
   out_7676734681660604098[68] = -0.5*state[6];
   out_7676734681660604098[69] = 0;
   out_7676734681660604098[70] = 0;
   out_7676734681660604098[71] = 0;
   out_7676734681660604098[72] = 0;
   out_7676734681660604098[73] = 0;
   out_7676734681660604098[74] = 0;
   out_7676734681660604098[75] = 0;
   out_7676734681660604098[76] = 0;
   out_7676734681660604098[77] = 0;
   out_7676734681660604098[78] = 0;
   out_7676734681660604098[79] = 0;
   out_7676734681660604098[80] = 0;
   out_7676734681660604098[81] = 0;
   out_7676734681660604098[82] = 0;
   out_7676734681660604098[83] = 0;
   out_7676734681660604098[84] = 0;
   out_7676734681660604098[85] = 0;
   out_7676734681660604098[86] = 0;
   out_7676734681660604098[87] = 0.5*state[3];
   out_7676734681660604098[88] = 0.5*state[6];
   out_7676734681660604098[89] = -0.5*state[5];
   out_7676734681660604098[90] = 0;
   out_7676734681660604098[91] = 0;
   out_7676734681660604098[92] = 0;
   out_7676734681660604098[93] = 0;
   out_7676734681660604098[94] = 0;
   out_7676734681660604098[95] = 0;
   out_7676734681660604098[96] = 0;
   out_7676734681660604098[97] = 0;
   out_7676734681660604098[98] = 0;
   out_7676734681660604098[99] = 0;
   out_7676734681660604098[100] = 0;
   out_7676734681660604098[101] = 0;
   out_7676734681660604098[102] = 0;
   out_7676734681660604098[103] = 0;
   out_7676734681660604098[104] = 0;
   out_7676734681660604098[105] = 0;
   out_7676734681660604098[106] = 0;
   out_7676734681660604098[107] = 0;
   out_7676734681660604098[108] = -0.5*state[6];
   out_7676734681660604098[109] = 0.5*state[3];
   out_7676734681660604098[110] = 0.5*state[4];
   out_7676734681660604098[111] = 0;
   out_7676734681660604098[112] = 0;
   out_7676734681660604098[113] = 0;
   out_7676734681660604098[114] = 0;
   out_7676734681660604098[115] = 0;
   out_7676734681660604098[116] = 0;
   out_7676734681660604098[117] = 0;
   out_7676734681660604098[118] = 0;
   out_7676734681660604098[119] = 0;
   out_7676734681660604098[120] = 0;
   out_7676734681660604098[121] = 0;
   out_7676734681660604098[122] = 0;
   out_7676734681660604098[123] = 0;
   out_7676734681660604098[124] = 0;
   out_7676734681660604098[125] = 0;
   out_7676734681660604098[126] = 0;
   out_7676734681660604098[127] = 0;
   out_7676734681660604098[128] = 0;
   out_7676734681660604098[129] = 0.5*state[5];
   out_7676734681660604098[130] = -0.5*state[4];
   out_7676734681660604098[131] = 0.5*state[3];
   out_7676734681660604098[132] = 0;
   out_7676734681660604098[133] = 0;
   out_7676734681660604098[134] = 0;
   out_7676734681660604098[135] = 0;
   out_7676734681660604098[136] = 0;
   out_7676734681660604098[137] = 0;
   out_7676734681660604098[138] = 0;
   out_7676734681660604098[139] = 0;
   out_7676734681660604098[140] = 0;
   out_7676734681660604098[141] = 0;
   out_7676734681660604098[142] = 0;
   out_7676734681660604098[143] = 0;
   out_7676734681660604098[144] = 0;
   out_7676734681660604098[145] = 0;
   out_7676734681660604098[146] = 0;
   out_7676734681660604098[147] = 0;
   out_7676734681660604098[148] = 0;
   out_7676734681660604098[149] = 0;
   out_7676734681660604098[150] = 0;
   out_7676734681660604098[151] = 0;
   out_7676734681660604098[152] = 0;
   out_7676734681660604098[153] = 1.0;
   out_7676734681660604098[154] = 0;
   out_7676734681660604098[155] = 0;
   out_7676734681660604098[156] = 0;
   out_7676734681660604098[157] = 0;
   out_7676734681660604098[158] = 0;
   out_7676734681660604098[159] = 0;
   out_7676734681660604098[160] = 0;
   out_7676734681660604098[161] = 0;
   out_7676734681660604098[162] = 0;
   out_7676734681660604098[163] = 0;
   out_7676734681660604098[164] = 0;
   out_7676734681660604098[165] = 0;
   out_7676734681660604098[166] = 0;
   out_7676734681660604098[167] = 0;
   out_7676734681660604098[168] = 0;
   out_7676734681660604098[169] = 0;
   out_7676734681660604098[170] = 0;
   out_7676734681660604098[171] = 0;
   out_7676734681660604098[172] = 0;
   out_7676734681660604098[173] = 0;
   out_7676734681660604098[174] = 0;
   out_7676734681660604098[175] = 1.0;
   out_7676734681660604098[176] = 0;
   out_7676734681660604098[177] = 0;
   out_7676734681660604098[178] = 0;
   out_7676734681660604098[179] = 0;
   out_7676734681660604098[180] = 0;
   out_7676734681660604098[181] = 0;
   out_7676734681660604098[182] = 0;
   out_7676734681660604098[183] = 0;
   out_7676734681660604098[184] = 0;
   out_7676734681660604098[185] = 0;
   out_7676734681660604098[186] = 0;
   out_7676734681660604098[187] = 0;
   out_7676734681660604098[188] = 0;
   out_7676734681660604098[189] = 0;
   out_7676734681660604098[190] = 0;
   out_7676734681660604098[191] = 0;
   out_7676734681660604098[192] = 0;
   out_7676734681660604098[193] = 0;
   out_7676734681660604098[194] = 0;
   out_7676734681660604098[195] = 0;
   out_7676734681660604098[196] = 0;
   out_7676734681660604098[197] = 1.0;
   out_7676734681660604098[198] = 0;
   out_7676734681660604098[199] = 0;
   out_7676734681660604098[200] = 0;
   out_7676734681660604098[201] = 0;
   out_7676734681660604098[202] = 0;
   out_7676734681660604098[203] = 0;
   out_7676734681660604098[204] = 0;
   out_7676734681660604098[205] = 0;
   out_7676734681660604098[206] = 0;
   out_7676734681660604098[207] = 0;
   out_7676734681660604098[208] = 0;
   out_7676734681660604098[209] = 0;
   out_7676734681660604098[210] = 0;
   out_7676734681660604098[211] = 0;
   out_7676734681660604098[212] = 0;
   out_7676734681660604098[213] = 0;
   out_7676734681660604098[214] = 0;
   out_7676734681660604098[215] = 0;
   out_7676734681660604098[216] = 0;
   out_7676734681660604098[217] = 0;
   out_7676734681660604098[218] = 0;
   out_7676734681660604098[219] = 1.0;
   out_7676734681660604098[220] = 0;
   out_7676734681660604098[221] = 0;
   out_7676734681660604098[222] = 0;
   out_7676734681660604098[223] = 0;
   out_7676734681660604098[224] = 0;
   out_7676734681660604098[225] = 0;
   out_7676734681660604098[226] = 0;
   out_7676734681660604098[227] = 0;
   out_7676734681660604098[228] = 0;
   out_7676734681660604098[229] = 0;
   out_7676734681660604098[230] = 0;
   out_7676734681660604098[231] = 0;
   out_7676734681660604098[232] = 0;
   out_7676734681660604098[233] = 0;
   out_7676734681660604098[234] = 0;
   out_7676734681660604098[235] = 0;
   out_7676734681660604098[236] = 0;
   out_7676734681660604098[237] = 0;
   out_7676734681660604098[238] = 0;
   out_7676734681660604098[239] = 0;
   out_7676734681660604098[240] = 0;
   out_7676734681660604098[241] = 1.0;
   out_7676734681660604098[242] = 0;
   out_7676734681660604098[243] = 0;
   out_7676734681660604098[244] = 0;
   out_7676734681660604098[245] = 0;
   out_7676734681660604098[246] = 0;
   out_7676734681660604098[247] = 0;
   out_7676734681660604098[248] = 0;
   out_7676734681660604098[249] = 0;
   out_7676734681660604098[250] = 0;
   out_7676734681660604098[251] = 0;
   out_7676734681660604098[252] = 0;
   out_7676734681660604098[253] = 0;
   out_7676734681660604098[254] = 0;
   out_7676734681660604098[255] = 0;
   out_7676734681660604098[256] = 0;
   out_7676734681660604098[257] = 0;
   out_7676734681660604098[258] = 0;
   out_7676734681660604098[259] = 0;
   out_7676734681660604098[260] = 0;
   out_7676734681660604098[261] = 0;
   out_7676734681660604098[262] = 0;
   out_7676734681660604098[263] = 1.0;
   out_7676734681660604098[264] = 0;
   out_7676734681660604098[265] = 0;
   out_7676734681660604098[266] = 0;
   out_7676734681660604098[267] = 0;
   out_7676734681660604098[268] = 0;
   out_7676734681660604098[269] = 0;
   out_7676734681660604098[270] = 0;
   out_7676734681660604098[271] = 0;
   out_7676734681660604098[272] = 0;
   out_7676734681660604098[273] = 0;
   out_7676734681660604098[274] = 0;
   out_7676734681660604098[275] = 0;
   out_7676734681660604098[276] = 0;
   out_7676734681660604098[277] = 0;
   out_7676734681660604098[278] = 0;
   out_7676734681660604098[279] = 0;
   out_7676734681660604098[280] = 0;
   out_7676734681660604098[281] = 0;
   out_7676734681660604098[282] = 0;
   out_7676734681660604098[283] = 0;
   out_7676734681660604098[284] = 0;
   out_7676734681660604098[285] = 1.0;
   out_7676734681660604098[286] = 0;
   out_7676734681660604098[287] = 0;
   out_7676734681660604098[288] = 0;
   out_7676734681660604098[289] = 0;
   out_7676734681660604098[290] = 0;
   out_7676734681660604098[291] = 0;
   out_7676734681660604098[292] = 0;
   out_7676734681660604098[293] = 0;
   out_7676734681660604098[294] = 0;
   out_7676734681660604098[295] = 0;
   out_7676734681660604098[296] = 0;
   out_7676734681660604098[297] = 0;
   out_7676734681660604098[298] = 0;
   out_7676734681660604098[299] = 0;
   out_7676734681660604098[300] = 0;
   out_7676734681660604098[301] = 0;
   out_7676734681660604098[302] = 0;
   out_7676734681660604098[303] = 0;
   out_7676734681660604098[304] = 0;
   out_7676734681660604098[305] = 0;
   out_7676734681660604098[306] = 0;
   out_7676734681660604098[307] = 1.0;
   out_7676734681660604098[308] = 0;
   out_7676734681660604098[309] = 0;
   out_7676734681660604098[310] = 0;
   out_7676734681660604098[311] = 0;
   out_7676734681660604098[312] = 0;
   out_7676734681660604098[313] = 0;
   out_7676734681660604098[314] = 0;
   out_7676734681660604098[315] = 0;
   out_7676734681660604098[316] = 0;
   out_7676734681660604098[317] = 0;
   out_7676734681660604098[318] = 0;
   out_7676734681660604098[319] = 0;
   out_7676734681660604098[320] = 0;
   out_7676734681660604098[321] = 0;
   out_7676734681660604098[322] = 0;
   out_7676734681660604098[323] = 0;
   out_7676734681660604098[324] = 0;
   out_7676734681660604098[325] = 0;
   out_7676734681660604098[326] = 0;
   out_7676734681660604098[327] = 0;
   out_7676734681660604098[328] = 0;
   out_7676734681660604098[329] = 1.0;
   out_7676734681660604098[330] = 0;
   out_7676734681660604098[331] = 0;
   out_7676734681660604098[332] = 0;
   out_7676734681660604098[333] = 0;
   out_7676734681660604098[334] = 0;
   out_7676734681660604098[335] = 0;
   out_7676734681660604098[336] = 0;
   out_7676734681660604098[337] = 0;
   out_7676734681660604098[338] = 0;
   out_7676734681660604098[339] = 0;
   out_7676734681660604098[340] = 0;
   out_7676734681660604098[341] = 0;
   out_7676734681660604098[342] = 0;
   out_7676734681660604098[343] = 0;
   out_7676734681660604098[344] = 0;
   out_7676734681660604098[345] = 0;
   out_7676734681660604098[346] = 0;
   out_7676734681660604098[347] = 0;
   out_7676734681660604098[348] = 0;
   out_7676734681660604098[349] = 0;
   out_7676734681660604098[350] = 0;
   out_7676734681660604098[351] = 1.0;
   out_7676734681660604098[352] = 0;
   out_7676734681660604098[353] = 0;
   out_7676734681660604098[354] = 0;
   out_7676734681660604098[355] = 0;
   out_7676734681660604098[356] = 0;
   out_7676734681660604098[357] = 0;
   out_7676734681660604098[358] = 0;
   out_7676734681660604098[359] = 0;
   out_7676734681660604098[360] = 0;
   out_7676734681660604098[361] = 0;
   out_7676734681660604098[362] = 0;
   out_7676734681660604098[363] = 0;
   out_7676734681660604098[364] = 0;
   out_7676734681660604098[365] = 0;
   out_7676734681660604098[366] = 0;
   out_7676734681660604098[367] = 0;
   out_7676734681660604098[368] = 0;
   out_7676734681660604098[369] = 0;
   out_7676734681660604098[370] = 0;
   out_7676734681660604098[371] = 0;
   out_7676734681660604098[372] = 0;
   out_7676734681660604098[373] = 1.0;
   out_7676734681660604098[374] = 0;
   out_7676734681660604098[375] = 0;
   out_7676734681660604098[376] = 0;
   out_7676734681660604098[377] = 0;
   out_7676734681660604098[378] = 0;
   out_7676734681660604098[379] = 0;
   out_7676734681660604098[380] = 0;
   out_7676734681660604098[381] = 0;
   out_7676734681660604098[382] = 0;
   out_7676734681660604098[383] = 0;
   out_7676734681660604098[384] = 0;
   out_7676734681660604098[385] = 0;
   out_7676734681660604098[386] = 0;
   out_7676734681660604098[387] = 0;
   out_7676734681660604098[388] = 0;
   out_7676734681660604098[389] = 0;
   out_7676734681660604098[390] = 0;
   out_7676734681660604098[391] = 0;
   out_7676734681660604098[392] = 0;
   out_7676734681660604098[393] = 0;
   out_7676734681660604098[394] = 0;
   out_7676734681660604098[395] = 1.0;
   out_7676734681660604098[396] = 0;
   out_7676734681660604098[397] = 0;
   out_7676734681660604098[398] = 0;
   out_7676734681660604098[399] = 0;
   out_7676734681660604098[400] = 0;
   out_7676734681660604098[401] = 0;
   out_7676734681660604098[402] = 0;
   out_7676734681660604098[403] = 0;
   out_7676734681660604098[404] = 0;
   out_7676734681660604098[405] = 0;
   out_7676734681660604098[406] = 0;
   out_7676734681660604098[407] = 0;
   out_7676734681660604098[408] = 0;
   out_7676734681660604098[409] = 0;
   out_7676734681660604098[410] = 0;
   out_7676734681660604098[411] = 0;
   out_7676734681660604098[412] = 0;
   out_7676734681660604098[413] = 0;
   out_7676734681660604098[414] = 0;
   out_7676734681660604098[415] = 0;
   out_7676734681660604098[416] = 0;
   out_7676734681660604098[417] = 1.0;
   out_7676734681660604098[418] = 0;
   out_7676734681660604098[419] = 0;
   out_7676734681660604098[420] = 0;
   out_7676734681660604098[421] = 0;
   out_7676734681660604098[422] = 0;
   out_7676734681660604098[423] = 0;
   out_7676734681660604098[424] = 0;
   out_7676734681660604098[425] = 0;
   out_7676734681660604098[426] = 0;
   out_7676734681660604098[427] = 0;
   out_7676734681660604098[428] = 0;
   out_7676734681660604098[429] = 0;
   out_7676734681660604098[430] = 0;
   out_7676734681660604098[431] = 0;
   out_7676734681660604098[432] = 0;
   out_7676734681660604098[433] = 0;
   out_7676734681660604098[434] = 0;
   out_7676734681660604098[435] = 0;
   out_7676734681660604098[436] = 0;
   out_7676734681660604098[437] = 0;
   out_7676734681660604098[438] = 0;
   out_7676734681660604098[439] = 1.0;
   out_7676734681660604098[440] = 0;
   out_7676734681660604098[441] = 0;
   out_7676734681660604098[442] = 0;
   out_7676734681660604098[443] = 0;
   out_7676734681660604098[444] = 0;
   out_7676734681660604098[445] = 0;
   out_7676734681660604098[446] = 0;
   out_7676734681660604098[447] = 0;
   out_7676734681660604098[448] = 0;
   out_7676734681660604098[449] = 0;
   out_7676734681660604098[450] = 0;
   out_7676734681660604098[451] = 0;
   out_7676734681660604098[452] = 0;
   out_7676734681660604098[453] = 0;
   out_7676734681660604098[454] = 0;
   out_7676734681660604098[455] = 0;
   out_7676734681660604098[456] = 0;
   out_7676734681660604098[457] = 0;
   out_7676734681660604098[458] = 0;
   out_7676734681660604098[459] = 0;
   out_7676734681660604098[460] = 0;
   out_7676734681660604098[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8180926755761486799) {
   out_8180926755761486799[0] = dt*state[7] + state[0];
   out_8180926755761486799[1] = dt*state[8] + state[1];
   out_8180926755761486799[2] = dt*state[9] + state[2];
   out_8180926755761486799[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8180926755761486799[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8180926755761486799[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8180926755761486799[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8180926755761486799[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8180926755761486799[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8180926755761486799[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8180926755761486799[10] = state[10];
   out_8180926755761486799[11] = state[11];
   out_8180926755761486799[12] = state[12];
   out_8180926755761486799[13] = state[13];
   out_8180926755761486799[14] = state[14];
   out_8180926755761486799[15] = state[15];
   out_8180926755761486799[16] = state[16];
   out_8180926755761486799[17] = state[17];
   out_8180926755761486799[18] = state[18];
   out_8180926755761486799[19] = state[19];
   out_8180926755761486799[20] = state[20];
   out_8180926755761486799[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1938659733493136892) {
   out_1938659733493136892[0] = 1;
   out_1938659733493136892[1] = 0;
   out_1938659733493136892[2] = 0;
   out_1938659733493136892[3] = 0;
   out_1938659733493136892[4] = 0;
   out_1938659733493136892[5] = 0;
   out_1938659733493136892[6] = dt;
   out_1938659733493136892[7] = 0;
   out_1938659733493136892[8] = 0;
   out_1938659733493136892[9] = 0;
   out_1938659733493136892[10] = 0;
   out_1938659733493136892[11] = 0;
   out_1938659733493136892[12] = 0;
   out_1938659733493136892[13] = 0;
   out_1938659733493136892[14] = 0;
   out_1938659733493136892[15] = 0;
   out_1938659733493136892[16] = 0;
   out_1938659733493136892[17] = 0;
   out_1938659733493136892[18] = 0;
   out_1938659733493136892[19] = 0;
   out_1938659733493136892[20] = 0;
   out_1938659733493136892[21] = 0;
   out_1938659733493136892[22] = 1;
   out_1938659733493136892[23] = 0;
   out_1938659733493136892[24] = 0;
   out_1938659733493136892[25] = 0;
   out_1938659733493136892[26] = 0;
   out_1938659733493136892[27] = 0;
   out_1938659733493136892[28] = dt;
   out_1938659733493136892[29] = 0;
   out_1938659733493136892[30] = 0;
   out_1938659733493136892[31] = 0;
   out_1938659733493136892[32] = 0;
   out_1938659733493136892[33] = 0;
   out_1938659733493136892[34] = 0;
   out_1938659733493136892[35] = 0;
   out_1938659733493136892[36] = 0;
   out_1938659733493136892[37] = 0;
   out_1938659733493136892[38] = 0;
   out_1938659733493136892[39] = 0;
   out_1938659733493136892[40] = 0;
   out_1938659733493136892[41] = 0;
   out_1938659733493136892[42] = 0;
   out_1938659733493136892[43] = 0;
   out_1938659733493136892[44] = 1;
   out_1938659733493136892[45] = 0;
   out_1938659733493136892[46] = 0;
   out_1938659733493136892[47] = 0;
   out_1938659733493136892[48] = 0;
   out_1938659733493136892[49] = 0;
   out_1938659733493136892[50] = dt;
   out_1938659733493136892[51] = 0;
   out_1938659733493136892[52] = 0;
   out_1938659733493136892[53] = 0;
   out_1938659733493136892[54] = 0;
   out_1938659733493136892[55] = 0;
   out_1938659733493136892[56] = 0;
   out_1938659733493136892[57] = 0;
   out_1938659733493136892[58] = 0;
   out_1938659733493136892[59] = 0;
   out_1938659733493136892[60] = 0;
   out_1938659733493136892[61] = 0;
   out_1938659733493136892[62] = 0;
   out_1938659733493136892[63] = 0;
   out_1938659733493136892[64] = 0;
   out_1938659733493136892[65] = 0;
   out_1938659733493136892[66] = 1;
   out_1938659733493136892[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1938659733493136892[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1938659733493136892[69] = 0;
   out_1938659733493136892[70] = 0;
   out_1938659733493136892[71] = 0;
   out_1938659733493136892[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1938659733493136892[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1938659733493136892[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1938659733493136892[75] = 0;
   out_1938659733493136892[76] = 0;
   out_1938659733493136892[77] = 0;
   out_1938659733493136892[78] = 0;
   out_1938659733493136892[79] = 0;
   out_1938659733493136892[80] = 0;
   out_1938659733493136892[81] = 0;
   out_1938659733493136892[82] = 0;
   out_1938659733493136892[83] = 0;
   out_1938659733493136892[84] = 0;
   out_1938659733493136892[85] = 0;
   out_1938659733493136892[86] = 0;
   out_1938659733493136892[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1938659733493136892[88] = 1;
   out_1938659733493136892[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1938659733493136892[90] = 0;
   out_1938659733493136892[91] = 0;
   out_1938659733493136892[92] = 0;
   out_1938659733493136892[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1938659733493136892[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1938659733493136892[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1938659733493136892[96] = 0;
   out_1938659733493136892[97] = 0;
   out_1938659733493136892[98] = 0;
   out_1938659733493136892[99] = 0;
   out_1938659733493136892[100] = 0;
   out_1938659733493136892[101] = 0;
   out_1938659733493136892[102] = 0;
   out_1938659733493136892[103] = 0;
   out_1938659733493136892[104] = 0;
   out_1938659733493136892[105] = 0;
   out_1938659733493136892[106] = 0;
   out_1938659733493136892[107] = 0;
   out_1938659733493136892[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1938659733493136892[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1938659733493136892[110] = 1;
   out_1938659733493136892[111] = 0;
   out_1938659733493136892[112] = 0;
   out_1938659733493136892[113] = 0;
   out_1938659733493136892[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1938659733493136892[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1938659733493136892[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1938659733493136892[117] = 0;
   out_1938659733493136892[118] = 0;
   out_1938659733493136892[119] = 0;
   out_1938659733493136892[120] = 0;
   out_1938659733493136892[121] = 0;
   out_1938659733493136892[122] = 0;
   out_1938659733493136892[123] = 0;
   out_1938659733493136892[124] = 0;
   out_1938659733493136892[125] = 0;
   out_1938659733493136892[126] = 0;
   out_1938659733493136892[127] = 0;
   out_1938659733493136892[128] = 0;
   out_1938659733493136892[129] = 0;
   out_1938659733493136892[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1938659733493136892[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1938659733493136892[132] = 1;
   out_1938659733493136892[133] = 0;
   out_1938659733493136892[134] = 0;
   out_1938659733493136892[135] = 0;
   out_1938659733493136892[136] = 0;
   out_1938659733493136892[137] = 0;
   out_1938659733493136892[138] = 0;
   out_1938659733493136892[139] = 0;
   out_1938659733493136892[140] = 0;
   out_1938659733493136892[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1938659733493136892[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1938659733493136892[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1938659733493136892[144] = 0;
   out_1938659733493136892[145] = 0;
   out_1938659733493136892[146] = 0;
   out_1938659733493136892[147] = 0;
   out_1938659733493136892[148] = 0;
   out_1938659733493136892[149] = 0;
   out_1938659733493136892[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1938659733493136892[151] = 0;
   out_1938659733493136892[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1938659733493136892[153] = 0;
   out_1938659733493136892[154] = 1;
   out_1938659733493136892[155] = 0;
   out_1938659733493136892[156] = 0;
   out_1938659733493136892[157] = 0;
   out_1938659733493136892[158] = 0;
   out_1938659733493136892[159] = 0;
   out_1938659733493136892[160] = 0;
   out_1938659733493136892[161] = 0;
   out_1938659733493136892[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1938659733493136892[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1938659733493136892[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1938659733493136892[165] = 0;
   out_1938659733493136892[166] = 0;
   out_1938659733493136892[167] = 0;
   out_1938659733493136892[168] = 0;
   out_1938659733493136892[169] = 0;
   out_1938659733493136892[170] = 0;
   out_1938659733493136892[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1938659733493136892[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1938659733493136892[173] = 0;
   out_1938659733493136892[174] = 0;
   out_1938659733493136892[175] = 0;
   out_1938659733493136892[176] = 1;
   out_1938659733493136892[177] = 0;
   out_1938659733493136892[178] = 0;
   out_1938659733493136892[179] = 0;
   out_1938659733493136892[180] = 0;
   out_1938659733493136892[181] = 0;
   out_1938659733493136892[182] = 0;
   out_1938659733493136892[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1938659733493136892[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1938659733493136892[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1938659733493136892[186] = 0;
   out_1938659733493136892[187] = 0;
   out_1938659733493136892[188] = 0;
   out_1938659733493136892[189] = 0;
   out_1938659733493136892[190] = 0;
   out_1938659733493136892[191] = 0;
   out_1938659733493136892[192] = 0;
   out_1938659733493136892[193] = 0;
   out_1938659733493136892[194] = 0;
   out_1938659733493136892[195] = 0;
   out_1938659733493136892[196] = 0;
   out_1938659733493136892[197] = 0;
   out_1938659733493136892[198] = 1;
   out_1938659733493136892[199] = 0;
   out_1938659733493136892[200] = 0;
   out_1938659733493136892[201] = 0;
   out_1938659733493136892[202] = 0;
   out_1938659733493136892[203] = 0;
   out_1938659733493136892[204] = 0;
   out_1938659733493136892[205] = 0;
   out_1938659733493136892[206] = 0;
   out_1938659733493136892[207] = 0;
   out_1938659733493136892[208] = 0;
   out_1938659733493136892[209] = 0;
   out_1938659733493136892[210] = 0;
   out_1938659733493136892[211] = 0;
   out_1938659733493136892[212] = 0;
   out_1938659733493136892[213] = 0;
   out_1938659733493136892[214] = 0;
   out_1938659733493136892[215] = 0;
   out_1938659733493136892[216] = 0;
   out_1938659733493136892[217] = 0;
   out_1938659733493136892[218] = 0;
   out_1938659733493136892[219] = 0;
   out_1938659733493136892[220] = 1;
   out_1938659733493136892[221] = 0;
   out_1938659733493136892[222] = 0;
   out_1938659733493136892[223] = 0;
   out_1938659733493136892[224] = 0;
   out_1938659733493136892[225] = 0;
   out_1938659733493136892[226] = 0;
   out_1938659733493136892[227] = 0;
   out_1938659733493136892[228] = 0;
   out_1938659733493136892[229] = 0;
   out_1938659733493136892[230] = 0;
   out_1938659733493136892[231] = 0;
   out_1938659733493136892[232] = 0;
   out_1938659733493136892[233] = 0;
   out_1938659733493136892[234] = 0;
   out_1938659733493136892[235] = 0;
   out_1938659733493136892[236] = 0;
   out_1938659733493136892[237] = 0;
   out_1938659733493136892[238] = 0;
   out_1938659733493136892[239] = 0;
   out_1938659733493136892[240] = 0;
   out_1938659733493136892[241] = 0;
   out_1938659733493136892[242] = 1;
   out_1938659733493136892[243] = 0;
   out_1938659733493136892[244] = 0;
   out_1938659733493136892[245] = 0;
   out_1938659733493136892[246] = 0;
   out_1938659733493136892[247] = 0;
   out_1938659733493136892[248] = 0;
   out_1938659733493136892[249] = 0;
   out_1938659733493136892[250] = 0;
   out_1938659733493136892[251] = 0;
   out_1938659733493136892[252] = 0;
   out_1938659733493136892[253] = 0;
   out_1938659733493136892[254] = 0;
   out_1938659733493136892[255] = 0;
   out_1938659733493136892[256] = 0;
   out_1938659733493136892[257] = 0;
   out_1938659733493136892[258] = 0;
   out_1938659733493136892[259] = 0;
   out_1938659733493136892[260] = 0;
   out_1938659733493136892[261] = 0;
   out_1938659733493136892[262] = 0;
   out_1938659733493136892[263] = 0;
   out_1938659733493136892[264] = 1;
   out_1938659733493136892[265] = 0;
   out_1938659733493136892[266] = 0;
   out_1938659733493136892[267] = 0;
   out_1938659733493136892[268] = 0;
   out_1938659733493136892[269] = 0;
   out_1938659733493136892[270] = 0;
   out_1938659733493136892[271] = 0;
   out_1938659733493136892[272] = 0;
   out_1938659733493136892[273] = 0;
   out_1938659733493136892[274] = 0;
   out_1938659733493136892[275] = 0;
   out_1938659733493136892[276] = 0;
   out_1938659733493136892[277] = 0;
   out_1938659733493136892[278] = 0;
   out_1938659733493136892[279] = 0;
   out_1938659733493136892[280] = 0;
   out_1938659733493136892[281] = 0;
   out_1938659733493136892[282] = 0;
   out_1938659733493136892[283] = 0;
   out_1938659733493136892[284] = 0;
   out_1938659733493136892[285] = 0;
   out_1938659733493136892[286] = 1;
   out_1938659733493136892[287] = 0;
   out_1938659733493136892[288] = 0;
   out_1938659733493136892[289] = 0;
   out_1938659733493136892[290] = 0;
   out_1938659733493136892[291] = 0;
   out_1938659733493136892[292] = 0;
   out_1938659733493136892[293] = 0;
   out_1938659733493136892[294] = 0;
   out_1938659733493136892[295] = 0;
   out_1938659733493136892[296] = 0;
   out_1938659733493136892[297] = 0;
   out_1938659733493136892[298] = 0;
   out_1938659733493136892[299] = 0;
   out_1938659733493136892[300] = 0;
   out_1938659733493136892[301] = 0;
   out_1938659733493136892[302] = 0;
   out_1938659733493136892[303] = 0;
   out_1938659733493136892[304] = 0;
   out_1938659733493136892[305] = 0;
   out_1938659733493136892[306] = 0;
   out_1938659733493136892[307] = 0;
   out_1938659733493136892[308] = 1;
   out_1938659733493136892[309] = 0;
   out_1938659733493136892[310] = 0;
   out_1938659733493136892[311] = 0;
   out_1938659733493136892[312] = 0;
   out_1938659733493136892[313] = 0;
   out_1938659733493136892[314] = 0;
   out_1938659733493136892[315] = 0;
   out_1938659733493136892[316] = 0;
   out_1938659733493136892[317] = 0;
   out_1938659733493136892[318] = 0;
   out_1938659733493136892[319] = 0;
   out_1938659733493136892[320] = 0;
   out_1938659733493136892[321] = 0;
   out_1938659733493136892[322] = 0;
   out_1938659733493136892[323] = 0;
   out_1938659733493136892[324] = 0;
   out_1938659733493136892[325] = 0;
   out_1938659733493136892[326] = 0;
   out_1938659733493136892[327] = 0;
   out_1938659733493136892[328] = 0;
   out_1938659733493136892[329] = 0;
   out_1938659733493136892[330] = 1;
   out_1938659733493136892[331] = 0;
   out_1938659733493136892[332] = 0;
   out_1938659733493136892[333] = 0;
   out_1938659733493136892[334] = 0;
   out_1938659733493136892[335] = 0;
   out_1938659733493136892[336] = 0;
   out_1938659733493136892[337] = 0;
   out_1938659733493136892[338] = 0;
   out_1938659733493136892[339] = 0;
   out_1938659733493136892[340] = 0;
   out_1938659733493136892[341] = 0;
   out_1938659733493136892[342] = 0;
   out_1938659733493136892[343] = 0;
   out_1938659733493136892[344] = 0;
   out_1938659733493136892[345] = 0;
   out_1938659733493136892[346] = 0;
   out_1938659733493136892[347] = 0;
   out_1938659733493136892[348] = 0;
   out_1938659733493136892[349] = 0;
   out_1938659733493136892[350] = 0;
   out_1938659733493136892[351] = 0;
   out_1938659733493136892[352] = 1;
   out_1938659733493136892[353] = 0;
   out_1938659733493136892[354] = 0;
   out_1938659733493136892[355] = 0;
   out_1938659733493136892[356] = 0;
   out_1938659733493136892[357] = 0;
   out_1938659733493136892[358] = 0;
   out_1938659733493136892[359] = 0;
   out_1938659733493136892[360] = 0;
   out_1938659733493136892[361] = 0;
   out_1938659733493136892[362] = 0;
   out_1938659733493136892[363] = 0;
   out_1938659733493136892[364] = 0;
   out_1938659733493136892[365] = 0;
   out_1938659733493136892[366] = 0;
   out_1938659733493136892[367] = 0;
   out_1938659733493136892[368] = 0;
   out_1938659733493136892[369] = 0;
   out_1938659733493136892[370] = 0;
   out_1938659733493136892[371] = 0;
   out_1938659733493136892[372] = 0;
   out_1938659733493136892[373] = 0;
   out_1938659733493136892[374] = 1;
   out_1938659733493136892[375] = 0;
   out_1938659733493136892[376] = 0;
   out_1938659733493136892[377] = 0;
   out_1938659733493136892[378] = 0;
   out_1938659733493136892[379] = 0;
   out_1938659733493136892[380] = 0;
   out_1938659733493136892[381] = 0;
   out_1938659733493136892[382] = 0;
   out_1938659733493136892[383] = 0;
   out_1938659733493136892[384] = 0;
   out_1938659733493136892[385] = 0;
   out_1938659733493136892[386] = 0;
   out_1938659733493136892[387] = 0;
   out_1938659733493136892[388] = 0;
   out_1938659733493136892[389] = 0;
   out_1938659733493136892[390] = 0;
   out_1938659733493136892[391] = 0;
   out_1938659733493136892[392] = 0;
   out_1938659733493136892[393] = 0;
   out_1938659733493136892[394] = 0;
   out_1938659733493136892[395] = 0;
   out_1938659733493136892[396] = 1;
   out_1938659733493136892[397] = 0;
   out_1938659733493136892[398] = 0;
   out_1938659733493136892[399] = 0;
   out_1938659733493136892[400] = 0;
   out_1938659733493136892[401] = 0;
   out_1938659733493136892[402] = 0;
   out_1938659733493136892[403] = 0;
   out_1938659733493136892[404] = 0;
   out_1938659733493136892[405] = 0;
   out_1938659733493136892[406] = 0;
   out_1938659733493136892[407] = 0;
   out_1938659733493136892[408] = 0;
   out_1938659733493136892[409] = 0;
   out_1938659733493136892[410] = 0;
   out_1938659733493136892[411] = 0;
   out_1938659733493136892[412] = 0;
   out_1938659733493136892[413] = 0;
   out_1938659733493136892[414] = 0;
   out_1938659733493136892[415] = 0;
   out_1938659733493136892[416] = 0;
   out_1938659733493136892[417] = 0;
   out_1938659733493136892[418] = 1;
   out_1938659733493136892[419] = 0;
   out_1938659733493136892[420] = 0;
   out_1938659733493136892[421] = 0;
   out_1938659733493136892[422] = 0;
   out_1938659733493136892[423] = 0;
   out_1938659733493136892[424] = 0;
   out_1938659733493136892[425] = 0;
   out_1938659733493136892[426] = 0;
   out_1938659733493136892[427] = 0;
   out_1938659733493136892[428] = 0;
   out_1938659733493136892[429] = 0;
   out_1938659733493136892[430] = 0;
   out_1938659733493136892[431] = 0;
   out_1938659733493136892[432] = 0;
   out_1938659733493136892[433] = 0;
   out_1938659733493136892[434] = 0;
   out_1938659733493136892[435] = 0;
   out_1938659733493136892[436] = 0;
   out_1938659733493136892[437] = 0;
   out_1938659733493136892[438] = 0;
   out_1938659733493136892[439] = 0;
   out_1938659733493136892[440] = 1;
}
void h_4(double *state, double *unused, double *out_8681534188933206153) {
   out_8681534188933206153[0] = state[10] + state[13];
   out_8681534188933206153[1] = state[11] + state[14];
   out_8681534188933206153[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4360580272650345355) {
   out_4360580272650345355[0] = 0;
   out_4360580272650345355[1] = 0;
   out_4360580272650345355[2] = 0;
   out_4360580272650345355[3] = 0;
   out_4360580272650345355[4] = 0;
   out_4360580272650345355[5] = 0;
   out_4360580272650345355[6] = 0;
   out_4360580272650345355[7] = 0;
   out_4360580272650345355[8] = 0;
   out_4360580272650345355[9] = 0;
   out_4360580272650345355[10] = 1;
   out_4360580272650345355[11] = 0;
   out_4360580272650345355[12] = 0;
   out_4360580272650345355[13] = 1;
   out_4360580272650345355[14] = 0;
   out_4360580272650345355[15] = 0;
   out_4360580272650345355[16] = 0;
   out_4360580272650345355[17] = 0;
   out_4360580272650345355[18] = 0;
   out_4360580272650345355[19] = 0;
   out_4360580272650345355[20] = 0;
   out_4360580272650345355[21] = 0;
   out_4360580272650345355[22] = 0;
   out_4360580272650345355[23] = 0;
   out_4360580272650345355[24] = 0;
   out_4360580272650345355[25] = 0;
   out_4360580272650345355[26] = 0;
   out_4360580272650345355[27] = 0;
   out_4360580272650345355[28] = 0;
   out_4360580272650345355[29] = 0;
   out_4360580272650345355[30] = 0;
   out_4360580272650345355[31] = 0;
   out_4360580272650345355[32] = 0;
   out_4360580272650345355[33] = 1;
   out_4360580272650345355[34] = 0;
   out_4360580272650345355[35] = 0;
   out_4360580272650345355[36] = 1;
   out_4360580272650345355[37] = 0;
   out_4360580272650345355[38] = 0;
   out_4360580272650345355[39] = 0;
   out_4360580272650345355[40] = 0;
   out_4360580272650345355[41] = 0;
   out_4360580272650345355[42] = 0;
   out_4360580272650345355[43] = 0;
   out_4360580272650345355[44] = 0;
   out_4360580272650345355[45] = 0;
   out_4360580272650345355[46] = 0;
   out_4360580272650345355[47] = 0;
   out_4360580272650345355[48] = 0;
   out_4360580272650345355[49] = 0;
   out_4360580272650345355[50] = 0;
   out_4360580272650345355[51] = 0;
   out_4360580272650345355[52] = 0;
   out_4360580272650345355[53] = 0;
   out_4360580272650345355[54] = 0;
   out_4360580272650345355[55] = 0;
   out_4360580272650345355[56] = 1;
   out_4360580272650345355[57] = 0;
   out_4360580272650345355[58] = 0;
   out_4360580272650345355[59] = 1;
   out_4360580272650345355[60] = 0;
   out_4360580272650345355[61] = 0;
   out_4360580272650345355[62] = 0;
   out_4360580272650345355[63] = 0;
   out_4360580272650345355[64] = 0;
   out_4360580272650345355[65] = 0;
}
void h_9(double *state, double *unused, double *out_926990079681796669) {
   out_926990079681796669[0] = state[10];
   out_926990079681796669[1] = state[11];
   out_926990079681796669[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4119390626020754710) {
   out_4119390626020754710[0] = 0;
   out_4119390626020754710[1] = 0;
   out_4119390626020754710[2] = 0;
   out_4119390626020754710[3] = 0;
   out_4119390626020754710[4] = 0;
   out_4119390626020754710[5] = 0;
   out_4119390626020754710[6] = 0;
   out_4119390626020754710[7] = 0;
   out_4119390626020754710[8] = 0;
   out_4119390626020754710[9] = 0;
   out_4119390626020754710[10] = 1;
   out_4119390626020754710[11] = 0;
   out_4119390626020754710[12] = 0;
   out_4119390626020754710[13] = 0;
   out_4119390626020754710[14] = 0;
   out_4119390626020754710[15] = 0;
   out_4119390626020754710[16] = 0;
   out_4119390626020754710[17] = 0;
   out_4119390626020754710[18] = 0;
   out_4119390626020754710[19] = 0;
   out_4119390626020754710[20] = 0;
   out_4119390626020754710[21] = 0;
   out_4119390626020754710[22] = 0;
   out_4119390626020754710[23] = 0;
   out_4119390626020754710[24] = 0;
   out_4119390626020754710[25] = 0;
   out_4119390626020754710[26] = 0;
   out_4119390626020754710[27] = 0;
   out_4119390626020754710[28] = 0;
   out_4119390626020754710[29] = 0;
   out_4119390626020754710[30] = 0;
   out_4119390626020754710[31] = 0;
   out_4119390626020754710[32] = 0;
   out_4119390626020754710[33] = 1;
   out_4119390626020754710[34] = 0;
   out_4119390626020754710[35] = 0;
   out_4119390626020754710[36] = 0;
   out_4119390626020754710[37] = 0;
   out_4119390626020754710[38] = 0;
   out_4119390626020754710[39] = 0;
   out_4119390626020754710[40] = 0;
   out_4119390626020754710[41] = 0;
   out_4119390626020754710[42] = 0;
   out_4119390626020754710[43] = 0;
   out_4119390626020754710[44] = 0;
   out_4119390626020754710[45] = 0;
   out_4119390626020754710[46] = 0;
   out_4119390626020754710[47] = 0;
   out_4119390626020754710[48] = 0;
   out_4119390626020754710[49] = 0;
   out_4119390626020754710[50] = 0;
   out_4119390626020754710[51] = 0;
   out_4119390626020754710[52] = 0;
   out_4119390626020754710[53] = 0;
   out_4119390626020754710[54] = 0;
   out_4119390626020754710[55] = 0;
   out_4119390626020754710[56] = 1;
   out_4119390626020754710[57] = 0;
   out_4119390626020754710[58] = 0;
   out_4119390626020754710[59] = 0;
   out_4119390626020754710[60] = 0;
   out_4119390626020754710[61] = 0;
   out_4119390626020754710[62] = 0;
   out_4119390626020754710[63] = 0;
   out_4119390626020754710[64] = 0;
   out_4119390626020754710[65] = 0;
}
void h_10(double *state, double *unused, double *out_2996523681036057994) {
   out_2996523681036057994[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2996523681036057994[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2996523681036057994[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4414860148651295847) {
   out_4414860148651295847[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4414860148651295847[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4414860148651295847[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4414860148651295847[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414860148651295847[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414860148651295847[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414860148651295847[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414860148651295847[7] = 0;
   out_4414860148651295847[8] = 0;
   out_4414860148651295847[9] = 0;
   out_4414860148651295847[10] = 0;
   out_4414860148651295847[11] = 0;
   out_4414860148651295847[12] = 0;
   out_4414860148651295847[13] = 0;
   out_4414860148651295847[14] = 0;
   out_4414860148651295847[15] = 0;
   out_4414860148651295847[16] = 1;
   out_4414860148651295847[17] = 0;
   out_4414860148651295847[18] = 0;
   out_4414860148651295847[19] = 1;
   out_4414860148651295847[20] = 0;
   out_4414860148651295847[21] = 0;
   out_4414860148651295847[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4414860148651295847[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4414860148651295847[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4414860148651295847[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414860148651295847[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414860148651295847[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414860148651295847[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414860148651295847[29] = 0;
   out_4414860148651295847[30] = 0;
   out_4414860148651295847[31] = 0;
   out_4414860148651295847[32] = 0;
   out_4414860148651295847[33] = 0;
   out_4414860148651295847[34] = 0;
   out_4414860148651295847[35] = 0;
   out_4414860148651295847[36] = 0;
   out_4414860148651295847[37] = 0;
   out_4414860148651295847[38] = 0;
   out_4414860148651295847[39] = 1;
   out_4414860148651295847[40] = 0;
   out_4414860148651295847[41] = 0;
   out_4414860148651295847[42] = 1;
   out_4414860148651295847[43] = 0;
   out_4414860148651295847[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4414860148651295847[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4414860148651295847[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4414860148651295847[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4414860148651295847[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4414860148651295847[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4414860148651295847[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4414860148651295847[51] = 0;
   out_4414860148651295847[52] = 0;
   out_4414860148651295847[53] = 0;
   out_4414860148651295847[54] = 0;
   out_4414860148651295847[55] = 0;
   out_4414860148651295847[56] = 0;
   out_4414860148651295847[57] = 0;
   out_4414860148651295847[58] = 0;
   out_4414860148651295847[59] = 0;
   out_4414860148651295847[60] = 0;
   out_4414860148651295847[61] = 0;
   out_4414860148651295847[62] = 1;
   out_4414860148651295847[63] = 0;
   out_4414860148651295847[64] = 0;
   out_4414860148651295847[65] = 1;
}
void h_12(double *state, double *unused, double *out_7130410618713103849) {
   out_7130410618713103849[0] = state[0];
   out_7130410618713103849[1] = state[1];
   out_7130410618713103849[2] = state[2];
}
void H_12(double *state, double *unused, double *out_658876135381616440) {
   out_658876135381616440[0] = 1;
   out_658876135381616440[1] = 0;
   out_658876135381616440[2] = 0;
   out_658876135381616440[3] = 0;
   out_658876135381616440[4] = 0;
   out_658876135381616440[5] = 0;
   out_658876135381616440[6] = 0;
   out_658876135381616440[7] = 0;
   out_658876135381616440[8] = 0;
   out_658876135381616440[9] = 0;
   out_658876135381616440[10] = 0;
   out_658876135381616440[11] = 0;
   out_658876135381616440[12] = 0;
   out_658876135381616440[13] = 0;
   out_658876135381616440[14] = 0;
   out_658876135381616440[15] = 0;
   out_658876135381616440[16] = 0;
   out_658876135381616440[17] = 0;
   out_658876135381616440[18] = 0;
   out_658876135381616440[19] = 0;
   out_658876135381616440[20] = 0;
   out_658876135381616440[21] = 0;
   out_658876135381616440[22] = 0;
   out_658876135381616440[23] = 1;
   out_658876135381616440[24] = 0;
   out_658876135381616440[25] = 0;
   out_658876135381616440[26] = 0;
   out_658876135381616440[27] = 0;
   out_658876135381616440[28] = 0;
   out_658876135381616440[29] = 0;
   out_658876135381616440[30] = 0;
   out_658876135381616440[31] = 0;
   out_658876135381616440[32] = 0;
   out_658876135381616440[33] = 0;
   out_658876135381616440[34] = 0;
   out_658876135381616440[35] = 0;
   out_658876135381616440[36] = 0;
   out_658876135381616440[37] = 0;
   out_658876135381616440[38] = 0;
   out_658876135381616440[39] = 0;
   out_658876135381616440[40] = 0;
   out_658876135381616440[41] = 0;
   out_658876135381616440[42] = 0;
   out_658876135381616440[43] = 0;
   out_658876135381616440[44] = 0;
   out_658876135381616440[45] = 0;
   out_658876135381616440[46] = 1;
   out_658876135381616440[47] = 0;
   out_658876135381616440[48] = 0;
   out_658876135381616440[49] = 0;
   out_658876135381616440[50] = 0;
   out_658876135381616440[51] = 0;
   out_658876135381616440[52] = 0;
   out_658876135381616440[53] = 0;
   out_658876135381616440[54] = 0;
   out_658876135381616440[55] = 0;
   out_658876135381616440[56] = 0;
   out_658876135381616440[57] = 0;
   out_658876135381616440[58] = 0;
   out_658876135381616440[59] = 0;
   out_658876135381616440[60] = 0;
   out_658876135381616440[61] = 0;
   out_658876135381616440[62] = 0;
   out_658876135381616440[63] = 0;
   out_658876135381616440[64] = 0;
   out_658876135381616440[65] = 0;
}
void h_35(double *state, double *unused, double *out_6517342850202050802) {
   out_6517342850202050802[0] = state[7];
   out_6517342850202050802[1] = state[8];
   out_6517342850202050802[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3404439167706630149) {
   out_3404439167706630149[0] = 0;
   out_3404439167706630149[1] = 0;
   out_3404439167706630149[2] = 0;
   out_3404439167706630149[3] = 0;
   out_3404439167706630149[4] = 0;
   out_3404439167706630149[5] = 0;
   out_3404439167706630149[6] = 0;
   out_3404439167706630149[7] = 1;
   out_3404439167706630149[8] = 0;
   out_3404439167706630149[9] = 0;
   out_3404439167706630149[10] = 0;
   out_3404439167706630149[11] = 0;
   out_3404439167706630149[12] = 0;
   out_3404439167706630149[13] = 0;
   out_3404439167706630149[14] = 0;
   out_3404439167706630149[15] = 0;
   out_3404439167706630149[16] = 0;
   out_3404439167706630149[17] = 0;
   out_3404439167706630149[18] = 0;
   out_3404439167706630149[19] = 0;
   out_3404439167706630149[20] = 0;
   out_3404439167706630149[21] = 0;
   out_3404439167706630149[22] = 0;
   out_3404439167706630149[23] = 0;
   out_3404439167706630149[24] = 0;
   out_3404439167706630149[25] = 0;
   out_3404439167706630149[26] = 0;
   out_3404439167706630149[27] = 0;
   out_3404439167706630149[28] = 0;
   out_3404439167706630149[29] = 0;
   out_3404439167706630149[30] = 1;
   out_3404439167706630149[31] = 0;
   out_3404439167706630149[32] = 0;
   out_3404439167706630149[33] = 0;
   out_3404439167706630149[34] = 0;
   out_3404439167706630149[35] = 0;
   out_3404439167706630149[36] = 0;
   out_3404439167706630149[37] = 0;
   out_3404439167706630149[38] = 0;
   out_3404439167706630149[39] = 0;
   out_3404439167706630149[40] = 0;
   out_3404439167706630149[41] = 0;
   out_3404439167706630149[42] = 0;
   out_3404439167706630149[43] = 0;
   out_3404439167706630149[44] = 0;
   out_3404439167706630149[45] = 0;
   out_3404439167706630149[46] = 0;
   out_3404439167706630149[47] = 0;
   out_3404439167706630149[48] = 0;
   out_3404439167706630149[49] = 0;
   out_3404439167706630149[50] = 0;
   out_3404439167706630149[51] = 0;
   out_3404439167706630149[52] = 0;
   out_3404439167706630149[53] = 1;
   out_3404439167706630149[54] = 0;
   out_3404439167706630149[55] = 0;
   out_3404439167706630149[56] = 0;
   out_3404439167706630149[57] = 0;
   out_3404439167706630149[58] = 0;
   out_3404439167706630149[59] = 0;
   out_3404439167706630149[60] = 0;
   out_3404439167706630149[61] = 0;
   out_3404439167706630149[62] = 0;
   out_3404439167706630149[63] = 0;
   out_3404439167706630149[64] = 0;
   out_3404439167706630149[65] = 0;
}
void h_32(double *state, double *unused, double *out_4403188540589911972) {
   out_4403188540589911972[0] = state[3];
   out_4403188540589911972[1] = state[4];
   out_4403188540589911972[2] = state[5];
   out_4403188540589911972[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6677495319863093524) {
   out_6677495319863093524[0] = 0;
   out_6677495319863093524[1] = 0;
   out_6677495319863093524[2] = 0;
   out_6677495319863093524[3] = 1;
   out_6677495319863093524[4] = 0;
   out_6677495319863093524[5] = 0;
   out_6677495319863093524[6] = 0;
   out_6677495319863093524[7] = 0;
   out_6677495319863093524[8] = 0;
   out_6677495319863093524[9] = 0;
   out_6677495319863093524[10] = 0;
   out_6677495319863093524[11] = 0;
   out_6677495319863093524[12] = 0;
   out_6677495319863093524[13] = 0;
   out_6677495319863093524[14] = 0;
   out_6677495319863093524[15] = 0;
   out_6677495319863093524[16] = 0;
   out_6677495319863093524[17] = 0;
   out_6677495319863093524[18] = 0;
   out_6677495319863093524[19] = 0;
   out_6677495319863093524[20] = 0;
   out_6677495319863093524[21] = 0;
   out_6677495319863093524[22] = 0;
   out_6677495319863093524[23] = 0;
   out_6677495319863093524[24] = 0;
   out_6677495319863093524[25] = 0;
   out_6677495319863093524[26] = 1;
   out_6677495319863093524[27] = 0;
   out_6677495319863093524[28] = 0;
   out_6677495319863093524[29] = 0;
   out_6677495319863093524[30] = 0;
   out_6677495319863093524[31] = 0;
   out_6677495319863093524[32] = 0;
   out_6677495319863093524[33] = 0;
   out_6677495319863093524[34] = 0;
   out_6677495319863093524[35] = 0;
   out_6677495319863093524[36] = 0;
   out_6677495319863093524[37] = 0;
   out_6677495319863093524[38] = 0;
   out_6677495319863093524[39] = 0;
   out_6677495319863093524[40] = 0;
   out_6677495319863093524[41] = 0;
   out_6677495319863093524[42] = 0;
   out_6677495319863093524[43] = 0;
   out_6677495319863093524[44] = 0;
   out_6677495319863093524[45] = 0;
   out_6677495319863093524[46] = 0;
   out_6677495319863093524[47] = 0;
   out_6677495319863093524[48] = 0;
   out_6677495319863093524[49] = 1;
   out_6677495319863093524[50] = 0;
   out_6677495319863093524[51] = 0;
   out_6677495319863093524[52] = 0;
   out_6677495319863093524[53] = 0;
   out_6677495319863093524[54] = 0;
   out_6677495319863093524[55] = 0;
   out_6677495319863093524[56] = 0;
   out_6677495319863093524[57] = 0;
   out_6677495319863093524[58] = 0;
   out_6677495319863093524[59] = 0;
   out_6677495319863093524[60] = 0;
   out_6677495319863093524[61] = 0;
   out_6677495319863093524[62] = 0;
   out_6677495319863093524[63] = 0;
   out_6677495319863093524[64] = 0;
   out_6677495319863093524[65] = 0;
   out_6677495319863093524[66] = 0;
   out_6677495319863093524[67] = 0;
   out_6677495319863093524[68] = 0;
   out_6677495319863093524[69] = 0;
   out_6677495319863093524[70] = 0;
   out_6677495319863093524[71] = 0;
   out_6677495319863093524[72] = 1;
   out_6677495319863093524[73] = 0;
   out_6677495319863093524[74] = 0;
   out_6677495319863093524[75] = 0;
   out_6677495319863093524[76] = 0;
   out_6677495319863093524[77] = 0;
   out_6677495319863093524[78] = 0;
   out_6677495319863093524[79] = 0;
   out_6677495319863093524[80] = 0;
   out_6677495319863093524[81] = 0;
   out_6677495319863093524[82] = 0;
   out_6677495319863093524[83] = 0;
   out_6677495319863093524[84] = 0;
   out_6677495319863093524[85] = 0;
   out_6677495319863093524[86] = 0;
   out_6677495319863093524[87] = 0;
}
void h_13(double *state, double *unused, double *out_626880725603460292) {
   out_626880725603460292[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_626880725603460292[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_626880725603460292[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4495004969689374435) {
   out_4495004969689374435[0] = 0;
   out_4495004969689374435[1] = 0;
   out_4495004969689374435[2] = 0;
   out_4495004969689374435[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4495004969689374435[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4495004969689374435[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4495004969689374435[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4495004969689374435[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4495004969689374435[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4495004969689374435[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4495004969689374435[10] = 0;
   out_4495004969689374435[11] = 0;
   out_4495004969689374435[12] = 0;
   out_4495004969689374435[13] = 0;
   out_4495004969689374435[14] = 0;
   out_4495004969689374435[15] = 0;
   out_4495004969689374435[16] = 0;
   out_4495004969689374435[17] = 0;
   out_4495004969689374435[18] = 0;
   out_4495004969689374435[19] = 0;
   out_4495004969689374435[20] = 0;
   out_4495004969689374435[21] = 0;
   out_4495004969689374435[22] = 0;
   out_4495004969689374435[23] = 0;
   out_4495004969689374435[24] = 0;
   out_4495004969689374435[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4495004969689374435[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4495004969689374435[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4495004969689374435[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4495004969689374435[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4495004969689374435[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4495004969689374435[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4495004969689374435[32] = 0;
   out_4495004969689374435[33] = 0;
   out_4495004969689374435[34] = 0;
   out_4495004969689374435[35] = 0;
   out_4495004969689374435[36] = 0;
   out_4495004969689374435[37] = 0;
   out_4495004969689374435[38] = 0;
   out_4495004969689374435[39] = 0;
   out_4495004969689374435[40] = 0;
   out_4495004969689374435[41] = 0;
   out_4495004969689374435[42] = 0;
   out_4495004969689374435[43] = 0;
   out_4495004969689374435[44] = 0;
   out_4495004969689374435[45] = 0;
   out_4495004969689374435[46] = 0;
   out_4495004969689374435[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4495004969689374435[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4495004969689374435[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4495004969689374435[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4495004969689374435[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4495004969689374435[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4495004969689374435[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4495004969689374435[54] = 0;
   out_4495004969689374435[55] = 0;
   out_4495004969689374435[56] = 0;
   out_4495004969689374435[57] = 0;
   out_4495004969689374435[58] = 0;
   out_4495004969689374435[59] = 0;
   out_4495004969689374435[60] = 0;
   out_4495004969689374435[61] = 0;
   out_4495004969689374435[62] = 0;
   out_4495004969689374435[63] = 0;
   out_4495004969689374435[64] = 0;
   out_4495004969689374435[65] = 0;
}
void h_14(double *state, double *unused, double *out_926990079681796669) {
   out_926990079681796669[0] = state[10];
   out_926990079681796669[1] = state[11];
   out_926990079681796669[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4119390626020754710) {
   out_4119390626020754710[0] = 0;
   out_4119390626020754710[1] = 0;
   out_4119390626020754710[2] = 0;
   out_4119390626020754710[3] = 0;
   out_4119390626020754710[4] = 0;
   out_4119390626020754710[5] = 0;
   out_4119390626020754710[6] = 0;
   out_4119390626020754710[7] = 0;
   out_4119390626020754710[8] = 0;
   out_4119390626020754710[9] = 0;
   out_4119390626020754710[10] = 1;
   out_4119390626020754710[11] = 0;
   out_4119390626020754710[12] = 0;
   out_4119390626020754710[13] = 0;
   out_4119390626020754710[14] = 0;
   out_4119390626020754710[15] = 0;
   out_4119390626020754710[16] = 0;
   out_4119390626020754710[17] = 0;
   out_4119390626020754710[18] = 0;
   out_4119390626020754710[19] = 0;
   out_4119390626020754710[20] = 0;
   out_4119390626020754710[21] = 0;
   out_4119390626020754710[22] = 0;
   out_4119390626020754710[23] = 0;
   out_4119390626020754710[24] = 0;
   out_4119390626020754710[25] = 0;
   out_4119390626020754710[26] = 0;
   out_4119390626020754710[27] = 0;
   out_4119390626020754710[28] = 0;
   out_4119390626020754710[29] = 0;
   out_4119390626020754710[30] = 0;
   out_4119390626020754710[31] = 0;
   out_4119390626020754710[32] = 0;
   out_4119390626020754710[33] = 1;
   out_4119390626020754710[34] = 0;
   out_4119390626020754710[35] = 0;
   out_4119390626020754710[36] = 0;
   out_4119390626020754710[37] = 0;
   out_4119390626020754710[38] = 0;
   out_4119390626020754710[39] = 0;
   out_4119390626020754710[40] = 0;
   out_4119390626020754710[41] = 0;
   out_4119390626020754710[42] = 0;
   out_4119390626020754710[43] = 0;
   out_4119390626020754710[44] = 0;
   out_4119390626020754710[45] = 0;
   out_4119390626020754710[46] = 0;
   out_4119390626020754710[47] = 0;
   out_4119390626020754710[48] = 0;
   out_4119390626020754710[49] = 0;
   out_4119390626020754710[50] = 0;
   out_4119390626020754710[51] = 0;
   out_4119390626020754710[52] = 0;
   out_4119390626020754710[53] = 0;
   out_4119390626020754710[54] = 0;
   out_4119390626020754710[55] = 0;
   out_4119390626020754710[56] = 1;
   out_4119390626020754710[57] = 0;
   out_4119390626020754710[58] = 0;
   out_4119390626020754710[59] = 0;
   out_4119390626020754710[60] = 0;
   out_4119390626020754710[61] = 0;
   out_4119390626020754710[62] = 0;
   out_4119390626020754710[63] = 0;
   out_4119390626020754710[64] = 0;
   out_4119390626020754710[65] = 0;
}
void h_33(double *state, double *unused, double *out_2722382023231819963) {
   out_2722382023231819963[0] = state[16];
   out_2722382023231819963[1] = state[17];
   out_2722382023231819963[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6554996172345487753) {
   out_6554996172345487753[0] = 0;
   out_6554996172345487753[1] = 0;
   out_6554996172345487753[2] = 0;
   out_6554996172345487753[3] = 0;
   out_6554996172345487753[4] = 0;
   out_6554996172345487753[5] = 0;
   out_6554996172345487753[6] = 0;
   out_6554996172345487753[7] = 0;
   out_6554996172345487753[8] = 0;
   out_6554996172345487753[9] = 0;
   out_6554996172345487753[10] = 0;
   out_6554996172345487753[11] = 0;
   out_6554996172345487753[12] = 0;
   out_6554996172345487753[13] = 0;
   out_6554996172345487753[14] = 0;
   out_6554996172345487753[15] = 0;
   out_6554996172345487753[16] = 1;
   out_6554996172345487753[17] = 0;
   out_6554996172345487753[18] = 0;
   out_6554996172345487753[19] = 0;
   out_6554996172345487753[20] = 0;
   out_6554996172345487753[21] = 0;
   out_6554996172345487753[22] = 0;
   out_6554996172345487753[23] = 0;
   out_6554996172345487753[24] = 0;
   out_6554996172345487753[25] = 0;
   out_6554996172345487753[26] = 0;
   out_6554996172345487753[27] = 0;
   out_6554996172345487753[28] = 0;
   out_6554996172345487753[29] = 0;
   out_6554996172345487753[30] = 0;
   out_6554996172345487753[31] = 0;
   out_6554996172345487753[32] = 0;
   out_6554996172345487753[33] = 0;
   out_6554996172345487753[34] = 0;
   out_6554996172345487753[35] = 0;
   out_6554996172345487753[36] = 0;
   out_6554996172345487753[37] = 0;
   out_6554996172345487753[38] = 0;
   out_6554996172345487753[39] = 1;
   out_6554996172345487753[40] = 0;
   out_6554996172345487753[41] = 0;
   out_6554996172345487753[42] = 0;
   out_6554996172345487753[43] = 0;
   out_6554996172345487753[44] = 0;
   out_6554996172345487753[45] = 0;
   out_6554996172345487753[46] = 0;
   out_6554996172345487753[47] = 0;
   out_6554996172345487753[48] = 0;
   out_6554996172345487753[49] = 0;
   out_6554996172345487753[50] = 0;
   out_6554996172345487753[51] = 0;
   out_6554996172345487753[52] = 0;
   out_6554996172345487753[53] = 0;
   out_6554996172345487753[54] = 0;
   out_6554996172345487753[55] = 0;
   out_6554996172345487753[56] = 0;
   out_6554996172345487753[57] = 0;
   out_6554996172345487753[58] = 0;
   out_6554996172345487753[59] = 0;
   out_6554996172345487753[60] = 0;
   out_6554996172345487753[61] = 0;
   out_6554996172345487753[62] = 1;
   out_6554996172345487753[63] = 0;
   out_6554996172345487753[64] = 0;
   out_6554996172345487753[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4803752866237518805) {
  H(in_vec, out_4803752866237518805);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3139786301780846039) {
  err_fun(nom_x, delta_x, out_3139786301780846039);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5873938798188305086) {
  inv_err_fun(nom_x, true_x, out_5873938798188305086);
}
void live_H_mod_fun(double *state, double *out_7676734681660604098) {
  H_mod_fun(state, out_7676734681660604098);
}
void live_f_fun(double *state, double dt, double *out_8180926755761486799) {
  f_fun(state,  dt, out_8180926755761486799);
}
void live_F_fun(double *state, double dt, double *out_1938659733493136892) {
  F_fun(state,  dt, out_1938659733493136892);
}
void live_h_4(double *state, double *unused, double *out_8681534188933206153) {
  h_4(state, unused, out_8681534188933206153);
}
void live_H_4(double *state, double *unused, double *out_4360580272650345355) {
  H_4(state, unused, out_4360580272650345355);
}
void live_h_9(double *state, double *unused, double *out_926990079681796669) {
  h_9(state, unused, out_926990079681796669);
}
void live_H_9(double *state, double *unused, double *out_4119390626020754710) {
  H_9(state, unused, out_4119390626020754710);
}
void live_h_10(double *state, double *unused, double *out_2996523681036057994) {
  h_10(state, unused, out_2996523681036057994);
}
void live_H_10(double *state, double *unused, double *out_4414860148651295847) {
  H_10(state, unused, out_4414860148651295847);
}
void live_h_12(double *state, double *unused, double *out_7130410618713103849) {
  h_12(state, unused, out_7130410618713103849);
}
void live_H_12(double *state, double *unused, double *out_658876135381616440) {
  H_12(state, unused, out_658876135381616440);
}
void live_h_35(double *state, double *unused, double *out_6517342850202050802) {
  h_35(state, unused, out_6517342850202050802);
}
void live_H_35(double *state, double *unused, double *out_3404439167706630149) {
  H_35(state, unused, out_3404439167706630149);
}
void live_h_32(double *state, double *unused, double *out_4403188540589911972) {
  h_32(state, unused, out_4403188540589911972);
}
void live_H_32(double *state, double *unused, double *out_6677495319863093524) {
  H_32(state, unused, out_6677495319863093524);
}
void live_h_13(double *state, double *unused, double *out_626880725603460292) {
  h_13(state, unused, out_626880725603460292);
}
void live_H_13(double *state, double *unused, double *out_4495004969689374435) {
  H_13(state, unused, out_4495004969689374435);
}
void live_h_14(double *state, double *unused, double *out_926990079681796669) {
  h_14(state, unused, out_926990079681796669);
}
void live_H_14(double *state, double *unused, double *out_4119390626020754710) {
  H_14(state, unused, out_4119390626020754710);
}
void live_h_33(double *state, double *unused, double *out_2722382023231819963) {
  h_33(state, unused, out_2722382023231819963);
}
void live_H_33(double *state, double *unused, double *out_6554996172345487753) {
  H_33(state, unused, out_6554996172345487753);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
