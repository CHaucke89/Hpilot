#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7937023460616626552) {
   out_7937023460616626552[0] = 0;
   out_7937023460616626552[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7937023460616626552[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7937023460616626552[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7937023460616626552[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7937023460616626552[5] = -sin(in_vec[1]);
   out_7937023460616626552[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7937023460616626552[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7937023460616626552[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7937023460616626552[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7937023460616626552[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7937023460616626552[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7937023460616626552[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7937023460616626552[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7937023460616626552[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7937023460616626552[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7937023460616626552[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7937023460616626552[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1687216722465635178) {
   out_1687216722465635178[0] = delta_x[0] + nom_x[0];
   out_1687216722465635178[1] = delta_x[1] + nom_x[1];
   out_1687216722465635178[2] = delta_x[2] + nom_x[2];
   out_1687216722465635178[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1687216722465635178[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1687216722465635178[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1687216722465635178[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1687216722465635178[7] = delta_x[6] + nom_x[7];
   out_1687216722465635178[8] = delta_x[7] + nom_x[8];
   out_1687216722465635178[9] = delta_x[8] + nom_x[9];
   out_1687216722465635178[10] = delta_x[9] + nom_x[10];
   out_1687216722465635178[11] = delta_x[10] + nom_x[11];
   out_1687216722465635178[12] = delta_x[11] + nom_x[12];
   out_1687216722465635178[13] = delta_x[12] + nom_x[13];
   out_1687216722465635178[14] = delta_x[13] + nom_x[14];
   out_1687216722465635178[15] = delta_x[14] + nom_x[15];
   out_1687216722465635178[16] = delta_x[15] + nom_x[16];
   out_1687216722465635178[17] = delta_x[16] + nom_x[17];
   out_1687216722465635178[18] = delta_x[17] + nom_x[18];
   out_1687216722465635178[19] = delta_x[18] + nom_x[19];
   out_1687216722465635178[20] = delta_x[19] + nom_x[20];
   out_1687216722465635178[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1599895347954292229) {
   out_1599895347954292229[0] = -nom_x[0] + true_x[0];
   out_1599895347954292229[1] = -nom_x[1] + true_x[1];
   out_1599895347954292229[2] = -nom_x[2] + true_x[2];
   out_1599895347954292229[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1599895347954292229[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1599895347954292229[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1599895347954292229[6] = -nom_x[7] + true_x[7];
   out_1599895347954292229[7] = -nom_x[8] + true_x[8];
   out_1599895347954292229[8] = -nom_x[9] + true_x[9];
   out_1599895347954292229[9] = -nom_x[10] + true_x[10];
   out_1599895347954292229[10] = -nom_x[11] + true_x[11];
   out_1599895347954292229[11] = -nom_x[12] + true_x[12];
   out_1599895347954292229[12] = -nom_x[13] + true_x[13];
   out_1599895347954292229[13] = -nom_x[14] + true_x[14];
   out_1599895347954292229[14] = -nom_x[15] + true_x[15];
   out_1599895347954292229[15] = -nom_x[16] + true_x[16];
   out_1599895347954292229[16] = -nom_x[17] + true_x[17];
   out_1599895347954292229[17] = -nom_x[18] + true_x[18];
   out_1599895347954292229[18] = -nom_x[19] + true_x[19];
   out_1599895347954292229[19] = -nom_x[20] + true_x[20];
   out_1599895347954292229[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1056906584894128593) {
   out_1056906584894128593[0] = 1.0;
   out_1056906584894128593[1] = 0;
   out_1056906584894128593[2] = 0;
   out_1056906584894128593[3] = 0;
   out_1056906584894128593[4] = 0;
   out_1056906584894128593[5] = 0;
   out_1056906584894128593[6] = 0;
   out_1056906584894128593[7] = 0;
   out_1056906584894128593[8] = 0;
   out_1056906584894128593[9] = 0;
   out_1056906584894128593[10] = 0;
   out_1056906584894128593[11] = 0;
   out_1056906584894128593[12] = 0;
   out_1056906584894128593[13] = 0;
   out_1056906584894128593[14] = 0;
   out_1056906584894128593[15] = 0;
   out_1056906584894128593[16] = 0;
   out_1056906584894128593[17] = 0;
   out_1056906584894128593[18] = 0;
   out_1056906584894128593[19] = 0;
   out_1056906584894128593[20] = 0;
   out_1056906584894128593[21] = 0;
   out_1056906584894128593[22] = 1.0;
   out_1056906584894128593[23] = 0;
   out_1056906584894128593[24] = 0;
   out_1056906584894128593[25] = 0;
   out_1056906584894128593[26] = 0;
   out_1056906584894128593[27] = 0;
   out_1056906584894128593[28] = 0;
   out_1056906584894128593[29] = 0;
   out_1056906584894128593[30] = 0;
   out_1056906584894128593[31] = 0;
   out_1056906584894128593[32] = 0;
   out_1056906584894128593[33] = 0;
   out_1056906584894128593[34] = 0;
   out_1056906584894128593[35] = 0;
   out_1056906584894128593[36] = 0;
   out_1056906584894128593[37] = 0;
   out_1056906584894128593[38] = 0;
   out_1056906584894128593[39] = 0;
   out_1056906584894128593[40] = 0;
   out_1056906584894128593[41] = 0;
   out_1056906584894128593[42] = 0;
   out_1056906584894128593[43] = 0;
   out_1056906584894128593[44] = 1.0;
   out_1056906584894128593[45] = 0;
   out_1056906584894128593[46] = 0;
   out_1056906584894128593[47] = 0;
   out_1056906584894128593[48] = 0;
   out_1056906584894128593[49] = 0;
   out_1056906584894128593[50] = 0;
   out_1056906584894128593[51] = 0;
   out_1056906584894128593[52] = 0;
   out_1056906584894128593[53] = 0;
   out_1056906584894128593[54] = 0;
   out_1056906584894128593[55] = 0;
   out_1056906584894128593[56] = 0;
   out_1056906584894128593[57] = 0;
   out_1056906584894128593[58] = 0;
   out_1056906584894128593[59] = 0;
   out_1056906584894128593[60] = 0;
   out_1056906584894128593[61] = 0;
   out_1056906584894128593[62] = 0;
   out_1056906584894128593[63] = 0;
   out_1056906584894128593[64] = 0;
   out_1056906584894128593[65] = 0;
   out_1056906584894128593[66] = -0.5*state[4];
   out_1056906584894128593[67] = -0.5*state[5];
   out_1056906584894128593[68] = -0.5*state[6];
   out_1056906584894128593[69] = 0;
   out_1056906584894128593[70] = 0;
   out_1056906584894128593[71] = 0;
   out_1056906584894128593[72] = 0;
   out_1056906584894128593[73] = 0;
   out_1056906584894128593[74] = 0;
   out_1056906584894128593[75] = 0;
   out_1056906584894128593[76] = 0;
   out_1056906584894128593[77] = 0;
   out_1056906584894128593[78] = 0;
   out_1056906584894128593[79] = 0;
   out_1056906584894128593[80] = 0;
   out_1056906584894128593[81] = 0;
   out_1056906584894128593[82] = 0;
   out_1056906584894128593[83] = 0;
   out_1056906584894128593[84] = 0;
   out_1056906584894128593[85] = 0;
   out_1056906584894128593[86] = 0;
   out_1056906584894128593[87] = 0.5*state[3];
   out_1056906584894128593[88] = 0.5*state[6];
   out_1056906584894128593[89] = -0.5*state[5];
   out_1056906584894128593[90] = 0;
   out_1056906584894128593[91] = 0;
   out_1056906584894128593[92] = 0;
   out_1056906584894128593[93] = 0;
   out_1056906584894128593[94] = 0;
   out_1056906584894128593[95] = 0;
   out_1056906584894128593[96] = 0;
   out_1056906584894128593[97] = 0;
   out_1056906584894128593[98] = 0;
   out_1056906584894128593[99] = 0;
   out_1056906584894128593[100] = 0;
   out_1056906584894128593[101] = 0;
   out_1056906584894128593[102] = 0;
   out_1056906584894128593[103] = 0;
   out_1056906584894128593[104] = 0;
   out_1056906584894128593[105] = 0;
   out_1056906584894128593[106] = 0;
   out_1056906584894128593[107] = 0;
   out_1056906584894128593[108] = -0.5*state[6];
   out_1056906584894128593[109] = 0.5*state[3];
   out_1056906584894128593[110] = 0.5*state[4];
   out_1056906584894128593[111] = 0;
   out_1056906584894128593[112] = 0;
   out_1056906584894128593[113] = 0;
   out_1056906584894128593[114] = 0;
   out_1056906584894128593[115] = 0;
   out_1056906584894128593[116] = 0;
   out_1056906584894128593[117] = 0;
   out_1056906584894128593[118] = 0;
   out_1056906584894128593[119] = 0;
   out_1056906584894128593[120] = 0;
   out_1056906584894128593[121] = 0;
   out_1056906584894128593[122] = 0;
   out_1056906584894128593[123] = 0;
   out_1056906584894128593[124] = 0;
   out_1056906584894128593[125] = 0;
   out_1056906584894128593[126] = 0;
   out_1056906584894128593[127] = 0;
   out_1056906584894128593[128] = 0;
   out_1056906584894128593[129] = 0.5*state[5];
   out_1056906584894128593[130] = -0.5*state[4];
   out_1056906584894128593[131] = 0.5*state[3];
   out_1056906584894128593[132] = 0;
   out_1056906584894128593[133] = 0;
   out_1056906584894128593[134] = 0;
   out_1056906584894128593[135] = 0;
   out_1056906584894128593[136] = 0;
   out_1056906584894128593[137] = 0;
   out_1056906584894128593[138] = 0;
   out_1056906584894128593[139] = 0;
   out_1056906584894128593[140] = 0;
   out_1056906584894128593[141] = 0;
   out_1056906584894128593[142] = 0;
   out_1056906584894128593[143] = 0;
   out_1056906584894128593[144] = 0;
   out_1056906584894128593[145] = 0;
   out_1056906584894128593[146] = 0;
   out_1056906584894128593[147] = 0;
   out_1056906584894128593[148] = 0;
   out_1056906584894128593[149] = 0;
   out_1056906584894128593[150] = 0;
   out_1056906584894128593[151] = 0;
   out_1056906584894128593[152] = 0;
   out_1056906584894128593[153] = 1.0;
   out_1056906584894128593[154] = 0;
   out_1056906584894128593[155] = 0;
   out_1056906584894128593[156] = 0;
   out_1056906584894128593[157] = 0;
   out_1056906584894128593[158] = 0;
   out_1056906584894128593[159] = 0;
   out_1056906584894128593[160] = 0;
   out_1056906584894128593[161] = 0;
   out_1056906584894128593[162] = 0;
   out_1056906584894128593[163] = 0;
   out_1056906584894128593[164] = 0;
   out_1056906584894128593[165] = 0;
   out_1056906584894128593[166] = 0;
   out_1056906584894128593[167] = 0;
   out_1056906584894128593[168] = 0;
   out_1056906584894128593[169] = 0;
   out_1056906584894128593[170] = 0;
   out_1056906584894128593[171] = 0;
   out_1056906584894128593[172] = 0;
   out_1056906584894128593[173] = 0;
   out_1056906584894128593[174] = 0;
   out_1056906584894128593[175] = 1.0;
   out_1056906584894128593[176] = 0;
   out_1056906584894128593[177] = 0;
   out_1056906584894128593[178] = 0;
   out_1056906584894128593[179] = 0;
   out_1056906584894128593[180] = 0;
   out_1056906584894128593[181] = 0;
   out_1056906584894128593[182] = 0;
   out_1056906584894128593[183] = 0;
   out_1056906584894128593[184] = 0;
   out_1056906584894128593[185] = 0;
   out_1056906584894128593[186] = 0;
   out_1056906584894128593[187] = 0;
   out_1056906584894128593[188] = 0;
   out_1056906584894128593[189] = 0;
   out_1056906584894128593[190] = 0;
   out_1056906584894128593[191] = 0;
   out_1056906584894128593[192] = 0;
   out_1056906584894128593[193] = 0;
   out_1056906584894128593[194] = 0;
   out_1056906584894128593[195] = 0;
   out_1056906584894128593[196] = 0;
   out_1056906584894128593[197] = 1.0;
   out_1056906584894128593[198] = 0;
   out_1056906584894128593[199] = 0;
   out_1056906584894128593[200] = 0;
   out_1056906584894128593[201] = 0;
   out_1056906584894128593[202] = 0;
   out_1056906584894128593[203] = 0;
   out_1056906584894128593[204] = 0;
   out_1056906584894128593[205] = 0;
   out_1056906584894128593[206] = 0;
   out_1056906584894128593[207] = 0;
   out_1056906584894128593[208] = 0;
   out_1056906584894128593[209] = 0;
   out_1056906584894128593[210] = 0;
   out_1056906584894128593[211] = 0;
   out_1056906584894128593[212] = 0;
   out_1056906584894128593[213] = 0;
   out_1056906584894128593[214] = 0;
   out_1056906584894128593[215] = 0;
   out_1056906584894128593[216] = 0;
   out_1056906584894128593[217] = 0;
   out_1056906584894128593[218] = 0;
   out_1056906584894128593[219] = 1.0;
   out_1056906584894128593[220] = 0;
   out_1056906584894128593[221] = 0;
   out_1056906584894128593[222] = 0;
   out_1056906584894128593[223] = 0;
   out_1056906584894128593[224] = 0;
   out_1056906584894128593[225] = 0;
   out_1056906584894128593[226] = 0;
   out_1056906584894128593[227] = 0;
   out_1056906584894128593[228] = 0;
   out_1056906584894128593[229] = 0;
   out_1056906584894128593[230] = 0;
   out_1056906584894128593[231] = 0;
   out_1056906584894128593[232] = 0;
   out_1056906584894128593[233] = 0;
   out_1056906584894128593[234] = 0;
   out_1056906584894128593[235] = 0;
   out_1056906584894128593[236] = 0;
   out_1056906584894128593[237] = 0;
   out_1056906584894128593[238] = 0;
   out_1056906584894128593[239] = 0;
   out_1056906584894128593[240] = 0;
   out_1056906584894128593[241] = 1.0;
   out_1056906584894128593[242] = 0;
   out_1056906584894128593[243] = 0;
   out_1056906584894128593[244] = 0;
   out_1056906584894128593[245] = 0;
   out_1056906584894128593[246] = 0;
   out_1056906584894128593[247] = 0;
   out_1056906584894128593[248] = 0;
   out_1056906584894128593[249] = 0;
   out_1056906584894128593[250] = 0;
   out_1056906584894128593[251] = 0;
   out_1056906584894128593[252] = 0;
   out_1056906584894128593[253] = 0;
   out_1056906584894128593[254] = 0;
   out_1056906584894128593[255] = 0;
   out_1056906584894128593[256] = 0;
   out_1056906584894128593[257] = 0;
   out_1056906584894128593[258] = 0;
   out_1056906584894128593[259] = 0;
   out_1056906584894128593[260] = 0;
   out_1056906584894128593[261] = 0;
   out_1056906584894128593[262] = 0;
   out_1056906584894128593[263] = 1.0;
   out_1056906584894128593[264] = 0;
   out_1056906584894128593[265] = 0;
   out_1056906584894128593[266] = 0;
   out_1056906584894128593[267] = 0;
   out_1056906584894128593[268] = 0;
   out_1056906584894128593[269] = 0;
   out_1056906584894128593[270] = 0;
   out_1056906584894128593[271] = 0;
   out_1056906584894128593[272] = 0;
   out_1056906584894128593[273] = 0;
   out_1056906584894128593[274] = 0;
   out_1056906584894128593[275] = 0;
   out_1056906584894128593[276] = 0;
   out_1056906584894128593[277] = 0;
   out_1056906584894128593[278] = 0;
   out_1056906584894128593[279] = 0;
   out_1056906584894128593[280] = 0;
   out_1056906584894128593[281] = 0;
   out_1056906584894128593[282] = 0;
   out_1056906584894128593[283] = 0;
   out_1056906584894128593[284] = 0;
   out_1056906584894128593[285] = 1.0;
   out_1056906584894128593[286] = 0;
   out_1056906584894128593[287] = 0;
   out_1056906584894128593[288] = 0;
   out_1056906584894128593[289] = 0;
   out_1056906584894128593[290] = 0;
   out_1056906584894128593[291] = 0;
   out_1056906584894128593[292] = 0;
   out_1056906584894128593[293] = 0;
   out_1056906584894128593[294] = 0;
   out_1056906584894128593[295] = 0;
   out_1056906584894128593[296] = 0;
   out_1056906584894128593[297] = 0;
   out_1056906584894128593[298] = 0;
   out_1056906584894128593[299] = 0;
   out_1056906584894128593[300] = 0;
   out_1056906584894128593[301] = 0;
   out_1056906584894128593[302] = 0;
   out_1056906584894128593[303] = 0;
   out_1056906584894128593[304] = 0;
   out_1056906584894128593[305] = 0;
   out_1056906584894128593[306] = 0;
   out_1056906584894128593[307] = 1.0;
   out_1056906584894128593[308] = 0;
   out_1056906584894128593[309] = 0;
   out_1056906584894128593[310] = 0;
   out_1056906584894128593[311] = 0;
   out_1056906584894128593[312] = 0;
   out_1056906584894128593[313] = 0;
   out_1056906584894128593[314] = 0;
   out_1056906584894128593[315] = 0;
   out_1056906584894128593[316] = 0;
   out_1056906584894128593[317] = 0;
   out_1056906584894128593[318] = 0;
   out_1056906584894128593[319] = 0;
   out_1056906584894128593[320] = 0;
   out_1056906584894128593[321] = 0;
   out_1056906584894128593[322] = 0;
   out_1056906584894128593[323] = 0;
   out_1056906584894128593[324] = 0;
   out_1056906584894128593[325] = 0;
   out_1056906584894128593[326] = 0;
   out_1056906584894128593[327] = 0;
   out_1056906584894128593[328] = 0;
   out_1056906584894128593[329] = 1.0;
   out_1056906584894128593[330] = 0;
   out_1056906584894128593[331] = 0;
   out_1056906584894128593[332] = 0;
   out_1056906584894128593[333] = 0;
   out_1056906584894128593[334] = 0;
   out_1056906584894128593[335] = 0;
   out_1056906584894128593[336] = 0;
   out_1056906584894128593[337] = 0;
   out_1056906584894128593[338] = 0;
   out_1056906584894128593[339] = 0;
   out_1056906584894128593[340] = 0;
   out_1056906584894128593[341] = 0;
   out_1056906584894128593[342] = 0;
   out_1056906584894128593[343] = 0;
   out_1056906584894128593[344] = 0;
   out_1056906584894128593[345] = 0;
   out_1056906584894128593[346] = 0;
   out_1056906584894128593[347] = 0;
   out_1056906584894128593[348] = 0;
   out_1056906584894128593[349] = 0;
   out_1056906584894128593[350] = 0;
   out_1056906584894128593[351] = 1.0;
   out_1056906584894128593[352] = 0;
   out_1056906584894128593[353] = 0;
   out_1056906584894128593[354] = 0;
   out_1056906584894128593[355] = 0;
   out_1056906584894128593[356] = 0;
   out_1056906584894128593[357] = 0;
   out_1056906584894128593[358] = 0;
   out_1056906584894128593[359] = 0;
   out_1056906584894128593[360] = 0;
   out_1056906584894128593[361] = 0;
   out_1056906584894128593[362] = 0;
   out_1056906584894128593[363] = 0;
   out_1056906584894128593[364] = 0;
   out_1056906584894128593[365] = 0;
   out_1056906584894128593[366] = 0;
   out_1056906584894128593[367] = 0;
   out_1056906584894128593[368] = 0;
   out_1056906584894128593[369] = 0;
   out_1056906584894128593[370] = 0;
   out_1056906584894128593[371] = 0;
   out_1056906584894128593[372] = 0;
   out_1056906584894128593[373] = 1.0;
   out_1056906584894128593[374] = 0;
   out_1056906584894128593[375] = 0;
   out_1056906584894128593[376] = 0;
   out_1056906584894128593[377] = 0;
   out_1056906584894128593[378] = 0;
   out_1056906584894128593[379] = 0;
   out_1056906584894128593[380] = 0;
   out_1056906584894128593[381] = 0;
   out_1056906584894128593[382] = 0;
   out_1056906584894128593[383] = 0;
   out_1056906584894128593[384] = 0;
   out_1056906584894128593[385] = 0;
   out_1056906584894128593[386] = 0;
   out_1056906584894128593[387] = 0;
   out_1056906584894128593[388] = 0;
   out_1056906584894128593[389] = 0;
   out_1056906584894128593[390] = 0;
   out_1056906584894128593[391] = 0;
   out_1056906584894128593[392] = 0;
   out_1056906584894128593[393] = 0;
   out_1056906584894128593[394] = 0;
   out_1056906584894128593[395] = 1.0;
   out_1056906584894128593[396] = 0;
   out_1056906584894128593[397] = 0;
   out_1056906584894128593[398] = 0;
   out_1056906584894128593[399] = 0;
   out_1056906584894128593[400] = 0;
   out_1056906584894128593[401] = 0;
   out_1056906584894128593[402] = 0;
   out_1056906584894128593[403] = 0;
   out_1056906584894128593[404] = 0;
   out_1056906584894128593[405] = 0;
   out_1056906584894128593[406] = 0;
   out_1056906584894128593[407] = 0;
   out_1056906584894128593[408] = 0;
   out_1056906584894128593[409] = 0;
   out_1056906584894128593[410] = 0;
   out_1056906584894128593[411] = 0;
   out_1056906584894128593[412] = 0;
   out_1056906584894128593[413] = 0;
   out_1056906584894128593[414] = 0;
   out_1056906584894128593[415] = 0;
   out_1056906584894128593[416] = 0;
   out_1056906584894128593[417] = 1.0;
   out_1056906584894128593[418] = 0;
   out_1056906584894128593[419] = 0;
   out_1056906584894128593[420] = 0;
   out_1056906584894128593[421] = 0;
   out_1056906584894128593[422] = 0;
   out_1056906584894128593[423] = 0;
   out_1056906584894128593[424] = 0;
   out_1056906584894128593[425] = 0;
   out_1056906584894128593[426] = 0;
   out_1056906584894128593[427] = 0;
   out_1056906584894128593[428] = 0;
   out_1056906584894128593[429] = 0;
   out_1056906584894128593[430] = 0;
   out_1056906584894128593[431] = 0;
   out_1056906584894128593[432] = 0;
   out_1056906584894128593[433] = 0;
   out_1056906584894128593[434] = 0;
   out_1056906584894128593[435] = 0;
   out_1056906584894128593[436] = 0;
   out_1056906584894128593[437] = 0;
   out_1056906584894128593[438] = 0;
   out_1056906584894128593[439] = 1.0;
   out_1056906584894128593[440] = 0;
   out_1056906584894128593[441] = 0;
   out_1056906584894128593[442] = 0;
   out_1056906584894128593[443] = 0;
   out_1056906584894128593[444] = 0;
   out_1056906584894128593[445] = 0;
   out_1056906584894128593[446] = 0;
   out_1056906584894128593[447] = 0;
   out_1056906584894128593[448] = 0;
   out_1056906584894128593[449] = 0;
   out_1056906584894128593[450] = 0;
   out_1056906584894128593[451] = 0;
   out_1056906584894128593[452] = 0;
   out_1056906584894128593[453] = 0;
   out_1056906584894128593[454] = 0;
   out_1056906584894128593[455] = 0;
   out_1056906584894128593[456] = 0;
   out_1056906584894128593[457] = 0;
   out_1056906584894128593[458] = 0;
   out_1056906584894128593[459] = 0;
   out_1056906584894128593[460] = 0;
   out_1056906584894128593[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_183933638026890231) {
   out_183933638026890231[0] = dt*state[7] + state[0];
   out_183933638026890231[1] = dt*state[8] + state[1];
   out_183933638026890231[2] = dt*state[9] + state[2];
   out_183933638026890231[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_183933638026890231[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_183933638026890231[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_183933638026890231[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_183933638026890231[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_183933638026890231[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_183933638026890231[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_183933638026890231[10] = state[10];
   out_183933638026890231[11] = state[11];
   out_183933638026890231[12] = state[12];
   out_183933638026890231[13] = state[13];
   out_183933638026890231[14] = state[14];
   out_183933638026890231[15] = state[15];
   out_183933638026890231[16] = state[16];
   out_183933638026890231[17] = state[17];
   out_183933638026890231[18] = state[18];
   out_183933638026890231[19] = state[19];
   out_183933638026890231[20] = state[20];
   out_183933638026890231[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1040479320272208097) {
   out_1040479320272208097[0] = 1;
   out_1040479320272208097[1] = 0;
   out_1040479320272208097[2] = 0;
   out_1040479320272208097[3] = 0;
   out_1040479320272208097[4] = 0;
   out_1040479320272208097[5] = 0;
   out_1040479320272208097[6] = dt;
   out_1040479320272208097[7] = 0;
   out_1040479320272208097[8] = 0;
   out_1040479320272208097[9] = 0;
   out_1040479320272208097[10] = 0;
   out_1040479320272208097[11] = 0;
   out_1040479320272208097[12] = 0;
   out_1040479320272208097[13] = 0;
   out_1040479320272208097[14] = 0;
   out_1040479320272208097[15] = 0;
   out_1040479320272208097[16] = 0;
   out_1040479320272208097[17] = 0;
   out_1040479320272208097[18] = 0;
   out_1040479320272208097[19] = 0;
   out_1040479320272208097[20] = 0;
   out_1040479320272208097[21] = 0;
   out_1040479320272208097[22] = 1;
   out_1040479320272208097[23] = 0;
   out_1040479320272208097[24] = 0;
   out_1040479320272208097[25] = 0;
   out_1040479320272208097[26] = 0;
   out_1040479320272208097[27] = 0;
   out_1040479320272208097[28] = dt;
   out_1040479320272208097[29] = 0;
   out_1040479320272208097[30] = 0;
   out_1040479320272208097[31] = 0;
   out_1040479320272208097[32] = 0;
   out_1040479320272208097[33] = 0;
   out_1040479320272208097[34] = 0;
   out_1040479320272208097[35] = 0;
   out_1040479320272208097[36] = 0;
   out_1040479320272208097[37] = 0;
   out_1040479320272208097[38] = 0;
   out_1040479320272208097[39] = 0;
   out_1040479320272208097[40] = 0;
   out_1040479320272208097[41] = 0;
   out_1040479320272208097[42] = 0;
   out_1040479320272208097[43] = 0;
   out_1040479320272208097[44] = 1;
   out_1040479320272208097[45] = 0;
   out_1040479320272208097[46] = 0;
   out_1040479320272208097[47] = 0;
   out_1040479320272208097[48] = 0;
   out_1040479320272208097[49] = 0;
   out_1040479320272208097[50] = dt;
   out_1040479320272208097[51] = 0;
   out_1040479320272208097[52] = 0;
   out_1040479320272208097[53] = 0;
   out_1040479320272208097[54] = 0;
   out_1040479320272208097[55] = 0;
   out_1040479320272208097[56] = 0;
   out_1040479320272208097[57] = 0;
   out_1040479320272208097[58] = 0;
   out_1040479320272208097[59] = 0;
   out_1040479320272208097[60] = 0;
   out_1040479320272208097[61] = 0;
   out_1040479320272208097[62] = 0;
   out_1040479320272208097[63] = 0;
   out_1040479320272208097[64] = 0;
   out_1040479320272208097[65] = 0;
   out_1040479320272208097[66] = 1;
   out_1040479320272208097[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1040479320272208097[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1040479320272208097[69] = 0;
   out_1040479320272208097[70] = 0;
   out_1040479320272208097[71] = 0;
   out_1040479320272208097[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1040479320272208097[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1040479320272208097[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1040479320272208097[75] = 0;
   out_1040479320272208097[76] = 0;
   out_1040479320272208097[77] = 0;
   out_1040479320272208097[78] = 0;
   out_1040479320272208097[79] = 0;
   out_1040479320272208097[80] = 0;
   out_1040479320272208097[81] = 0;
   out_1040479320272208097[82] = 0;
   out_1040479320272208097[83] = 0;
   out_1040479320272208097[84] = 0;
   out_1040479320272208097[85] = 0;
   out_1040479320272208097[86] = 0;
   out_1040479320272208097[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1040479320272208097[88] = 1;
   out_1040479320272208097[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1040479320272208097[90] = 0;
   out_1040479320272208097[91] = 0;
   out_1040479320272208097[92] = 0;
   out_1040479320272208097[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1040479320272208097[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1040479320272208097[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1040479320272208097[96] = 0;
   out_1040479320272208097[97] = 0;
   out_1040479320272208097[98] = 0;
   out_1040479320272208097[99] = 0;
   out_1040479320272208097[100] = 0;
   out_1040479320272208097[101] = 0;
   out_1040479320272208097[102] = 0;
   out_1040479320272208097[103] = 0;
   out_1040479320272208097[104] = 0;
   out_1040479320272208097[105] = 0;
   out_1040479320272208097[106] = 0;
   out_1040479320272208097[107] = 0;
   out_1040479320272208097[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1040479320272208097[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1040479320272208097[110] = 1;
   out_1040479320272208097[111] = 0;
   out_1040479320272208097[112] = 0;
   out_1040479320272208097[113] = 0;
   out_1040479320272208097[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1040479320272208097[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1040479320272208097[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1040479320272208097[117] = 0;
   out_1040479320272208097[118] = 0;
   out_1040479320272208097[119] = 0;
   out_1040479320272208097[120] = 0;
   out_1040479320272208097[121] = 0;
   out_1040479320272208097[122] = 0;
   out_1040479320272208097[123] = 0;
   out_1040479320272208097[124] = 0;
   out_1040479320272208097[125] = 0;
   out_1040479320272208097[126] = 0;
   out_1040479320272208097[127] = 0;
   out_1040479320272208097[128] = 0;
   out_1040479320272208097[129] = 0;
   out_1040479320272208097[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1040479320272208097[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1040479320272208097[132] = 1;
   out_1040479320272208097[133] = 0;
   out_1040479320272208097[134] = 0;
   out_1040479320272208097[135] = 0;
   out_1040479320272208097[136] = 0;
   out_1040479320272208097[137] = 0;
   out_1040479320272208097[138] = 0;
   out_1040479320272208097[139] = 0;
   out_1040479320272208097[140] = 0;
   out_1040479320272208097[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1040479320272208097[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1040479320272208097[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1040479320272208097[144] = 0;
   out_1040479320272208097[145] = 0;
   out_1040479320272208097[146] = 0;
   out_1040479320272208097[147] = 0;
   out_1040479320272208097[148] = 0;
   out_1040479320272208097[149] = 0;
   out_1040479320272208097[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1040479320272208097[151] = 0;
   out_1040479320272208097[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1040479320272208097[153] = 0;
   out_1040479320272208097[154] = 1;
   out_1040479320272208097[155] = 0;
   out_1040479320272208097[156] = 0;
   out_1040479320272208097[157] = 0;
   out_1040479320272208097[158] = 0;
   out_1040479320272208097[159] = 0;
   out_1040479320272208097[160] = 0;
   out_1040479320272208097[161] = 0;
   out_1040479320272208097[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1040479320272208097[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1040479320272208097[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1040479320272208097[165] = 0;
   out_1040479320272208097[166] = 0;
   out_1040479320272208097[167] = 0;
   out_1040479320272208097[168] = 0;
   out_1040479320272208097[169] = 0;
   out_1040479320272208097[170] = 0;
   out_1040479320272208097[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1040479320272208097[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1040479320272208097[173] = 0;
   out_1040479320272208097[174] = 0;
   out_1040479320272208097[175] = 0;
   out_1040479320272208097[176] = 1;
   out_1040479320272208097[177] = 0;
   out_1040479320272208097[178] = 0;
   out_1040479320272208097[179] = 0;
   out_1040479320272208097[180] = 0;
   out_1040479320272208097[181] = 0;
   out_1040479320272208097[182] = 0;
   out_1040479320272208097[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1040479320272208097[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1040479320272208097[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1040479320272208097[186] = 0;
   out_1040479320272208097[187] = 0;
   out_1040479320272208097[188] = 0;
   out_1040479320272208097[189] = 0;
   out_1040479320272208097[190] = 0;
   out_1040479320272208097[191] = 0;
   out_1040479320272208097[192] = 0;
   out_1040479320272208097[193] = 0;
   out_1040479320272208097[194] = 0;
   out_1040479320272208097[195] = 0;
   out_1040479320272208097[196] = 0;
   out_1040479320272208097[197] = 0;
   out_1040479320272208097[198] = 1;
   out_1040479320272208097[199] = 0;
   out_1040479320272208097[200] = 0;
   out_1040479320272208097[201] = 0;
   out_1040479320272208097[202] = 0;
   out_1040479320272208097[203] = 0;
   out_1040479320272208097[204] = 0;
   out_1040479320272208097[205] = 0;
   out_1040479320272208097[206] = 0;
   out_1040479320272208097[207] = 0;
   out_1040479320272208097[208] = 0;
   out_1040479320272208097[209] = 0;
   out_1040479320272208097[210] = 0;
   out_1040479320272208097[211] = 0;
   out_1040479320272208097[212] = 0;
   out_1040479320272208097[213] = 0;
   out_1040479320272208097[214] = 0;
   out_1040479320272208097[215] = 0;
   out_1040479320272208097[216] = 0;
   out_1040479320272208097[217] = 0;
   out_1040479320272208097[218] = 0;
   out_1040479320272208097[219] = 0;
   out_1040479320272208097[220] = 1;
   out_1040479320272208097[221] = 0;
   out_1040479320272208097[222] = 0;
   out_1040479320272208097[223] = 0;
   out_1040479320272208097[224] = 0;
   out_1040479320272208097[225] = 0;
   out_1040479320272208097[226] = 0;
   out_1040479320272208097[227] = 0;
   out_1040479320272208097[228] = 0;
   out_1040479320272208097[229] = 0;
   out_1040479320272208097[230] = 0;
   out_1040479320272208097[231] = 0;
   out_1040479320272208097[232] = 0;
   out_1040479320272208097[233] = 0;
   out_1040479320272208097[234] = 0;
   out_1040479320272208097[235] = 0;
   out_1040479320272208097[236] = 0;
   out_1040479320272208097[237] = 0;
   out_1040479320272208097[238] = 0;
   out_1040479320272208097[239] = 0;
   out_1040479320272208097[240] = 0;
   out_1040479320272208097[241] = 0;
   out_1040479320272208097[242] = 1;
   out_1040479320272208097[243] = 0;
   out_1040479320272208097[244] = 0;
   out_1040479320272208097[245] = 0;
   out_1040479320272208097[246] = 0;
   out_1040479320272208097[247] = 0;
   out_1040479320272208097[248] = 0;
   out_1040479320272208097[249] = 0;
   out_1040479320272208097[250] = 0;
   out_1040479320272208097[251] = 0;
   out_1040479320272208097[252] = 0;
   out_1040479320272208097[253] = 0;
   out_1040479320272208097[254] = 0;
   out_1040479320272208097[255] = 0;
   out_1040479320272208097[256] = 0;
   out_1040479320272208097[257] = 0;
   out_1040479320272208097[258] = 0;
   out_1040479320272208097[259] = 0;
   out_1040479320272208097[260] = 0;
   out_1040479320272208097[261] = 0;
   out_1040479320272208097[262] = 0;
   out_1040479320272208097[263] = 0;
   out_1040479320272208097[264] = 1;
   out_1040479320272208097[265] = 0;
   out_1040479320272208097[266] = 0;
   out_1040479320272208097[267] = 0;
   out_1040479320272208097[268] = 0;
   out_1040479320272208097[269] = 0;
   out_1040479320272208097[270] = 0;
   out_1040479320272208097[271] = 0;
   out_1040479320272208097[272] = 0;
   out_1040479320272208097[273] = 0;
   out_1040479320272208097[274] = 0;
   out_1040479320272208097[275] = 0;
   out_1040479320272208097[276] = 0;
   out_1040479320272208097[277] = 0;
   out_1040479320272208097[278] = 0;
   out_1040479320272208097[279] = 0;
   out_1040479320272208097[280] = 0;
   out_1040479320272208097[281] = 0;
   out_1040479320272208097[282] = 0;
   out_1040479320272208097[283] = 0;
   out_1040479320272208097[284] = 0;
   out_1040479320272208097[285] = 0;
   out_1040479320272208097[286] = 1;
   out_1040479320272208097[287] = 0;
   out_1040479320272208097[288] = 0;
   out_1040479320272208097[289] = 0;
   out_1040479320272208097[290] = 0;
   out_1040479320272208097[291] = 0;
   out_1040479320272208097[292] = 0;
   out_1040479320272208097[293] = 0;
   out_1040479320272208097[294] = 0;
   out_1040479320272208097[295] = 0;
   out_1040479320272208097[296] = 0;
   out_1040479320272208097[297] = 0;
   out_1040479320272208097[298] = 0;
   out_1040479320272208097[299] = 0;
   out_1040479320272208097[300] = 0;
   out_1040479320272208097[301] = 0;
   out_1040479320272208097[302] = 0;
   out_1040479320272208097[303] = 0;
   out_1040479320272208097[304] = 0;
   out_1040479320272208097[305] = 0;
   out_1040479320272208097[306] = 0;
   out_1040479320272208097[307] = 0;
   out_1040479320272208097[308] = 1;
   out_1040479320272208097[309] = 0;
   out_1040479320272208097[310] = 0;
   out_1040479320272208097[311] = 0;
   out_1040479320272208097[312] = 0;
   out_1040479320272208097[313] = 0;
   out_1040479320272208097[314] = 0;
   out_1040479320272208097[315] = 0;
   out_1040479320272208097[316] = 0;
   out_1040479320272208097[317] = 0;
   out_1040479320272208097[318] = 0;
   out_1040479320272208097[319] = 0;
   out_1040479320272208097[320] = 0;
   out_1040479320272208097[321] = 0;
   out_1040479320272208097[322] = 0;
   out_1040479320272208097[323] = 0;
   out_1040479320272208097[324] = 0;
   out_1040479320272208097[325] = 0;
   out_1040479320272208097[326] = 0;
   out_1040479320272208097[327] = 0;
   out_1040479320272208097[328] = 0;
   out_1040479320272208097[329] = 0;
   out_1040479320272208097[330] = 1;
   out_1040479320272208097[331] = 0;
   out_1040479320272208097[332] = 0;
   out_1040479320272208097[333] = 0;
   out_1040479320272208097[334] = 0;
   out_1040479320272208097[335] = 0;
   out_1040479320272208097[336] = 0;
   out_1040479320272208097[337] = 0;
   out_1040479320272208097[338] = 0;
   out_1040479320272208097[339] = 0;
   out_1040479320272208097[340] = 0;
   out_1040479320272208097[341] = 0;
   out_1040479320272208097[342] = 0;
   out_1040479320272208097[343] = 0;
   out_1040479320272208097[344] = 0;
   out_1040479320272208097[345] = 0;
   out_1040479320272208097[346] = 0;
   out_1040479320272208097[347] = 0;
   out_1040479320272208097[348] = 0;
   out_1040479320272208097[349] = 0;
   out_1040479320272208097[350] = 0;
   out_1040479320272208097[351] = 0;
   out_1040479320272208097[352] = 1;
   out_1040479320272208097[353] = 0;
   out_1040479320272208097[354] = 0;
   out_1040479320272208097[355] = 0;
   out_1040479320272208097[356] = 0;
   out_1040479320272208097[357] = 0;
   out_1040479320272208097[358] = 0;
   out_1040479320272208097[359] = 0;
   out_1040479320272208097[360] = 0;
   out_1040479320272208097[361] = 0;
   out_1040479320272208097[362] = 0;
   out_1040479320272208097[363] = 0;
   out_1040479320272208097[364] = 0;
   out_1040479320272208097[365] = 0;
   out_1040479320272208097[366] = 0;
   out_1040479320272208097[367] = 0;
   out_1040479320272208097[368] = 0;
   out_1040479320272208097[369] = 0;
   out_1040479320272208097[370] = 0;
   out_1040479320272208097[371] = 0;
   out_1040479320272208097[372] = 0;
   out_1040479320272208097[373] = 0;
   out_1040479320272208097[374] = 1;
   out_1040479320272208097[375] = 0;
   out_1040479320272208097[376] = 0;
   out_1040479320272208097[377] = 0;
   out_1040479320272208097[378] = 0;
   out_1040479320272208097[379] = 0;
   out_1040479320272208097[380] = 0;
   out_1040479320272208097[381] = 0;
   out_1040479320272208097[382] = 0;
   out_1040479320272208097[383] = 0;
   out_1040479320272208097[384] = 0;
   out_1040479320272208097[385] = 0;
   out_1040479320272208097[386] = 0;
   out_1040479320272208097[387] = 0;
   out_1040479320272208097[388] = 0;
   out_1040479320272208097[389] = 0;
   out_1040479320272208097[390] = 0;
   out_1040479320272208097[391] = 0;
   out_1040479320272208097[392] = 0;
   out_1040479320272208097[393] = 0;
   out_1040479320272208097[394] = 0;
   out_1040479320272208097[395] = 0;
   out_1040479320272208097[396] = 1;
   out_1040479320272208097[397] = 0;
   out_1040479320272208097[398] = 0;
   out_1040479320272208097[399] = 0;
   out_1040479320272208097[400] = 0;
   out_1040479320272208097[401] = 0;
   out_1040479320272208097[402] = 0;
   out_1040479320272208097[403] = 0;
   out_1040479320272208097[404] = 0;
   out_1040479320272208097[405] = 0;
   out_1040479320272208097[406] = 0;
   out_1040479320272208097[407] = 0;
   out_1040479320272208097[408] = 0;
   out_1040479320272208097[409] = 0;
   out_1040479320272208097[410] = 0;
   out_1040479320272208097[411] = 0;
   out_1040479320272208097[412] = 0;
   out_1040479320272208097[413] = 0;
   out_1040479320272208097[414] = 0;
   out_1040479320272208097[415] = 0;
   out_1040479320272208097[416] = 0;
   out_1040479320272208097[417] = 0;
   out_1040479320272208097[418] = 1;
   out_1040479320272208097[419] = 0;
   out_1040479320272208097[420] = 0;
   out_1040479320272208097[421] = 0;
   out_1040479320272208097[422] = 0;
   out_1040479320272208097[423] = 0;
   out_1040479320272208097[424] = 0;
   out_1040479320272208097[425] = 0;
   out_1040479320272208097[426] = 0;
   out_1040479320272208097[427] = 0;
   out_1040479320272208097[428] = 0;
   out_1040479320272208097[429] = 0;
   out_1040479320272208097[430] = 0;
   out_1040479320272208097[431] = 0;
   out_1040479320272208097[432] = 0;
   out_1040479320272208097[433] = 0;
   out_1040479320272208097[434] = 0;
   out_1040479320272208097[435] = 0;
   out_1040479320272208097[436] = 0;
   out_1040479320272208097[437] = 0;
   out_1040479320272208097[438] = 0;
   out_1040479320272208097[439] = 0;
   out_1040479320272208097[440] = 1;
}
void h_4(double *state, double *unused, double *out_3570086928689996447) {
   out_3570086928689996447[0] = state[10] + state[13];
   out_3570086928689996447[1] = state[11] + state[14];
   out_3570086928689996447[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7714358732044892667) {
   out_7714358732044892667[0] = 0;
   out_7714358732044892667[1] = 0;
   out_7714358732044892667[2] = 0;
   out_7714358732044892667[3] = 0;
   out_7714358732044892667[4] = 0;
   out_7714358732044892667[5] = 0;
   out_7714358732044892667[6] = 0;
   out_7714358732044892667[7] = 0;
   out_7714358732044892667[8] = 0;
   out_7714358732044892667[9] = 0;
   out_7714358732044892667[10] = 1;
   out_7714358732044892667[11] = 0;
   out_7714358732044892667[12] = 0;
   out_7714358732044892667[13] = 1;
   out_7714358732044892667[14] = 0;
   out_7714358732044892667[15] = 0;
   out_7714358732044892667[16] = 0;
   out_7714358732044892667[17] = 0;
   out_7714358732044892667[18] = 0;
   out_7714358732044892667[19] = 0;
   out_7714358732044892667[20] = 0;
   out_7714358732044892667[21] = 0;
   out_7714358732044892667[22] = 0;
   out_7714358732044892667[23] = 0;
   out_7714358732044892667[24] = 0;
   out_7714358732044892667[25] = 0;
   out_7714358732044892667[26] = 0;
   out_7714358732044892667[27] = 0;
   out_7714358732044892667[28] = 0;
   out_7714358732044892667[29] = 0;
   out_7714358732044892667[30] = 0;
   out_7714358732044892667[31] = 0;
   out_7714358732044892667[32] = 0;
   out_7714358732044892667[33] = 1;
   out_7714358732044892667[34] = 0;
   out_7714358732044892667[35] = 0;
   out_7714358732044892667[36] = 1;
   out_7714358732044892667[37] = 0;
   out_7714358732044892667[38] = 0;
   out_7714358732044892667[39] = 0;
   out_7714358732044892667[40] = 0;
   out_7714358732044892667[41] = 0;
   out_7714358732044892667[42] = 0;
   out_7714358732044892667[43] = 0;
   out_7714358732044892667[44] = 0;
   out_7714358732044892667[45] = 0;
   out_7714358732044892667[46] = 0;
   out_7714358732044892667[47] = 0;
   out_7714358732044892667[48] = 0;
   out_7714358732044892667[49] = 0;
   out_7714358732044892667[50] = 0;
   out_7714358732044892667[51] = 0;
   out_7714358732044892667[52] = 0;
   out_7714358732044892667[53] = 0;
   out_7714358732044892667[54] = 0;
   out_7714358732044892667[55] = 0;
   out_7714358732044892667[56] = 1;
   out_7714358732044892667[57] = 0;
   out_7714358732044892667[58] = 0;
   out_7714358732044892667[59] = 1;
   out_7714358732044892667[60] = 0;
   out_7714358732044892667[61] = 0;
   out_7714358732044892667[62] = 0;
   out_7714358732044892667[63] = 0;
   out_7714358732044892667[64] = 0;
   out_7714358732044892667[65] = 0;
}
void h_9(double *state, double *unused, double *out_4006471989357438461) {
   out_4006471989357438461[0] = state[10];
   out_4006471989357438461[1] = state[11];
   out_4006471989357438461[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3445166406400211479) {
   out_3445166406400211479[0] = 0;
   out_3445166406400211479[1] = 0;
   out_3445166406400211479[2] = 0;
   out_3445166406400211479[3] = 0;
   out_3445166406400211479[4] = 0;
   out_3445166406400211479[5] = 0;
   out_3445166406400211479[6] = 0;
   out_3445166406400211479[7] = 0;
   out_3445166406400211479[8] = 0;
   out_3445166406400211479[9] = 0;
   out_3445166406400211479[10] = 1;
   out_3445166406400211479[11] = 0;
   out_3445166406400211479[12] = 0;
   out_3445166406400211479[13] = 0;
   out_3445166406400211479[14] = 0;
   out_3445166406400211479[15] = 0;
   out_3445166406400211479[16] = 0;
   out_3445166406400211479[17] = 0;
   out_3445166406400211479[18] = 0;
   out_3445166406400211479[19] = 0;
   out_3445166406400211479[20] = 0;
   out_3445166406400211479[21] = 0;
   out_3445166406400211479[22] = 0;
   out_3445166406400211479[23] = 0;
   out_3445166406400211479[24] = 0;
   out_3445166406400211479[25] = 0;
   out_3445166406400211479[26] = 0;
   out_3445166406400211479[27] = 0;
   out_3445166406400211479[28] = 0;
   out_3445166406400211479[29] = 0;
   out_3445166406400211479[30] = 0;
   out_3445166406400211479[31] = 0;
   out_3445166406400211479[32] = 0;
   out_3445166406400211479[33] = 1;
   out_3445166406400211479[34] = 0;
   out_3445166406400211479[35] = 0;
   out_3445166406400211479[36] = 0;
   out_3445166406400211479[37] = 0;
   out_3445166406400211479[38] = 0;
   out_3445166406400211479[39] = 0;
   out_3445166406400211479[40] = 0;
   out_3445166406400211479[41] = 0;
   out_3445166406400211479[42] = 0;
   out_3445166406400211479[43] = 0;
   out_3445166406400211479[44] = 0;
   out_3445166406400211479[45] = 0;
   out_3445166406400211479[46] = 0;
   out_3445166406400211479[47] = 0;
   out_3445166406400211479[48] = 0;
   out_3445166406400211479[49] = 0;
   out_3445166406400211479[50] = 0;
   out_3445166406400211479[51] = 0;
   out_3445166406400211479[52] = 0;
   out_3445166406400211479[53] = 0;
   out_3445166406400211479[54] = 0;
   out_3445166406400211479[55] = 0;
   out_3445166406400211479[56] = 1;
   out_3445166406400211479[57] = 0;
   out_3445166406400211479[58] = 0;
   out_3445166406400211479[59] = 0;
   out_3445166406400211479[60] = 0;
   out_3445166406400211479[61] = 0;
   out_3445166406400211479[62] = 0;
   out_3445166406400211479[63] = 0;
   out_3445166406400211479[64] = 0;
   out_3445166406400211479[65] = 0;
}
void h_10(double *state, double *unused, double *out_4022074140549506913) {
   out_4022074140549506913[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4022074140549506913[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4022074140549506913[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4941233296478487911) {
   out_4941233296478487911[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4941233296478487911[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4941233296478487911[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4941233296478487911[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4941233296478487911[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4941233296478487911[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4941233296478487911[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4941233296478487911[7] = 0;
   out_4941233296478487911[8] = 0;
   out_4941233296478487911[9] = 0;
   out_4941233296478487911[10] = 0;
   out_4941233296478487911[11] = 0;
   out_4941233296478487911[12] = 0;
   out_4941233296478487911[13] = 0;
   out_4941233296478487911[14] = 0;
   out_4941233296478487911[15] = 0;
   out_4941233296478487911[16] = 1;
   out_4941233296478487911[17] = 0;
   out_4941233296478487911[18] = 0;
   out_4941233296478487911[19] = 1;
   out_4941233296478487911[20] = 0;
   out_4941233296478487911[21] = 0;
   out_4941233296478487911[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4941233296478487911[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4941233296478487911[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4941233296478487911[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4941233296478487911[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4941233296478487911[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4941233296478487911[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4941233296478487911[29] = 0;
   out_4941233296478487911[30] = 0;
   out_4941233296478487911[31] = 0;
   out_4941233296478487911[32] = 0;
   out_4941233296478487911[33] = 0;
   out_4941233296478487911[34] = 0;
   out_4941233296478487911[35] = 0;
   out_4941233296478487911[36] = 0;
   out_4941233296478487911[37] = 0;
   out_4941233296478487911[38] = 0;
   out_4941233296478487911[39] = 1;
   out_4941233296478487911[40] = 0;
   out_4941233296478487911[41] = 0;
   out_4941233296478487911[42] = 1;
   out_4941233296478487911[43] = 0;
   out_4941233296478487911[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4941233296478487911[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4941233296478487911[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4941233296478487911[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4941233296478487911[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4941233296478487911[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4941233296478487911[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4941233296478487911[51] = 0;
   out_4941233296478487911[52] = 0;
   out_4941233296478487911[53] = 0;
   out_4941233296478487911[54] = 0;
   out_4941233296478487911[55] = 0;
   out_4941233296478487911[56] = 0;
   out_4941233296478487911[57] = 0;
   out_4941233296478487911[58] = 0;
   out_4941233296478487911[59] = 0;
   out_4941233296478487911[60] = 0;
   out_4941233296478487911[61] = 0;
   out_4941233296478487911[62] = 1;
   out_4941233296478487911[63] = 0;
   out_4941233296478487911[64] = 0;
   out_4941233296478487911[65] = 1;
}
void h_12(double *state, double *unused, double *out_4674873285621457998) {
   out_4674873285621457998[0] = state[0];
   out_4674873285621457998[1] = state[1];
   out_4674873285621457998[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5712928933632697154) {
   out_5712928933632697154[0] = 1;
   out_5712928933632697154[1] = 0;
   out_5712928933632697154[2] = 0;
   out_5712928933632697154[3] = 0;
   out_5712928933632697154[4] = 0;
   out_5712928933632697154[5] = 0;
   out_5712928933632697154[6] = 0;
   out_5712928933632697154[7] = 0;
   out_5712928933632697154[8] = 0;
   out_5712928933632697154[9] = 0;
   out_5712928933632697154[10] = 0;
   out_5712928933632697154[11] = 0;
   out_5712928933632697154[12] = 0;
   out_5712928933632697154[13] = 0;
   out_5712928933632697154[14] = 0;
   out_5712928933632697154[15] = 0;
   out_5712928933632697154[16] = 0;
   out_5712928933632697154[17] = 0;
   out_5712928933632697154[18] = 0;
   out_5712928933632697154[19] = 0;
   out_5712928933632697154[20] = 0;
   out_5712928933632697154[21] = 0;
   out_5712928933632697154[22] = 0;
   out_5712928933632697154[23] = 1;
   out_5712928933632697154[24] = 0;
   out_5712928933632697154[25] = 0;
   out_5712928933632697154[26] = 0;
   out_5712928933632697154[27] = 0;
   out_5712928933632697154[28] = 0;
   out_5712928933632697154[29] = 0;
   out_5712928933632697154[30] = 0;
   out_5712928933632697154[31] = 0;
   out_5712928933632697154[32] = 0;
   out_5712928933632697154[33] = 0;
   out_5712928933632697154[34] = 0;
   out_5712928933632697154[35] = 0;
   out_5712928933632697154[36] = 0;
   out_5712928933632697154[37] = 0;
   out_5712928933632697154[38] = 0;
   out_5712928933632697154[39] = 0;
   out_5712928933632697154[40] = 0;
   out_5712928933632697154[41] = 0;
   out_5712928933632697154[42] = 0;
   out_5712928933632697154[43] = 0;
   out_5712928933632697154[44] = 0;
   out_5712928933632697154[45] = 0;
   out_5712928933632697154[46] = 1;
   out_5712928933632697154[47] = 0;
   out_5712928933632697154[48] = 0;
   out_5712928933632697154[49] = 0;
   out_5712928933632697154[50] = 0;
   out_5712928933632697154[51] = 0;
   out_5712928933632697154[52] = 0;
   out_5712928933632697154[53] = 0;
   out_5712928933632697154[54] = 0;
   out_5712928933632697154[55] = 0;
   out_5712928933632697154[56] = 0;
   out_5712928933632697154[57] = 0;
   out_5712928933632697154[58] = 0;
   out_5712928933632697154[59] = 0;
   out_5712928933632697154[60] = 0;
   out_5712928933632697154[61] = 0;
   out_5712928933632697154[62] = 0;
   out_5712928933632697154[63] = 0;
   out_5712928933632697154[64] = 0;
   out_5712928933632697154[65] = 0;
}
void h_35(double *state, double *unused, double *out_1741169043564631776) {
   out_1741169043564631776[0] = state[7];
   out_1741169043564631776[1] = state[8];
   out_1741169043564631776[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2967365901307683445) {
   out_2967365901307683445[0] = 0;
   out_2967365901307683445[1] = 0;
   out_2967365901307683445[2] = 0;
   out_2967365901307683445[3] = 0;
   out_2967365901307683445[4] = 0;
   out_2967365901307683445[5] = 0;
   out_2967365901307683445[6] = 0;
   out_2967365901307683445[7] = 1;
   out_2967365901307683445[8] = 0;
   out_2967365901307683445[9] = 0;
   out_2967365901307683445[10] = 0;
   out_2967365901307683445[11] = 0;
   out_2967365901307683445[12] = 0;
   out_2967365901307683445[13] = 0;
   out_2967365901307683445[14] = 0;
   out_2967365901307683445[15] = 0;
   out_2967365901307683445[16] = 0;
   out_2967365901307683445[17] = 0;
   out_2967365901307683445[18] = 0;
   out_2967365901307683445[19] = 0;
   out_2967365901307683445[20] = 0;
   out_2967365901307683445[21] = 0;
   out_2967365901307683445[22] = 0;
   out_2967365901307683445[23] = 0;
   out_2967365901307683445[24] = 0;
   out_2967365901307683445[25] = 0;
   out_2967365901307683445[26] = 0;
   out_2967365901307683445[27] = 0;
   out_2967365901307683445[28] = 0;
   out_2967365901307683445[29] = 0;
   out_2967365901307683445[30] = 1;
   out_2967365901307683445[31] = 0;
   out_2967365901307683445[32] = 0;
   out_2967365901307683445[33] = 0;
   out_2967365901307683445[34] = 0;
   out_2967365901307683445[35] = 0;
   out_2967365901307683445[36] = 0;
   out_2967365901307683445[37] = 0;
   out_2967365901307683445[38] = 0;
   out_2967365901307683445[39] = 0;
   out_2967365901307683445[40] = 0;
   out_2967365901307683445[41] = 0;
   out_2967365901307683445[42] = 0;
   out_2967365901307683445[43] = 0;
   out_2967365901307683445[44] = 0;
   out_2967365901307683445[45] = 0;
   out_2967365901307683445[46] = 0;
   out_2967365901307683445[47] = 0;
   out_2967365901307683445[48] = 0;
   out_2967365901307683445[49] = 0;
   out_2967365901307683445[50] = 0;
   out_2967365901307683445[51] = 0;
   out_2967365901307683445[52] = 0;
   out_2967365901307683445[53] = 1;
   out_2967365901307683445[54] = 0;
   out_2967365901307683445[55] = 0;
   out_2967365901307683445[56] = 0;
   out_2967365901307683445[57] = 0;
   out_2967365901307683445[58] = 0;
   out_2967365901307683445[59] = 0;
   out_2967365901307683445[60] = 0;
   out_2967365901307683445[61] = 0;
   out_2967365901307683445[62] = 0;
   out_2967365901307683445[63] = 0;
   out_2967365901307683445[64] = 0;
   out_2967365901307683445[65] = 0;
}
void h_32(double *state, double *unused, double *out_2303378269810867446) {
   out_2303378269810867446[0] = state[3];
   out_2303378269810867446[1] = state[4];
   out_2303378269810867446[2] = state[5];
   out_2303378269810867446[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6862321551745590973) {
   out_6862321551745590973[0] = 0;
   out_6862321551745590973[1] = 0;
   out_6862321551745590973[2] = 0;
   out_6862321551745590973[3] = 1;
   out_6862321551745590973[4] = 0;
   out_6862321551745590973[5] = 0;
   out_6862321551745590973[6] = 0;
   out_6862321551745590973[7] = 0;
   out_6862321551745590973[8] = 0;
   out_6862321551745590973[9] = 0;
   out_6862321551745590973[10] = 0;
   out_6862321551745590973[11] = 0;
   out_6862321551745590973[12] = 0;
   out_6862321551745590973[13] = 0;
   out_6862321551745590973[14] = 0;
   out_6862321551745590973[15] = 0;
   out_6862321551745590973[16] = 0;
   out_6862321551745590973[17] = 0;
   out_6862321551745590973[18] = 0;
   out_6862321551745590973[19] = 0;
   out_6862321551745590973[20] = 0;
   out_6862321551745590973[21] = 0;
   out_6862321551745590973[22] = 0;
   out_6862321551745590973[23] = 0;
   out_6862321551745590973[24] = 0;
   out_6862321551745590973[25] = 0;
   out_6862321551745590973[26] = 1;
   out_6862321551745590973[27] = 0;
   out_6862321551745590973[28] = 0;
   out_6862321551745590973[29] = 0;
   out_6862321551745590973[30] = 0;
   out_6862321551745590973[31] = 0;
   out_6862321551745590973[32] = 0;
   out_6862321551745590973[33] = 0;
   out_6862321551745590973[34] = 0;
   out_6862321551745590973[35] = 0;
   out_6862321551745590973[36] = 0;
   out_6862321551745590973[37] = 0;
   out_6862321551745590973[38] = 0;
   out_6862321551745590973[39] = 0;
   out_6862321551745590973[40] = 0;
   out_6862321551745590973[41] = 0;
   out_6862321551745590973[42] = 0;
   out_6862321551745590973[43] = 0;
   out_6862321551745590973[44] = 0;
   out_6862321551745590973[45] = 0;
   out_6862321551745590973[46] = 0;
   out_6862321551745590973[47] = 0;
   out_6862321551745590973[48] = 0;
   out_6862321551745590973[49] = 1;
   out_6862321551745590973[50] = 0;
   out_6862321551745590973[51] = 0;
   out_6862321551745590973[52] = 0;
   out_6862321551745590973[53] = 0;
   out_6862321551745590973[54] = 0;
   out_6862321551745590973[55] = 0;
   out_6862321551745590973[56] = 0;
   out_6862321551745590973[57] = 0;
   out_6862321551745590973[58] = 0;
   out_6862321551745590973[59] = 0;
   out_6862321551745590973[60] = 0;
   out_6862321551745590973[61] = 0;
   out_6862321551745590973[62] = 0;
   out_6862321551745590973[63] = 0;
   out_6862321551745590973[64] = 0;
   out_6862321551745590973[65] = 0;
   out_6862321551745590973[66] = 0;
   out_6862321551745590973[67] = 0;
   out_6862321551745590973[68] = 0;
   out_6862321551745590973[69] = 0;
   out_6862321551745590973[70] = 0;
   out_6862321551745590973[71] = 0;
   out_6862321551745590973[72] = 1;
   out_6862321551745590973[73] = 0;
   out_6862321551745590973[74] = 0;
   out_6862321551745590973[75] = 0;
   out_6862321551745590973[76] = 0;
   out_6862321551745590973[77] = 0;
   out_6862321551745590973[78] = 0;
   out_6862321551745590973[79] = 0;
   out_6862321551745590973[80] = 0;
   out_6862321551745590973[81] = 0;
   out_6862321551745590973[82] = 0;
   out_6862321551745590973[83] = 0;
   out_6862321551745590973[84] = 0;
   out_6862321551745590973[85] = 0;
   out_6862321551745590973[86] = 0;
   out_6862321551745590973[87] = 0;
}
void h_13(double *state, double *unused, double *out_765906276234838754) {
   out_765906276234838754[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_765906276234838754[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_765906276234838754[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_137717136315470619) {
   out_137717136315470619[0] = 0;
   out_137717136315470619[1] = 0;
   out_137717136315470619[2] = 0;
   out_137717136315470619[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_137717136315470619[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_137717136315470619[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_137717136315470619[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_137717136315470619[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_137717136315470619[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_137717136315470619[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_137717136315470619[10] = 0;
   out_137717136315470619[11] = 0;
   out_137717136315470619[12] = 0;
   out_137717136315470619[13] = 0;
   out_137717136315470619[14] = 0;
   out_137717136315470619[15] = 0;
   out_137717136315470619[16] = 0;
   out_137717136315470619[17] = 0;
   out_137717136315470619[18] = 0;
   out_137717136315470619[19] = 0;
   out_137717136315470619[20] = 0;
   out_137717136315470619[21] = 0;
   out_137717136315470619[22] = 0;
   out_137717136315470619[23] = 0;
   out_137717136315470619[24] = 0;
   out_137717136315470619[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_137717136315470619[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_137717136315470619[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_137717136315470619[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_137717136315470619[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_137717136315470619[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_137717136315470619[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_137717136315470619[32] = 0;
   out_137717136315470619[33] = 0;
   out_137717136315470619[34] = 0;
   out_137717136315470619[35] = 0;
   out_137717136315470619[36] = 0;
   out_137717136315470619[37] = 0;
   out_137717136315470619[38] = 0;
   out_137717136315470619[39] = 0;
   out_137717136315470619[40] = 0;
   out_137717136315470619[41] = 0;
   out_137717136315470619[42] = 0;
   out_137717136315470619[43] = 0;
   out_137717136315470619[44] = 0;
   out_137717136315470619[45] = 0;
   out_137717136315470619[46] = 0;
   out_137717136315470619[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_137717136315470619[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_137717136315470619[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_137717136315470619[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_137717136315470619[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_137717136315470619[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_137717136315470619[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_137717136315470619[54] = 0;
   out_137717136315470619[55] = 0;
   out_137717136315470619[56] = 0;
   out_137717136315470619[57] = 0;
   out_137717136315470619[58] = 0;
   out_137717136315470619[59] = 0;
   out_137717136315470619[60] = 0;
   out_137717136315470619[61] = 0;
   out_137717136315470619[62] = 0;
   out_137717136315470619[63] = 0;
   out_137717136315470619[64] = 0;
   out_137717136315470619[65] = 0;
}
void h_14(double *state, double *unused, double *out_4006471989357438461) {
   out_4006471989357438461[0] = state[10];
   out_4006471989357438461[1] = state[11];
   out_4006471989357438461[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3445166406400211479) {
   out_3445166406400211479[0] = 0;
   out_3445166406400211479[1] = 0;
   out_3445166406400211479[2] = 0;
   out_3445166406400211479[3] = 0;
   out_3445166406400211479[4] = 0;
   out_3445166406400211479[5] = 0;
   out_3445166406400211479[6] = 0;
   out_3445166406400211479[7] = 0;
   out_3445166406400211479[8] = 0;
   out_3445166406400211479[9] = 0;
   out_3445166406400211479[10] = 1;
   out_3445166406400211479[11] = 0;
   out_3445166406400211479[12] = 0;
   out_3445166406400211479[13] = 0;
   out_3445166406400211479[14] = 0;
   out_3445166406400211479[15] = 0;
   out_3445166406400211479[16] = 0;
   out_3445166406400211479[17] = 0;
   out_3445166406400211479[18] = 0;
   out_3445166406400211479[19] = 0;
   out_3445166406400211479[20] = 0;
   out_3445166406400211479[21] = 0;
   out_3445166406400211479[22] = 0;
   out_3445166406400211479[23] = 0;
   out_3445166406400211479[24] = 0;
   out_3445166406400211479[25] = 0;
   out_3445166406400211479[26] = 0;
   out_3445166406400211479[27] = 0;
   out_3445166406400211479[28] = 0;
   out_3445166406400211479[29] = 0;
   out_3445166406400211479[30] = 0;
   out_3445166406400211479[31] = 0;
   out_3445166406400211479[32] = 0;
   out_3445166406400211479[33] = 1;
   out_3445166406400211479[34] = 0;
   out_3445166406400211479[35] = 0;
   out_3445166406400211479[36] = 0;
   out_3445166406400211479[37] = 0;
   out_3445166406400211479[38] = 0;
   out_3445166406400211479[39] = 0;
   out_3445166406400211479[40] = 0;
   out_3445166406400211479[41] = 0;
   out_3445166406400211479[42] = 0;
   out_3445166406400211479[43] = 0;
   out_3445166406400211479[44] = 0;
   out_3445166406400211479[45] = 0;
   out_3445166406400211479[46] = 0;
   out_3445166406400211479[47] = 0;
   out_3445166406400211479[48] = 0;
   out_3445166406400211479[49] = 0;
   out_3445166406400211479[50] = 0;
   out_3445166406400211479[51] = 0;
   out_3445166406400211479[52] = 0;
   out_3445166406400211479[53] = 0;
   out_3445166406400211479[54] = 0;
   out_3445166406400211479[55] = 0;
   out_3445166406400211479[56] = 1;
   out_3445166406400211479[57] = 0;
   out_3445166406400211479[58] = 0;
   out_3445166406400211479[59] = 0;
   out_3445166406400211479[60] = 0;
   out_3445166406400211479[61] = 0;
   out_3445166406400211479[62] = 0;
   out_3445166406400211479[63] = 0;
   out_3445166406400211479[64] = 0;
   out_3445166406400211479[65] = 0;
}
void h_33(double *state, double *unused, double *out_2451336789265741965) {
   out_2451336789265741965[0] = state[16];
   out_2451336789265741965[1] = state[17];
   out_2451336789265741965[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4215166279653193969) {
   out_4215166279653193969[0] = 0;
   out_4215166279653193969[1] = 0;
   out_4215166279653193969[2] = 0;
   out_4215166279653193969[3] = 0;
   out_4215166279653193969[4] = 0;
   out_4215166279653193969[5] = 0;
   out_4215166279653193969[6] = 0;
   out_4215166279653193969[7] = 0;
   out_4215166279653193969[8] = 0;
   out_4215166279653193969[9] = 0;
   out_4215166279653193969[10] = 0;
   out_4215166279653193969[11] = 0;
   out_4215166279653193969[12] = 0;
   out_4215166279653193969[13] = 0;
   out_4215166279653193969[14] = 0;
   out_4215166279653193969[15] = 0;
   out_4215166279653193969[16] = 1;
   out_4215166279653193969[17] = 0;
   out_4215166279653193969[18] = 0;
   out_4215166279653193969[19] = 0;
   out_4215166279653193969[20] = 0;
   out_4215166279653193969[21] = 0;
   out_4215166279653193969[22] = 0;
   out_4215166279653193969[23] = 0;
   out_4215166279653193969[24] = 0;
   out_4215166279653193969[25] = 0;
   out_4215166279653193969[26] = 0;
   out_4215166279653193969[27] = 0;
   out_4215166279653193969[28] = 0;
   out_4215166279653193969[29] = 0;
   out_4215166279653193969[30] = 0;
   out_4215166279653193969[31] = 0;
   out_4215166279653193969[32] = 0;
   out_4215166279653193969[33] = 0;
   out_4215166279653193969[34] = 0;
   out_4215166279653193969[35] = 0;
   out_4215166279653193969[36] = 0;
   out_4215166279653193969[37] = 0;
   out_4215166279653193969[38] = 0;
   out_4215166279653193969[39] = 1;
   out_4215166279653193969[40] = 0;
   out_4215166279653193969[41] = 0;
   out_4215166279653193969[42] = 0;
   out_4215166279653193969[43] = 0;
   out_4215166279653193969[44] = 0;
   out_4215166279653193969[45] = 0;
   out_4215166279653193969[46] = 0;
   out_4215166279653193969[47] = 0;
   out_4215166279653193969[48] = 0;
   out_4215166279653193969[49] = 0;
   out_4215166279653193969[50] = 0;
   out_4215166279653193969[51] = 0;
   out_4215166279653193969[52] = 0;
   out_4215166279653193969[53] = 0;
   out_4215166279653193969[54] = 0;
   out_4215166279653193969[55] = 0;
   out_4215166279653193969[56] = 0;
   out_4215166279653193969[57] = 0;
   out_4215166279653193969[58] = 0;
   out_4215166279653193969[59] = 0;
   out_4215166279653193969[60] = 0;
   out_4215166279653193969[61] = 0;
   out_4215166279653193969[62] = 1;
   out_4215166279653193969[63] = 0;
   out_4215166279653193969[64] = 0;
   out_4215166279653193969[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7937023460616626552) {
  H(in_vec, out_7937023460616626552);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1687216722465635178) {
  err_fun(nom_x, delta_x, out_1687216722465635178);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1599895347954292229) {
  inv_err_fun(nom_x, true_x, out_1599895347954292229);
}
void live_H_mod_fun(double *state, double *out_1056906584894128593) {
  H_mod_fun(state, out_1056906584894128593);
}
void live_f_fun(double *state, double dt, double *out_183933638026890231) {
  f_fun(state,  dt, out_183933638026890231);
}
void live_F_fun(double *state, double dt, double *out_1040479320272208097) {
  F_fun(state,  dt, out_1040479320272208097);
}
void live_h_4(double *state, double *unused, double *out_3570086928689996447) {
  h_4(state, unused, out_3570086928689996447);
}
void live_H_4(double *state, double *unused, double *out_7714358732044892667) {
  H_4(state, unused, out_7714358732044892667);
}
void live_h_9(double *state, double *unused, double *out_4006471989357438461) {
  h_9(state, unused, out_4006471989357438461);
}
void live_H_9(double *state, double *unused, double *out_3445166406400211479) {
  H_9(state, unused, out_3445166406400211479);
}
void live_h_10(double *state, double *unused, double *out_4022074140549506913) {
  h_10(state, unused, out_4022074140549506913);
}
void live_H_10(double *state, double *unused, double *out_4941233296478487911) {
  H_10(state, unused, out_4941233296478487911);
}
void live_h_12(double *state, double *unused, double *out_4674873285621457998) {
  h_12(state, unused, out_4674873285621457998);
}
void live_H_12(double *state, double *unused, double *out_5712928933632697154) {
  H_12(state, unused, out_5712928933632697154);
}
void live_h_35(double *state, double *unused, double *out_1741169043564631776) {
  h_35(state, unused, out_1741169043564631776);
}
void live_H_35(double *state, double *unused, double *out_2967365901307683445) {
  H_35(state, unused, out_2967365901307683445);
}
void live_h_32(double *state, double *unused, double *out_2303378269810867446) {
  h_32(state, unused, out_2303378269810867446);
}
void live_H_32(double *state, double *unused, double *out_6862321551745590973) {
  H_32(state, unused, out_6862321551745590973);
}
void live_h_13(double *state, double *unused, double *out_765906276234838754) {
  h_13(state, unused, out_765906276234838754);
}
void live_H_13(double *state, double *unused, double *out_137717136315470619) {
  H_13(state, unused, out_137717136315470619);
}
void live_h_14(double *state, double *unused, double *out_4006471989357438461) {
  h_14(state, unused, out_4006471989357438461);
}
void live_H_14(double *state, double *unused, double *out_3445166406400211479) {
  H_14(state, unused, out_3445166406400211479);
}
void live_h_33(double *state, double *unused, double *out_2451336789265741965) {
  h_33(state, unused, out_2451336789265741965);
}
void live_H_33(double *state, double *unused, double *out_4215166279653193969) {
  H_33(state, unused, out_4215166279653193969);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
